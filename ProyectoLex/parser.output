Nonterminals useless in grammar

   file_buffer_symbol
   pointer_object_symbol
   result_type


Terminals unused in grammar

   ASSIGNMENT_PRECEDENCE
   "<>"
   "<="
   ">="
   POSITIVE
   NEGATIVE


Rules useless in grammar

  263 file_buffer_symbol: '^'

  264 pointer_object_symbol: '^'

  265 result_type: ordinal_type_identifier
  266            | real_type_identifier
  267            | pointer_type_identifier


State 355 conflicts: 1 shift/reduce
State 374 conflicts: 1 shift/reduce
State 399 conflicts: 1 shift/reduce


Grammar

    0 $accept: pascal $end

    1 pascal: program
    2       | regular_unit

    3 program: program_heading ';' block
    4        | program_heading ';' uses_clause ';' block

    5 program_heading: "program" IDENTIFIER
    6                | "program" IDENTIFIER '(' program_parameters ')'

    7 program_parameters: identifier_list

    8 uses_clause: "uses" identifier_list

    9 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part

   10 label_declaration_part: "label" label_list ';'
   11                       | /* empty */

   12 label_list: label_list ',' label
   13           | label

   14 $@1: /* empty */

   15 label: DECIMAL_INT $@1

   16 constant_declaration_part: "const" constant_declaration_list
   17                          | /* empty */

   18 constant_declaration_list: constant_declaration_list constant_declaration
   19                          | constant_declaration

   20 constant_declaration: IDENTIFIER '=' constant ';'

   21 $@2: /* empty */

   22 constant: constant_identifier $@2
   23         | sign constant_identifier
   24         | signed_number
   25         | QUOTED_STRING
   26         | QUOTED_CHAR

   27 constant_identifier: IDENTIFIER

   28 type_declaration_part: "type" type_declaration_list
   29                      | /* empty */

   30 type_declaration_list: type_declaration_list type_declaration
   31                      | type_declaration

   32 type_declaration: IDENTIFIER '=' type ';'

   33 variable_declaration_part: "var" variable_declaration_list
   34                          | /* empty */

   35 variable_declaration_list: variable_declaration_list variable_declaration
   36                          | variable_declaration

   37 variable_declaration: identifier_list ':' type ';'

   38 procedure_and_function_declaration_part: procedure_and_function_declaration_list
   39                                        | /* empty */

   40 procedure_and_function_declaration_list: procedure_and_function_declaration_list procedure_and_function_declaration
   41                                        | procedure_and_function_declaration

   42 procedure_and_function_declaration: procedure_declaration
   43                                   | function_declaration

   44 statement_part: compound_statement
   45               | /* empty */

   46 sign: '+'
   47     | '-'

   48 identifier_list: identifier_list ',' IDENTIFIER
   49                | IDENTIFIER

   50 type: simple_type
   51     | structured_type
   52     | pointer_type
   53     | IDENTIFIER

   54 simple_type: ordinal_type
   55            | real_type
   56            | string_type

   57 ordinal_type: subrange_type
   58             | enumerated_type
   59             | ordinal_type_identifier

   60 ordinal_type_identifier: "integer"
   61                        | "longint"
   62                        | "char"
   63                        | "boolean"
   64                        | function_call
   65                        | "word"

   66 type_boolean: "true"
   67             | "false"

   68 enumerated_type: '(' identifier_list ')'

   69 subrange_type: constant ".." constant

   70 real_type: real_type_identifier

   71 real_type_identifier: "real"

   72 string_type: "string" '[' DECIMAL_INT ']'

   73 structured_type: "packed" type_list
   74                | type_list

   75 type_list: array_type
   76          | set_type
   77          | file_type
   78          | record_type

   79 array_type: "array" '[' index_type_list ']' "of" type

   80 index_type_list: index_type_list ',' ordinal_type
   81                | ordinal_type

   82 record_type: "record" "end"
   83            | "record" field_list "end"

   84 field_list: fixed_part
   85           | fixed_part ';'
   86           | fixed_part ';' variant_part
   87           | fixed_part ';' variant_part ';'
   88           | variant_part
   89           | variant_part ';'

   90 fixed_part: fixed_part ';' field_declaration
   91           | field_declaration

   92 field_declaration: identifier_list ':' type

   93 variant_part: "case" tag_field_type "of" variant_list
   94             | "case" IDENTIFIER ':' tag_field_type "of" variant_list

   95 variant_list: variant_list ';' variant
   96             | variant

   97 variant: constant_list ':' '(' ')'
   98        | constant_list ':' '(' field_list ')'

   99 constant_list: constant_list ',' constant
  100              | constant

  101 tag_field_type: IDENTIFIER

  102 set_type: "set" "of" ordinal_type

  103 file_type: "file"
  104          | "of" type

  105 pointer_type: '^' base_type
  106             | pointer_type_identifier

  107 pointer_type_identifier: "nil"

  108 base_type: "integer"
  109          | "longint"
  110          | "char"
  111          | "boolean"
  112          | "string"
  113          | "record"
  114          | "file"
  115          | "array"
  116          | IDENTIFIER
  117          | "function"

  118 variable_reference: variable_identifier qualifier_list

  119 variable_identifier: IDENTIFIER

  120 qualifier_list: qualifier_list qualifier
  121               | qualifier

  122 qualifier: index
  123          | field_designator
  124          | '^'

  125 index: '[' expression_list ']'

  126 expression_list: expression_list ',' expression
  127                | expression

  128 field_designator: '.' IDENTIFIER

  129 unsigned_constant: unsigned_number
  130                  | QUOTED_STRING
  131                  | QUOTED_CHAR
  132                  | "nil"

  133 unsigned_number: DECIMAL_INT
  134                | HEXADECIMAL
  135                | REAL_DECIMAL

  136 signed_number: sign unsigned_number
  137              | unsigned_number

  138 factor: variable_reference
  139       | '@' variable_reference
  140       | unsigned_constant
  141       | function_call
  142       | set_constructor
  143       | '(' expression ')'
  144       | "not" factor
  145       | IDENTIFIER
  146       | type_boolean

  147 term: term term_operator_list factor
  148     | factor

  149 term_operator_list: '*'
  150                   | '/'
  151                   | "div"
  152                   | "mod"
  153                   | "and"

  154 simple_expression: sign simple_expression_term_operator_iterable
  155                  | simple_expression_term_operator_iterable

  156 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list term
  157                                         | term

  158 simple_expression_term_operator_list: '+'
  159                                     | '-'
  160                                     | "or"

  161 expression: simple_expression
  162           | simple_expression relational_operator simple_expression

  163 relational_operator: '='
  164                    | '<'
  165                    | '>'
  166                    | LE
  167                    | RE
  168                    | NOTEQUAL
  169                    | "in"

  170 function_call: function_identifier actual_parameter_list

  171 function_identifier: "function"
  172                    | IDENTIFIER

  173 actual_parameter_list: '(' actual_parameter_iterable ')'

  174 actual_parameter_iterable: actual_parameter_iterable ',' actual_parameter
  175                          | actual_parameter

  176 actual_parameter: expression
  177                 | procedure_identifier

  178 procedure_identifier: "write"
  179                     | "writeln"
  180                     | "read"
  181                     | "readln"

  182 set_constructor: '[' ']'
  183                | '[' member_group_list ']'

  184 member_group_list: member_group_list ',' member_group
  185                  | member_group

  186 member_group: expression
  187             | expression ".." expression

  188 statement: /* empty */
  189          | label ':'
  190          | label ':' simple_statement
  191          | label ':' structured_statement
  192          | simple_statement
  193          | structured_statement
  194          | IDENTIFIER

  195 simple_statement: assignment_statement
  196                 | procedure_statement
  197                 | goto_statement

  198 assignment_statement: variable_reference ":=" expression
  199                     | function_identifier ":=" expression

  200 procedure_statement: procedure_identifier
  201                    | procedure_identifier actual_parameter_list
  202                    | IDENTIFIER actual_parameter_list

  203 goto_statement: "goto" label

  204 structured_statement: compound_statement
  205                     | conditional_statement
  206                     | repetitive_statement
  207                     | with_statement

  208 compound_statement: "begin" statement_list "end"

  209 statement_list: statement_list ';' statement
  210               | statement

  211 conditional_statement: if_statement
  212                      | case_statement

  213 if_statement: "if" expression "then" statement
  214             | "if" expression "then" statement "else" statement

  215 case_statement: "case" expression "of" case_list "end"
  216               | "case" expression "of" case_list otherwise_clause "end"
  217               | "case" expression "of" case_list otherwise_clause ';' "end"
  218               | "case" expression "of" case_list ';' "end"

  219 case_list: case_list ';' case
  220          | case

  221 case: constant_list ':' statement

  222 otherwise_clause: ';' "otherwise" statement

  223 repetitive_statement: repeat_statement
  224                     | while_statement
  225                     | for_statement

  226 repeat_statement: "repeat" statement_list "until" expression

  227 while_statement: "while" expression "do" statement

  228 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" statement
  229              | "for" control_variable ":=" initial_value "downto" final_value "do" statement

  230 control_variable: IDENTIFIER

  231 initial_value: expression

  232 final_value: expression

  233 with_statement: "with" record_variable_reference_list "do" statement

  234 record_variable_reference_list: record_variable_reference_list ',' variable_reference
  235                               | variable_reference

  236 procedure_declaration: procedure_heading ';' procedure_body ';'

  237 procedure_body: block
  238               | "forward"
  239               | "external"

  240 procedure_heading: "procedure" IDENTIFIER
  241                  | "procedure" IDENTIFIER formal_parameter_list

  242 function_declaration: function_heading ';' function_body ';'

  243 function_body: block
  244              | "forward"
  245              | "external"

  246 function_heading: "function" IDENTIFIER ':' type
  247                 | "function" IDENTIFIER formal_parameter_list ':' type

  248 formal_parameter_list: '(' formal_parameter_list_iterable ')'

  249 formal_parameter_list_iterable: formal_parameter_list_iterable ';' formal_parameter_list_iterable_list
  250                               | formal_parameter_list_iterable_list

  251 formal_parameter_list_iterable_list: parameter_declaration
  252                                    | procedure_heading
  253                                    | function_heading

  254 parameter_declaration: "var" identifier_list ':' type_identifier
  255                      | identifier_list ':' type_identifier

  256 type_identifier: IDENTIFIER

  257 regular_unit: unit_heading ';' interface_part implementation_part "end" '.'

  258 unit_heading: "unit" IDENTIFIER

  259 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

  260 uses_clause_empty: uses_clause
  261                  | /* empty */

  262 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 68 97 98 143 173 248
')' (41) 6 68 97 98 143 173 248
'*' (42) 149
'+' (43) 46 158
',' (44) 12 48 80 99 126 174 184 234
'-' (45) 47 159
'.' (46) 128 257
'/' (47) 150
':' (58) 37 92 94 97 98 189 190 191 221 246 247 254 255
';' (59) 3 4 10 20 32 37 85 86 87 89 90 95 209 217 218 219 222 236
    242 249 257
'<' (60) 164
'=' (61) 20 32 163
'>' (62) 165
'@' (64) 139
'[' (91) 72 79 125 182 183
']' (93) 72 79 125 182 183
'^' (94) 105 124
error (256)
DECIMAL_INT (258) 15 72 133
HEXADECIMAL (259) 134
REAL_DECIMAL (260) 135
IDENTIFIER (261) 5 6 20 27 32 48 49 53 94 101 116 119 128 145 172 194
    202 230 240 241 246 247 256 258
QUOTED_STRING (262) 25 130
QUOTED_CHAR (263) 26 131
"program" (264) 5 6
"begin" (265) 208
"uses" (266) 8
"unit" (267) 258
"interface" (268) 259
"implementation" (269) 262
"label" (270) 10
"const" (271) 16
"type" (272) 28
"real" (273) 71
"integer" (274) 60 108
"longint" (275) 61 109
"word" (276) 65
"char" (277) 62 110
"boolean" (278) 63 111
"true" (279) 66
"false" (280) 67
"string" (281) 72 112
"packed" (282) 73
"array" (283) 79 115
"record" (284) 82 83 113
"end" (285) 82 83 208 215 216 217 218 257
"case" (286) 93 94 215 216 217 218
"otherwise" (287) 222
"of" (288) 79 93 94 102 104 215 216 217 218
"set" (289) 102
"var" (290) 33 254
"forward" (291) 238 244
"external" (292) 239 245
"function" (293) 117 171 246 247
"procedure" (294) 240 241
"file" (295) 103 114
"goto" (296) 203
"if" (297) 213 214
"then" (298) 213 214
"else" (299) 214
"repeat" (300) 226
"until" (301) 226
"while" (302) 227
"do" (303) 227 228 229 233
"for" (304) 228 229
"to" (305) 228
"downto" (306) 229
"with" (307) 233
"nil" (308) 107 132
"read" (309) 180
"readln" (310) 181
"write" (311) 178
"writeln" (312) 179
"in" (313) 169
"or" (314) 160
"div" (315) 151
"mod" (316) 152
"and" (317) 153
"not" (318) 144
ASSIGNMENT_PRECEDENCE (319)
":=" (320) 198 199 228 229
".." (321) 69 187
"<>" (322)
"<=" (323)
">=" (324)
RE (325) 167
LE (326) 166
NOTEQUAL (327) 168
POSITIVE (328)
NEGATIVE (329)


Nonterminals, with rules where they appear

$accept (92)
    on left: 0
pascal (93)
    on left: 1 2, on right: 0
program (94)
    on left: 3 4, on right: 1
program_heading (95)
    on left: 5 6, on right: 3 4
program_parameters (96)
    on left: 7, on right: 6
uses_clause (97)
    on left: 8, on right: 4 260
block (98)
    on left: 9, on right: 3 4 237 243
label_declaration_part (99)
    on left: 10 11, on right: 9
label_list (100)
    on left: 12 13, on right: 10 12
label (101)
    on left: 15, on right: 12 13 189 190 191 203
$@1 (102)
    on left: 14, on right: 15
constant_declaration_part (103)
    on left: 16 17, on right: 9 259 262
constant_declaration_list (104)
    on left: 18 19, on right: 16 18
constant_declaration (105)
    on left: 20, on right: 18 19
constant (106)
    on left: 22 23 24 25 26, on right: 20 69 99 100
$@2 (107)
    on left: 21, on right: 22
constant_identifier (108)
    on left: 27, on right: 22 23
type_declaration_part (109)
    on left: 28 29, on right: 9 259 262
type_declaration_list (110)
    on left: 30 31, on right: 28 30
type_declaration (111)
    on left: 32, on right: 30 31
variable_declaration_part (112)
    on left: 33 34, on right: 9 259 262
variable_declaration_list (113)
    on left: 35 36, on right: 33 35
variable_declaration (114)
    on left: 37, on right: 35 36
procedure_and_function_declaration_part (115)
    on left: 38 39, on right: 9 259 262
procedure_and_function_declaration_list (116)
    on left: 40 41, on right: 38 40
procedure_and_function_declaration (117)
    on left: 42 43, on right: 40 41
statement_part (118)
    on left: 44 45, on right: 9
sign (119)
    on left: 46 47, on right: 23 136 154
identifier_list (120)
    on left: 48 49, on right: 7 8 37 48 68 92 254 255
type (121)
    on left: 50 51 52 53, on right: 32 37 79 92 104 246 247
simple_type (122)
    on left: 54 55 56, on right: 50
ordinal_type (123)
    on left: 57 58 59, on right: 54 80 81 102
ordinal_type_identifier (124)
    on left: 60 61 62 63 64 65, on right: 59
type_boolean (125)
    on left: 66 67, on right: 146
enumerated_type (126)
    on left: 68, on right: 58
subrange_type (127)
    on left: 69, on right: 57
real_type (128)
    on left: 70, on right: 55
real_type_identifier (129)
    on left: 71, on right: 70
string_type (130)
    on left: 72, on right: 56
structured_type (131)
    on left: 73 74, on right: 51
type_list (132)
    on left: 75 76 77 78, on right: 73 74
array_type (133)
    on left: 79, on right: 75
index_type_list (134)
    on left: 80 81, on right: 79 80
record_type (135)
    on left: 82 83, on right: 78
field_list (136)
    on left: 84 85 86 87 88 89, on right: 83 98
fixed_part (137)
    on left: 90 91, on right: 84 85 86 87 90
field_declaration (138)
    on left: 92, on right: 90 91
variant_part (139)
    on left: 93 94, on right: 86 87 88 89
variant_list (140)
    on left: 95 96, on right: 93 94 95
variant (141)
    on left: 97 98, on right: 95 96
constant_list (142)
    on left: 99 100, on right: 97 98 99 221
tag_field_type (143)
    on left: 101, on right: 93 94
set_type (144)
    on left: 102, on right: 76
file_type (145)
    on left: 103 104, on right: 77
pointer_type (146)
    on left: 105 106, on right: 52
pointer_type_identifier (147)
    on left: 107, on right: 106
base_type (148)
    on left: 108 109 110 111 112 113 114 115 116 117, on right: 105
variable_reference (149)
    on left: 118, on right: 138 139 198 234 235
variable_identifier (150)
    on left: 119, on right: 118
qualifier_list (151)
    on left: 120 121, on right: 118 120
qualifier (152)
    on left: 122 123 124, on right: 120 121
index (153)
    on left: 125, on right: 122
expression_list (154)
    on left: 126 127, on right: 125 126
field_designator (155)
    on left: 128, on right: 123
unsigned_constant (156)
    on left: 129 130 131 132, on right: 140
unsigned_number (157)
    on left: 133 134 135, on right: 129 136 137
signed_number (158)
    on left: 136 137, on right: 24
factor (159)
    on left: 138 139 140 141 142 143 144 145 146, on right: 144 147
    148
term (160)
    on left: 147 148, on right: 147 156 157
term_operator_list (161)
    on left: 149 150 151 152 153, on right: 147
simple_expression (162)
    on left: 154 155, on right: 161 162
simple_expression_term_operator_iterable (163)
    on left: 156 157, on right: 154 155 156
simple_expression_term_operator_list (164)
    on left: 158 159 160, on right: 156
expression (165)
    on left: 161 162, on right: 126 127 143 176 186 187 198 199 213
    214 215 216 217 218 226 227 231 232
relational_operator (166)
    on left: 163 164 165 166 167 168 169, on right: 162
function_call (167)
    on left: 170, on right: 64 141
function_identifier (168)
    on left: 171 172, on right: 170 199
actual_parameter_list (169)
    on left: 173, on right: 170 201 202
actual_parameter_iterable (170)
    on left: 174 175, on right: 173 174
actual_parameter (171)
    on left: 176 177, on right: 174 175
procedure_identifier (172)
    on left: 178 179 180 181, on right: 177 200 201
set_constructor (173)
    on left: 182 183, on right: 142
member_group_list (174)
    on left: 184 185, on right: 183 184
member_group (175)
    on left: 186 187, on right: 184 185
statement (176)
    on left: 188 189 190 191 192 193 194, on right: 209 210 213 214
    221 222 227 228 229 233
simple_statement (177)
    on left: 195 196 197, on right: 190 192
assignment_statement (178)
    on left: 198 199, on right: 195
procedure_statement (179)
    on left: 200 201 202, on right: 196
goto_statement (180)
    on left: 203, on right: 197
structured_statement (181)
    on left: 204 205 206 207, on right: 191 193
compound_statement (182)
    on left: 208, on right: 44 204
statement_list (183)
    on left: 209 210, on right: 208 209 226
conditional_statement (184)
    on left: 211 212, on right: 205
if_statement (185)
    on left: 213 214, on right: 211
case_statement (186)
    on left: 215 216 217 218, on right: 212
case_list (187)
    on left: 219 220, on right: 215 216 217 218 219
case (188)
    on left: 221, on right: 219 220
otherwise_clause (189)
    on left: 222, on right: 216 217
repetitive_statement (190)
    on left: 223 224 225, on right: 206
repeat_statement (191)
    on left: 226, on right: 223
while_statement (192)
    on left: 227, on right: 224
for_statement (193)
    on left: 228 229, on right: 225
control_variable (194)
    on left: 230, on right: 228 229
initial_value (195)
    on left: 231, on right: 228 229
final_value (196)
    on left: 232, on right: 228 229
with_statement (197)
    on left: 233, on right: 207
record_variable_reference_list (198)
    on left: 234 235, on right: 233 234
procedure_declaration (199)
    on left: 236, on right: 42
procedure_body (200)
    on left: 237 238 239, on right: 236
procedure_heading (201)
    on left: 240 241, on right: 236 252
function_declaration (202)
    on left: 242, on right: 43
function_body (203)
    on left: 243 244 245, on right: 242
function_heading (204)
    on left: 246 247, on right: 242 253
formal_parameter_list (205)
    on left: 248, on right: 241 247
formal_parameter_list_iterable (206)
    on left: 249 250, on right: 248 249
formal_parameter_list_iterable_list (207)
    on left: 251 252 253, on right: 249 250
parameter_declaration (208)
    on left: 254 255, on right: 251
type_identifier (209)
    on left: 256, on right: 254 255
regular_unit (210)
    on left: 257, on right: 2
unit_heading (211)
    on left: 258, on right: 257
interface_part (212)
    on left: 259, on right: 257
uses_clause_empty (213)
    on left: 260 261, on right: 259
implementation_part (214)
    on left: 262, on right: 257


state 0

    0 $accept: . pascal $end

    "program"  shift, and go to state 1
    "unit"     shift, and go to state 2

    pascal           go to state 3
    program          go to state 4
    program_heading  go to state 5
    regular_unit     go to state 6
    unit_heading     go to state 7


state 1

    5 program_heading: "program" . IDENTIFIER
    6                | "program" . IDENTIFIER '(' program_parameters ')'

    IDENTIFIER  shift, and go to state 8


state 2

  258 unit_heading: "unit" . IDENTIFIER

    IDENTIFIER  shift, and go to state 9


state 3

    0 $accept: pascal . $end

    $end  shift, and go to state 10


state 4

    1 pascal: program .

    $default  reduce using rule 1 (pascal)


state 5

    3 program: program_heading . ';' block
    4        | program_heading . ';' uses_clause ';' block

    ';'  shift, and go to state 11


state 6

    2 pascal: regular_unit .

    $default  reduce using rule 2 (pascal)


state 7

  257 regular_unit: unit_heading . ';' interface_part implementation_part "end" '.'

    ';'  shift, and go to state 12


state 8

    5 program_heading: "program" IDENTIFIER .
    6                | "program" IDENTIFIER . '(' program_parameters ')'

    '('  shift, and go to state 13

    $default  reduce using rule 5 (program_heading)


state 9

  258 unit_heading: "unit" IDENTIFIER .

    $default  reduce using rule 258 (unit_heading)


state 10

    0 $accept: pascal $end .

    $default  accept


state 11

    3 program: program_heading ';' . block
    4        | program_heading ';' . uses_clause ';' block

    "uses"   shift, and go to state 14
    "label"  shift, and go to state 15

    $default  reduce using rule 11 (label_declaration_part)

    uses_clause             go to state 16
    block                   go to state 17
    label_declaration_part  go to state 18


state 12

  257 regular_unit: unit_heading ';' . interface_part implementation_part "end" '.'

    "interface"  shift, and go to state 19

    interface_part  go to state 20


state 13

    6 program_heading: "program" IDENTIFIER '(' . program_parameters ')'

    IDENTIFIER  shift, and go to state 21

    program_parameters  go to state 22
    identifier_list     go to state 23


state 14

    8 uses_clause: "uses" . identifier_list

    IDENTIFIER  shift, and go to state 21

    identifier_list  go to state 24


state 15

   10 label_declaration_part: "label" . label_list ';'

    DECIMAL_INT  shift, and go to state 25

    label_list  go to state 26
    label       go to state 27


state 16

    4 program: program_heading ';' uses_clause . ';' block

    ';'  shift, and go to state 28


state 17

    3 program: program_heading ';' block .

    $default  reduce using rule 3 (program)


state 18

    9 block: label_declaration_part . constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part

    "const"  shift, and go to state 29

    $default  reduce using rule 17 (constant_declaration_part)

    constant_declaration_part  go to state 30


state 19

  259 interface_part: "interface" . uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "uses"  shift, and go to state 14

    $default  reduce using rule 261 (uses_clause_empty)

    uses_clause        go to state 31
    uses_clause_empty  go to state 32


state 20

  257 regular_unit: unit_heading ';' interface_part . implementation_part "end" '.'

    "implementation"  shift, and go to state 33

    implementation_part  go to state 34


state 21

   49 identifier_list: IDENTIFIER .

    $default  reduce using rule 49 (identifier_list)


state 22

    6 program_heading: "program" IDENTIFIER '(' program_parameters . ')'

    ')'  shift, and go to state 35


state 23

    7 program_parameters: identifier_list .
   48 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 36

    $default  reduce using rule 7 (program_parameters)


state 24

    8 uses_clause: "uses" identifier_list .
   48 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 36

    $default  reduce using rule 8 (uses_clause)


state 25

   15 label: DECIMAL_INT . $@1

    $default  reduce using rule 14 ($@1)

    $@1  go to state 37


state 26

   10 label_declaration_part: "label" label_list . ';'
   12 label_list: label_list . ',' label

    ';'  shift, and go to state 38
    ','  shift, and go to state 39


state 27

   13 label_list: label .

    $default  reduce using rule 13 (label_list)


state 28

    4 program: program_heading ';' uses_clause ';' . block

    "label"  shift, and go to state 15

    $default  reduce using rule 11 (label_declaration_part)

    block                   go to state 40
    label_declaration_part  go to state 18


state 29

   16 constant_declaration_part: "const" . constant_declaration_list

    IDENTIFIER  shift, and go to state 41

    constant_declaration_list  go to state 42
    constant_declaration       go to state 43


state 30

    9 block: label_declaration_part constant_declaration_part . type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part

    "type"  shift, and go to state 44

    $default  reduce using rule 29 (type_declaration_part)

    type_declaration_part  go to state 45


state 31

  260 uses_clause_empty: uses_clause .

    $default  reduce using rule 260 (uses_clause_empty)


state 32

  259 interface_part: "interface" uses_clause_empty . constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "const"  shift, and go to state 29

    $default  reduce using rule 17 (constant_declaration_part)

    constant_declaration_part  go to state 46


state 33

  262 implementation_part: "implementation" . constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "const"  shift, and go to state 29

    $default  reduce using rule 17 (constant_declaration_part)

    constant_declaration_part  go to state 47


state 34

  257 regular_unit: unit_heading ';' interface_part implementation_part . "end" '.'

    "end"  shift, and go to state 48


state 35

    6 program_heading: "program" IDENTIFIER '(' program_parameters ')' .

    $default  reduce using rule 6 (program_heading)


state 36

   48 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 49


state 37

   15 label: DECIMAL_INT $@1 .

    $default  reduce using rule 15 (label)


state 38

   10 label_declaration_part: "label" label_list ';' .

    $default  reduce using rule 10 (label_declaration_part)


state 39

   12 label_list: label_list ',' . label

    DECIMAL_INT  shift, and go to state 25

    label  go to state 50


state 40

    4 program: program_heading ';' uses_clause ';' block .

    $default  reduce using rule 4 (program)


state 41

   20 constant_declaration: IDENTIFIER . '=' constant ';'

    '='  shift, and go to state 51


state 42

   16 constant_declaration_part: "const" constant_declaration_list .
   18 constant_declaration_list: constant_declaration_list . constant_declaration

    IDENTIFIER  shift, and go to state 41

    $default  reduce using rule 16 (constant_declaration_part)

    constant_declaration  go to state 52


state 43

   19 constant_declaration_list: constant_declaration .

    $default  reduce using rule 19 (constant_declaration_list)


state 44

   28 type_declaration_part: "type" . type_declaration_list

    IDENTIFIER  shift, and go to state 53

    type_declaration_list  go to state 54
    type_declaration       go to state 55


state 45

    9 block: label_declaration_part constant_declaration_part type_declaration_part . variable_declaration_part procedure_and_function_declaration_part statement_part

    "var"  shift, and go to state 56

    $default  reduce using rule 34 (variable_declaration_part)

    variable_declaration_part  go to state 57


state 46

  259 interface_part: "interface" uses_clause_empty constant_declaration_part . type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "type"  shift, and go to state 44

    $default  reduce using rule 29 (type_declaration_part)

    type_declaration_part  go to state 58


state 47

  262 implementation_part: "implementation" constant_declaration_part . type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "type"  shift, and go to state 44

    $default  reduce using rule 29 (type_declaration_part)

    type_declaration_part  go to state 59


state 48

  257 regular_unit: unit_heading ';' interface_part implementation_part "end" . '.'

    '.'  shift, and go to state 60


state 49

   48 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 48 (identifier_list)


state 50

   12 label_list: label_list ',' label .

    $default  reduce using rule 12 (label_list)


state 51

   20 constant_declaration: IDENTIFIER '=' . constant ';'

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68

    constant             go to state 69
    constant_identifier  go to state 70
    sign                 go to state 71
    unsigned_number      go to state 72
    signed_number        go to state 73


state 52

   18 constant_declaration_list: constant_declaration_list constant_declaration .

    $default  reduce using rule 18 (constant_declaration_list)


state 53

   32 type_declaration: IDENTIFIER . '=' type ';'

    '='  shift, and go to state 74


state 54

   28 type_declaration_part: "type" type_declaration_list .
   30 type_declaration_list: type_declaration_list . type_declaration

    IDENTIFIER  shift, and go to state 53

    $default  reduce using rule 28 (type_declaration_part)

    type_declaration  go to state 75


state 55

   31 type_declaration_list: type_declaration .

    $default  reduce using rule 31 (type_declaration_list)


state 56

   33 variable_declaration_part: "var" . variable_declaration_list

    IDENTIFIER  shift, and go to state 21

    variable_declaration_list  go to state 76
    variable_declaration       go to state 77
    identifier_list            go to state 78


state 57

    9 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part . procedure_and_function_declaration_part statement_part

    "function"   shift, and go to state 79
    "procedure"  shift, and go to state 80

    $default  reduce using rule 39 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 81
    procedure_and_function_declaration_list  go to state 82
    procedure_and_function_declaration       go to state 83
    procedure_declaration                    go to state 84
    procedure_heading                        go to state 85
    function_declaration                     go to state 86
    function_heading                         go to state 87


state 58

  259 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part . variable_declaration_part procedure_and_function_declaration_part

    "var"  shift, and go to state 56

    $default  reduce using rule 34 (variable_declaration_part)

    variable_declaration_part  go to state 88


state 59

  262 implementation_part: "implementation" constant_declaration_part type_declaration_part . variable_declaration_part procedure_and_function_declaration_part

    "var"  shift, and go to state 56

    $default  reduce using rule 34 (variable_declaration_part)

    variable_declaration_part  go to state 89


state 60

  257 regular_unit: unit_heading ';' interface_part implementation_part "end" '.' .

    $default  reduce using rule 257 (regular_unit)


state 61

  133 unsigned_number: DECIMAL_INT .

    $default  reduce using rule 133 (unsigned_number)


state 62

  134 unsigned_number: HEXADECIMAL .

    $default  reduce using rule 134 (unsigned_number)


state 63

  135 unsigned_number: REAL_DECIMAL .

    $default  reduce using rule 135 (unsigned_number)


state 64

   27 constant_identifier: IDENTIFIER .

    $default  reduce using rule 27 (constant_identifier)


state 65

   25 constant: QUOTED_STRING .

    $default  reduce using rule 25 (constant)


state 66

   26 constant: QUOTED_CHAR .

    $default  reduce using rule 26 (constant)


state 67

   46 sign: '+' .

    $default  reduce using rule 46 (sign)


state 68

   47 sign: '-' .

    $default  reduce using rule 47 (sign)


state 69

   20 constant_declaration: IDENTIFIER '=' constant . ';'

    ';'  shift, and go to state 90


state 70

   22 constant: constant_identifier . $@2

    $default  reduce using rule 21 ($@2)

    $@2  go to state 91


state 71

   23 constant: sign . constant_identifier
  136 signed_number: sign . unsigned_number

    DECIMAL_INT   shift, and go to state 61
    HEXADECIMAL   shift, and go to state 62
    REAL_DECIMAL  shift, and go to state 63
    IDENTIFIER    shift, and go to state 64

    constant_identifier  go to state 92
    unsigned_number      go to state 93


state 72

  137 signed_number: unsigned_number .

    $default  reduce using rule 137 (signed_number)


state 73

   24 constant: signed_number .

    $default  reduce using rule 24 (constant)


state 74

   32 type_declaration: IDENTIFIER '=' . type ';'

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 94
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 95
    "integer"      shift, and go to state 96
    "longint"      shift, and go to state 97
    "word"         shift, and go to state 98
    "char"         shift, and go to state 99
    "boolean"      shift, and go to state 100
    "string"       shift, and go to state 101
    "packed"       shift, and go to state 102
    "array"        shift, and go to state 103
    "record"       shift, and go to state 104
    "of"           shift, and go to state 105
    "set"          shift, and go to state 106
    "function"     shift, and go to state 107
    "file"         shift, and go to state 108
    "nil"          shift, and go to state 109
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 110
    '^'            shift, and go to state 111

    constant                 go to state 112
    constant_identifier      go to state 70
    sign                     go to state 71
    type                     go to state 113
    simple_type              go to state 114
    ordinal_type             go to state 115
    ordinal_type_identifier  go to state 116
    enumerated_type          go to state 117
    subrange_type            go to state 118
    real_type                go to state 119
    real_type_identifier     go to state 120
    string_type              go to state 121
    structured_type          go to state 122
    type_list                go to state 123
    array_type               go to state 124
    record_type              go to state 125
    set_type                 go to state 126
    file_type                go to state 127
    pointer_type             go to state 128
    pointer_type_identifier  go to state 129
    unsigned_number          go to state 72
    signed_number            go to state 73
    function_call            go to state 130
    function_identifier      go to state 131


state 75

   30 type_declaration_list: type_declaration_list type_declaration .

    $default  reduce using rule 30 (type_declaration_list)


state 76

   33 variable_declaration_part: "var" variable_declaration_list .
   35 variable_declaration_list: variable_declaration_list . variable_declaration

    IDENTIFIER  shift, and go to state 21

    $default  reduce using rule 33 (variable_declaration_part)

    variable_declaration  go to state 132
    identifier_list       go to state 78


state 77

   36 variable_declaration_list: variable_declaration .

    $default  reduce using rule 36 (variable_declaration_list)


state 78

   37 variable_declaration: identifier_list . ':' type ';'
   48 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 36
    ':'  shift, and go to state 133


state 79

  246 function_heading: "function" . IDENTIFIER ':' type
  247                 | "function" . IDENTIFIER formal_parameter_list ':' type

    IDENTIFIER  shift, and go to state 134


state 80

  240 procedure_heading: "procedure" . IDENTIFIER
  241                  | "procedure" . IDENTIFIER formal_parameter_list

    IDENTIFIER  shift, and go to state 135


state 81

    9 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part . statement_part

    "begin"  shift, and go to state 136

    $default  reduce using rule 45 (statement_part)

    statement_part      go to state 137
    compound_statement  go to state 138


state 82

   38 procedure_and_function_declaration_part: procedure_and_function_declaration_list .
   40 procedure_and_function_declaration_list: procedure_and_function_declaration_list . procedure_and_function_declaration

    "function"   shift, and go to state 79
    "procedure"  shift, and go to state 80

    $default  reduce using rule 38 (procedure_and_function_declaration_part)

    procedure_and_function_declaration  go to state 139
    procedure_declaration               go to state 84
    procedure_heading                   go to state 85
    function_declaration                go to state 86
    function_heading                    go to state 87


state 83

   41 procedure_and_function_declaration_list: procedure_and_function_declaration .

    $default  reduce using rule 41 (procedure_and_function_declaration_list)


state 84

   42 procedure_and_function_declaration: procedure_declaration .

    $default  reduce using rule 42 (procedure_and_function_declaration)


state 85

  236 procedure_declaration: procedure_heading . ';' procedure_body ';'

    ';'  shift, and go to state 140


state 86

   43 procedure_and_function_declaration: function_declaration .

    $default  reduce using rule 43 (procedure_and_function_declaration)


state 87

  242 function_declaration: function_heading . ';' function_body ';'

    ';'  shift, and go to state 141


state 88

  259 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part . procedure_and_function_declaration_part

    "function"   shift, and go to state 79
    "procedure"  shift, and go to state 80

    $default  reduce using rule 39 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 142
    procedure_and_function_declaration_list  go to state 82
    procedure_and_function_declaration       go to state 83
    procedure_declaration                    go to state 84
    procedure_heading                        go to state 85
    function_declaration                     go to state 86
    function_heading                         go to state 87


state 89

  262 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part . procedure_and_function_declaration_part

    "function"   shift, and go to state 79
    "procedure"  shift, and go to state 80

    $default  reduce using rule 39 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 143
    procedure_and_function_declaration_list  go to state 82
    procedure_and_function_declaration       go to state 83
    procedure_declaration                    go to state 84
    procedure_heading                        go to state 85
    function_declaration                     go to state 86
    function_heading                         go to state 87


state 90

   20 constant_declaration: IDENTIFIER '=' constant ';' .

    $default  reduce using rule 20 (constant_declaration)


state 91

   22 constant: constant_identifier $@2 .

    $default  reduce using rule 22 (constant)


state 92

   23 constant: sign constant_identifier .

    $default  reduce using rule 23 (constant)


state 93

  136 signed_number: sign unsigned_number .

    $default  reduce using rule 136 (signed_number)


state 94

   27 constant_identifier: IDENTIFIER .
   53 type: IDENTIFIER .
  172 function_identifier: IDENTIFIER .

    ".."      reduce using rule 27 (constant_identifier)
    '('       reduce using rule 172 (function_identifier)
    $default  reduce using rule 53 (type)


state 95

   71 real_type_identifier: "real" .

    $default  reduce using rule 71 (real_type_identifier)


state 96

   60 ordinal_type_identifier: "integer" .

    $default  reduce using rule 60 (ordinal_type_identifier)


state 97

   61 ordinal_type_identifier: "longint" .

    $default  reduce using rule 61 (ordinal_type_identifier)


state 98

   65 ordinal_type_identifier: "word" .

    $default  reduce using rule 65 (ordinal_type_identifier)


state 99

   62 ordinal_type_identifier: "char" .

    $default  reduce using rule 62 (ordinal_type_identifier)


state 100

   63 ordinal_type_identifier: "boolean" .

    $default  reduce using rule 63 (ordinal_type_identifier)


state 101

   72 string_type: "string" . '[' DECIMAL_INT ']'

    '['  shift, and go to state 144


state 102

   73 structured_type: "packed" . type_list

    "array"   shift, and go to state 103
    "record"  shift, and go to state 104
    "of"      shift, and go to state 105
    "set"     shift, and go to state 106
    "file"    shift, and go to state 108

    type_list    go to state 145
    array_type   go to state 124
    record_type  go to state 125
    set_type     go to state 126
    file_type    go to state 127


state 103

   79 array_type: "array" . '[' index_type_list ']' "of" type

    '['  shift, and go to state 146


state 104

   82 record_type: "record" . "end"
   83            | "record" . field_list "end"

    IDENTIFIER  shift, and go to state 21
    "end"       shift, and go to state 147
    "case"      shift, and go to state 148

    identifier_list    go to state 149
    field_list         go to state 150
    fixed_part         go to state 151
    field_declaration  go to state 152
    variant_part       go to state 153


state 105

  104 file_type: "of" . type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 94
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 95
    "integer"      shift, and go to state 96
    "longint"      shift, and go to state 97
    "word"         shift, and go to state 98
    "char"         shift, and go to state 99
    "boolean"      shift, and go to state 100
    "string"       shift, and go to state 101
    "packed"       shift, and go to state 102
    "array"        shift, and go to state 103
    "record"       shift, and go to state 104
    "of"           shift, and go to state 105
    "set"          shift, and go to state 106
    "function"     shift, and go to state 107
    "file"         shift, and go to state 108
    "nil"          shift, and go to state 109
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 110
    '^'            shift, and go to state 111

    constant                 go to state 112
    constant_identifier      go to state 70
    sign                     go to state 71
    type                     go to state 154
    simple_type              go to state 114
    ordinal_type             go to state 115
    ordinal_type_identifier  go to state 116
    enumerated_type          go to state 117
    subrange_type            go to state 118
    real_type                go to state 119
    real_type_identifier     go to state 120
    string_type              go to state 121
    structured_type          go to state 122
    type_list                go to state 123
    array_type               go to state 124
    record_type              go to state 125
    set_type                 go to state 126
    file_type                go to state 127
    pointer_type             go to state 128
    pointer_type_identifier  go to state 129
    unsigned_number          go to state 72
    signed_number            go to state 73
    function_call            go to state 130
    function_identifier      go to state 131


state 106

  102 set_type: "set" . "of" ordinal_type

    "of"  shift, and go to state 155


state 107

  171 function_identifier: "function" .

    $default  reduce using rule 171 (function_identifier)


state 108

  103 file_type: "file" .

    $default  reduce using rule 103 (file_type)


state 109

  107 pointer_type_identifier: "nil" .

    $default  reduce using rule 107 (pointer_type_identifier)


state 110

   68 enumerated_type: '(' . identifier_list ')'

    IDENTIFIER  shift, and go to state 21

    identifier_list  go to state 156


state 111

  105 pointer_type: '^' . base_type

    IDENTIFIER  shift, and go to state 157
    "integer"   shift, and go to state 158
    "longint"   shift, and go to state 159
    "char"      shift, and go to state 160
    "boolean"   shift, and go to state 161
    "string"    shift, and go to state 162
    "array"     shift, and go to state 163
    "record"    shift, and go to state 164
    "function"  shift, and go to state 165
    "file"      shift, and go to state 166

    base_type  go to state 167


state 112

   69 subrange_type: constant . ".." constant

    ".."  shift, and go to state 168


state 113

   32 type_declaration: IDENTIFIER '=' type . ';'

    ';'  shift, and go to state 169


state 114

   50 type: simple_type .

    $default  reduce using rule 50 (type)


state 115

   54 simple_type: ordinal_type .

    $default  reduce using rule 54 (simple_type)


state 116

   59 ordinal_type: ordinal_type_identifier .

    $default  reduce using rule 59 (ordinal_type)


state 117

   58 ordinal_type: enumerated_type .

    $default  reduce using rule 58 (ordinal_type)


state 118

   57 ordinal_type: subrange_type .

    $default  reduce using rule 57 (ordinal_type)


state 119

   55 simple_type: real_type .

    $default  reduce using rule 55 (simple_type)


state 120

   70 real_type: real_type_identifier .

    $default  reduce using rule 70 (real_type)


state 121

   56 simple_type: string_type .

    $default  reduce using rule 56 (simple_type)


state 122

   51 type: structured_type .

    $default  reduce using rule 51 (type)


state 123

   74 structured_type: type_list .

    $default  reduce using rule 74 (structured_type)


state 124

   75 type_list: array_type .

    $default  reduce using rule 75 (type_list)


state 125

   78 type_list: record_type .

    $default  reduce using rule 78 (type_list)


state 126

   76 type_list: set_type .

    $default  reduce using rule 76 (type_list)


state 127

   77 type_list: file_type .

    $default  reduce using rule 77 (type_list)


state 128

   52 type: pointer_type .

    $default  reduce using rule 52 (type)


state 129

  106 pointer_type: pointer_type_identifier .

    $default  reduce using rule 106 (pointer_type)


state 130

   64 ordinal_type_identifier: function_call .

    $default  reduce using rule 64 (ordinal_type_identifier)


state 131

  170 function_call: function_identifier . actual_parameter_list

    '('  shift, and go to state 170

    actual_parameter_list  go to state 171


state 132

   35 variable_declaration_list: variable_declaration_list variable_declaration .

    $default  reduce using rule 35 (variable_declaration_list)


state 133

   37 variable_declaration: identifier_list ':' . type ';'

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 94
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 95
    "integer"      shift, and go to state 96
    "longint"      shift, and go to state 97
    "word"         shift, and go to state 98
    "char"         shift, and go to state 99
    "boolean"      shift, and go to state 100
    "string"       shift, and go to state 101
    "packed"       shift, and go to state 102
    "array"        shift, and go to state 103
    "record"       shift, and go to state 104
    "of"           shift, and go to state 105
    "set"          shift, and go to state 106
    "function"     shift, and go to state 107
    "file"         shift, and go to state 108
    "nil"          shift, and go to state 109
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 110
    '^'            shift, and go to state 111

    constant                 go to state 112
    constant_identifier      go to state 70
    sign                     go to state 71
    type                     go to state 172
    simple_type              go to state 114
    ordinal_type             go to state 115
    ordinal_type_identifier  go to state 116
    enumerated_type          go to state 117
    subrange_type            go to state 118
    real_type                go to state 119
    real_type_identifier     go to state 120
    string_type              go to state 121
    structured_type          go to state 122
    type_list                go to state 123
    array_type               go to state 124
    record_type              go to state 125
    set_type                 go to state 126
    file_type                go to state 127
    pointer_type             go to state 128
    pointer_type_identifier  go to state 129
    unsigned_number          go to state 72
    signed_number            go to state 73
    function_call            go to state 130
    function_identifier      go to state 131


state 134

  246 function_heading: "function" IDENTIFIER . ':' type
  247                 | "function" IDENTIFIER . formal_parameter_list ':' type

    '('  shift, and go to state 173
    ':'  shift, and go to state 174

    formal_parameter_list  go to state 175


state 135

  240 procedure_heading: "procedure" IDENTIFIER .
  241                  | "procedure" IDENTIFIER . formal_parameter_list

    '('  shift, and go to state 173

    $default  reduce using rule 240 (procedure_heading)

    formal_parameter_list  go to state 176


state 136

  208 compound_statement: "begin" . statement_list "end"

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 136
    "case"       shift, and go to state 178
    "function"   shift, and go to state 107
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 188 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 194
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    statement_list         go to state 201
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 137

    9 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part .

    $default  reduce using rule 9 (block)


state 138

   44 statement_part: compound_statement .

    $default  reduce using rule 44 (statement_part)


state 139

   40 procedure_and_function_declaration_list: procedure_and_function_declaration_list procedure_and_function_declaration .

    $default  reduce using rule 40 (procedure_and_function_declaration_list)


state 140

  236 procedure_declaration: procedure_heading ';' . procedure_body ';'

    "label"     shift, and go to state 15
    "forward"   shift, and go to state 210
    "external"  shift, and go to state 211

    $default  reduce using rule 11 (label_declaration_part)

    block                   go to state 212
    label_declaration_part  go to state 18
    procedure_body          go to state 213


state 141

  242 function_declaration: function_heading ';' . function_body ';'

    "label"     shift, and go to state 15
    "forward"   shift, and go to state 214
    "external"  shift, and go to state 215

    $default  reduce using rule 11 (label_declaration_part)

    block                   go to state 216
    label_declaration_part  go to state 18
    function_body           go to state 217


state 142

  259 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part .

    $default  reduce using rule 259 (interface_part)


state 143

  262 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part .

    $default  reduce using rule 262 (implementation_part)


state 144

   72 string_type: "string" '[' . DECIMAL_INT ']'

    DECIMAL_INT  shift, and go to state 218


state 145

   73 structured_type: "packed" type_list .

    $default  reduce using rule 73 (structured_type)


state 146

   79 array_type: "array" '[' . index_type_list ']' "of" type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "integer"      shift, and go to state 96
    "longint"      shift, and go to state 97
    "word"         shift, and go to state 98
    "char"         shift, and go to state 99
    "boolean"      shift, and go to state 100
    "function"     shift, and go to state 107
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 110

    constant                 go to state 112
    constant_identifier      go to state 70
    sign                     go to state 71
    ordinal_type             go to state 220
    ordinal_type_identifier  go to state 116
    enumerated_type          go to state 117
    subrange_type            go to state 118
    index_type_list          go to state 221
    unsigned_number          go to state 72
    signed_number            go to state 73
    function_call            go to state 130
    function_identifier      go to state 131


state 147

   82 record_type: "record" "end" .

    $default  reduce using rule 82 (record_type)


state 148

   93 variant_part: "case" . tag_field_type "of" variant_list
   94             | "case" . IDENTIFIER ':' tag_field_type "of" variant_list

    IDENTIFIER  shift, and go to state 222

    tag_field_type  go to state 223


state 149

   48 identifier_list: identifier_list . ',' IDENTIFIER
   92 field_declaration: identifier_list . ':' type

    ','  shift, and go to state 36
    ':'  shift, and go to state 224


state 150

   83 record_type: "record" field_list . "end"

    "end"  shift, and go to state 225


state 151

   84 field_list: fixed_part .
   85           | fixed_part . ';'
   86           | fixed_part . ';' variant_part
   87           | fixed_part . ';' variant_part ';'
   90 fixed_part: fixed_part . ';' field_declaration

    ';'  shift, and go to state 226

    $default  reduce using rule 84 (field_list)


state 152

   91 fixed_part: field_declaration .

    $default  reduce using rule 91 (fixed_part)


state 153

   88 field_list: variant_part .
   89           | variant_part . ';'

    ';'  shift, and go to state 227

    $default  reduce using rule 88 (field_list)


state 154

  104 file_type: "of" type .

    $default  reduce using rule 104 (file_type)


state 155

  102 set_type: "set" "of" . ordinal_type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "integer"      shift, and go to state 96
    "longint"      shift, and go to state 97
    "word"         shift, and go to state 98
    "char"         shift, and go to state 99
    "boolean"      shift, and go to state 100
    "function"     shift, and go to state 107
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 110

    constant                 go to state 112
    constant_identifier      go to state 70
    sign                     go to state 71
    ordinal_type             go to state 228
    ordinal_type_identifier  go to state 116
    enumerated_type          go to state 117
    subrange_type            go to state 118
    unsigned_number          go to state 72
    signed_number            go to state 73
    function_call            go to state 130
    function_identifier      go to state 131


state 156

   48 identifier_list: identifier_list . ',' IDENTIFIER
   68 enumerated_type: '(' identifier_list . ')'

    ')'  shift, and go to state 229
    ','  shift, and go to state 36


state 157

  116 base_type: IDENTIFIER .

    $default  reduce using rule 116 (base_type)


state 158

  108 base_type: "integer" .

    $default  reduce using rule 108 (base_type)


state 159

  109 base_type: "longint" .

    $default  reduce using rule 109 (base_type)


state 160

  110 base_type: "char" .

    $default  reduce using rule 110 (base_type)


state 161

  111 base_type: "boolean" .

    $default  reduce using rule 111 (base_type)


state 162

  112 base_type: "string" .

    $default  reduce using rule 112 (base_type)


state 163

  115 base_type: "array" .

    $default  reduce using rule 115 (base_type)


state 164

  113 base_type: "record" .

    $default  reduce using rule 113 (base_type)


state 165

  117 base_type: "function" .

    $default  reduce using rule 117 (base_type)


state 166

  114 base_type: "file" .

    $default  reduce using rule 114 (base_type)


state 167

  105 pointer_type: '^' base_type .

    $default  reduce using rule 105 (pointer_type)


state 168

   69 subrange_type: constant ".." . constant

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68

    constant             go to state 230
    constant_identifier  go to state 70
    sign                 go to state 71
    unsigned_number      go to state 72
    signed_number        go to state 73


state 169

   32 type_declaration: IDENTIFIER '=' type ';' .

    $default  reduce using rule 32 (type_declaration)


state 170

  173 actual_parameter_list: '(' . actual_parameter_iterable ')'

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "read"         shift, and go to state 185
    "readln"       shift, and go to state 186
    "write"        shift, and go to state 187
    "writeln"      shift, and go to state 188
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 250
    function_call                             go to state 251
    function_identifier                       go to state 131
    actual_parameter_iterable                 go to state 252
    actual_parameter                          go to state 253
    procedure_identifier                      go to state 254
    set_constructor                           go to state 255


state 171

  170 function_call: function_identifier actual_parameter_list .

    $default  reduce using rule 170 (function_call)


state 172

   37 variable_declaration: identifier_list ':' type . ';'

    ';'  shift, and go to state 256


state 173

  248 formal_parameter_list: '(' . formal_parameter_list_iterable ')'

    IDENTIFIER   shift, and go to state 21
    "var"        shift, and go to state 257
    "function"   shift, and go to state 79
    "procedure"  shift, and go to state 80

    identifier_list                      go to state 258
    procedure_heading                    go to state 259
    function_heading                     go to state 260
    formal_parameter_list_iterable       go to state 261
    formal_parameter_list_iterable_list  go to state 262
    parameter_declaration                go to state 263


state 174

  246 function_heading: "function" IDENTIFIER ':' . type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 94
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 95
    "integer"      shift, and go to state 96
    "longint"      shift, and go to state 97
    "word"         shift, and go to state 98
    "char"         shift, and go to state 99
    "boolean"      shift, and go to state 100
    "string"       shift, and go to state 101
    "packed"       shift, and go to state 102
    "array"        shift, and go to state 103
    "record"       shift, and go to state 104
    "of"           shift, and go to state 105
    "set"          shift, and go to state 106
    "function"     shift, and go to state 107
    "file"         shift, and go to state 108
    "nil"          shift, and go to state 109
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 110
    '^'            shift, and go to state 111

    constant                 go to state 112
    constant_identifier      go to state 70
    sign                     go to state 71
    type                     go to state 264
    simple_type              go to state 114
    ordinal_type             go to state 115
    ordinal_type_identifier  go to state 116
    enumerated_type          go to state 117
    subrange_type            go to state 118
    real_type                go to state 119
    real_type_identifier     go to state 120
    string_type              go to state 121
    structured_type          go to state 122
    type_list                go to state 123
    array_type               go to state 124
    record_type              go to state 125
    set_type                 go to state 126
    file_type                go to state 127
    pointer_type             go to state 128
    pointer_type_identifier  go to state 129
    unsigned_number          go to state 72
    signed_number            go to state 73
    function_call            go to state 130
    function_identifier      go to state 131


state 175

  247 function_heading: "function" IDENTIFIER formal_parameter_list . ':' type

    ':'  shift, and go to state 265


state 176

  241 procedure_heading: "procedure" IDENTIFIER formal_parameter_list .

    $default  reduce using rule 241 (procedure_heading)


state 177

  119 variable_identifier: IDENTIFIER .
  172 function_identifier: IDENTIFIER .
  194 statement: IDENTIFIER .
  202 procedure_statement: IDENTIFIER . actual_parameter_list

    '('  shift, and go to state 170

    ":="      reduce using rule 172 (function_identifier)
    '['       reduce using rule 119 (variable_identifier)
    '^'       reduce using rule 119 (variable_identifier)
    '.'       reduce using rule 119 (variable_identifier)
    $default  reduce using rule 194 (statement)

    actual_parameter_list  go to state 266


state 178

  215 case_statement: "case" . expression "of" case_list "end"
  216               | "case" . expression "of" case_list otherwise_clause "end"
  217               | "case" . expression "of" case_list otherwise_clause ';' "end"
  218               | "case" . expression "of" case_list ';' "end"

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 267
    function_call                             go to state 251
    function_identifier                       go to state 131
    set_constructor                           go to state 255


state 179

  203 goto_statement: "goto" . label

    DECIMAL_INT  shift, and go to state 25

    label  go to state 268


state 180

  213 if_statement: "if" . expression "then" statement
  214             | "if" . expression "then" statement "else" statement

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 269
    function_call                             go to state 251
    function_identifier                       go to state 131
    set_constructor                           go to state 255


state 181

  226 repeat_statement: "repeat" . statement_list "until" expression

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 136
    "case"       shift, and go to state 178
    "function"   shift, and go to state 107
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 188 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 194
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    statement_list         go to state 270
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 182

  227 while_statement: "while" . expression "do" statement

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 271
    function_call                             go to state 251
    function_identifier                       go to state 131
    set_constructor                           go to state 255


state 183

  228 for_statement: "for" . control_variable ":=" initial_value "to" final_value "do" statement
  229              | "for" . control_variable ":=" initial_value "downto" final_value "do" statement

    IDENTIFIER  shift, and go to state 272

    control_variable  go to state 273


state 184

  233 with_statement: "with" . record_variable_reference_list "do" statement

    IDENTIFIER  shift, and go to state 274

    variable_reference              go to state 275
    variable_identifier             go to state 191
    record_variable_reference_list  go to state 276


state 185

  180 procedure_identifier: "read" .

    $default  reduce using rule 180 (procedure_identifier)


state 186

  181 procedure_identifier: "readln" .

    $default  reduce using rule 181 (procedure_identifier)


state 187

  178 procedure_identifier: "write" .

    $default  reduce using rule 178 (procedure_identifier)


state 188

  179 procedure_identifier: "writeln" .

    $default  reduce using rule 179 (procedure_identifier)


state 189

  189 statement: label . ':'
  190          | label . ':' simple_statement
  191          | label . ':' structured_statement

    ':'  shift, and go to state 277


state 190

  198 assignment_statement: variable_reference . ":=" expression

    ":="  shift, and go to state 278


state 191

  118 variable_reference: variable_identifier . qualifier_list

    '['  shift, and go to state 279
    '^'  shift, and go to state 280
    '.'  shift, and go to state 281

    qualifier_list    go to state 282
    qualifier         go to state 283
    index             go to state 284
    field_designator  go to state 285


state 192

  199 assignment_statement: function_identifier . ":=" expression

    ":="  shift, and go to state 286


state 193

  200 procedure_statement: procedure_identifier .
  201                    | procedure_identifier . actual_parameter_list

    '('  shift, and go to state 170

    $default  reduce using rule 200 (procedure_statement)

    actual_parameter_list  go to state 287


state 194

  210 statement_list: statement .

    $default  reduce using rule 210 (statement_list)


state 195

  192 statement: simple_statement .

    $default  reduce using rule 192 (statement)


state 196

  195 simple_statement: assignment_statement .

    $default  reduce using rule 195 (simple_statement)


state 197

  196 simple_statement: procedure_statement .

    $default  reduce using rule 196 (simple_statement)


state 198

  197 simple_statement: goto_statement .

    $default  reduce using rule 197 (simple_statement)


state 199

  193 statement: structured_statement .

    $default  reduce using rule 193 (statement)


state 200

  204 structured_statement: compound_statement .

    $default  reduce using rule 204 (structured_statement)


state 201

  208 compound_statement: "begin" statement_list . "end"
  209 statement_list: statement_list . ';' statement

    "end"  shift, and go to state 288
    ';'    shift, and go to state 289


state 202

  205 structured_statement: conditional_statement .

    $default  reduce using rule 205 (structured_statement)


state 203

  211 conditional_statement: if_statement .

    $default  reduce using rule 211 (conditional_statement)


state 204

  212 conditional_statement: case_statement .

    $default  reduce using rule 212 (conditional_statement)


state 205

  206 structured_statement: repetitive_statement .

    $default  reduce using rule 206 (structured_statement)


state 206

  223 repetitive_statement: repeat_statement .

    $default  reduce using rule 223 (repetitive_statement)


state 207

  224 repetitive_statement: while_statement .

    $default  reduce using rule 224 (repetitive_statement)


state 208

  225 repetitive_statement: for_statement .

    $default  reduce using rule 225 (repetitive_statement)


state 209

  207 structured_statement: with_statement .

    $default  reduce using rule 207 (structured_statement)


state 210

  238 procedure_body: "forward" .

    $default  reduce using rule 238 (procedure_body)


state 211

  239 procedure_body: "external" .

    $default  reduce using rule 239 (procedure_body)


state 212

  237 procedure_body: block .

    $default  reduce using rule 237 (procedure_body)


state 213

  236 procedure_declaration: procedure_heading ';' procedure_body . ';'

    ';'  shift, and go to state 290


state 214

  244 function_body: "forward" .

    $default  reduce using rule 244 (function_body)


state 215

  245 function_body: "external" .

    $default  reduce using rule 245 (function_body)


state 216

  243 function_body: block .

    $default  reduce using rule 243 (function_body)


state 217

  242 function_declaration: function_heading ';' function_body . ';'

    ';'  shift, and go to state 291


state 218

   72 string_type: "string" '[' DECIMAL_INT . ']'

    ']'  shift, and go to state 292


state 219

   27 constant_identifier: IDENTIFIER .
  172 function_identifier: IDENTIFIER .

    '('       reduce using rule 172 (function_identifier)
    $default  reduce using rule 27 (constant_identifier)


state 220

   81 index_type_list: ordinal_type .

    $default  reduce using rule 81 (index_type_list)


state 221

   79 array_type: "array" '[' index_type_list . ']' "of" type
   80 index_type_list: index_type_list . ',' ordinal_type

    ','  shift, and go to state 293
    ']'  shift, and go to state 294


state 222

   94 variant_part: "case" IDENTIFIER . ':' tag_field_type "of" variant_list
  101 tag_field_type: IDENTIFIER .

    ':'  shift, and go to state 295

    $default  reduce using rule 101 (tag_field_type)


state 223

   93 variant_part: "case" tag_field_type . "of" variant_list

    "of"  shift, and go to state 296


state 224

   92 field_declaration: identifier_list ':' . type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 94
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 95
    "integer"      shift, and go to state 96
    "longint"      shift, and go to state 97
    "word"         shift, and go to state 98
    "char"         shift, and go to state 99
    "boolean"      shift, and go to state 100
    "string"       shift, and go to state 101
    "packed"       shift, and go to state 102
    "array"        shift, and go to state 103
    "record"       shift, and go to state 104
    "of"           shift, and go to state 105
    "set"          shift, and go to state 106
    "function"     shift, and go to state 107
    "file"         shift, and go to state 108
    "nil"          shift, and go to state 109
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 110
    '^'            shift, and go to state 111

    constant                 go to state 112
    constant_identifier      go to state 70
    sign                     go to state 71
    type                     go to state 297
    simple_type              go to state 114
    ordinal_type             go to state 115
    ordinal_type_identifier  go to state 116
    enumerated_type          go to state 117
    subrange_type            go to state 118
    real_type                go to state 119
    real_type_identifier     go to state 120
    string_type              go to state 121
    structured_type          go to state 122
    type_list                go to state 123
    array_type               go to state 124
    record_type              go to state 125
    set_type                 go to state 126
    file_type                go to state 127
    pointer_type             go to state 128
    pointer_type_identifier  go to state 129
    unsigned_number          go to state 72
    signed_number            go to state 73
    function_call            go to state 130
    function_identifier      go to state 131


state 225

   83 record_type: "record" field_list "end" .

    $default  reduce using rule 83 (record_type)


state 226

   85 field_list: fixed_part ';' .
   86           | fixed_part ';' . variant_part
   87           | fixed_part ';' . variant_part ';'
   90 fixed_part: fixed_part ';' . field_declaration

    IDENTIFIER  shift, and go to state 21
    "case"      shift, and go to state 148

    $default  reduce using rule 85 (field_list)

    identifier_list    go to state 149
    field_declaration  go to state 298
    variant_part       go to state 299


state 227

   89 field_list: variant_part ';' .

    $default  reduce using rule 89 (field_list)


state 228

  102 set_type: "set" "of" ordinal_type .

    $default  reduce using rule 102 (set_type)


state 229

   68 enumerated_type: '(' identifier_list ')' .

    $default  reduce using rule 68 (enumerated_type)


state 230

   69 subrange_type: constant ".." constant .

    $default  reduce using rule 69 (subrange_type)


state 231

  119 variable_identifier: IDENTIFIER .
  145 factor: IDENTIFIER .
  172 function_identifier: IDENTIFIER .

    '('       reduce using rule 172 (function_identifier)
    '['       reduce using rule 119 (variable_identifier)
    '^'       reduce using rule 119 (variable_identifier)
    '.'       reduce using rule 119 (variable_identifier)
    $default  reduce using rule 145 (factor)


state 232

  130 unsigned_constant: QUOTED_STRING .

    $default  reduce using rule 130 (unsigned_constant)


state 233

  131 unsigned_constant: QUOTED_CHAR .

    $default  reduce using rule 131 (unsigned_constant)


state 234

   66 type_boolean: "true" .

    $default  reduce using rule 66 (type_boolean)


state 235

   67 type_boolean: "false" .

    $default  reduce using rule 67 (type_boolean)


state 236

  132 unsigned_constant: "nil" .

    $default  reduce using rule 132 (unsigned_constant)


state 237

  144 factor: "not" . factor

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    type_boolean         go to state 242
    variable_reference   go to state 243
    variable_identifier  go to state 191
    unsigned_constant    go to state 244
    unsigned_number      go to state 245
    factor               go to state 300
    function_call        go to state 251
    function_identifier  go to state 131
    set_constructor      go to state 255


state 238

  139 factor: '@' . variable_reference

    IDENTIFIER  shift, and go to state 274

    variable_reference   go to state 301
    variable_identifier  go to state 191


state 239

  143 factor: '(' . expression ')'

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 302
    function_call                             go to state 251
    function_identifier                       go to state 131
    set_constructor                           go to state 255


state 240

  182 set_constructor: '[' . ']'
  183                | '[' . member_group_list ']'

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240
    ']'            shift, and go to state 303

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 304
    function_call                             go to state 251
    function_identifier                       go to state 131
    set_constructor                           go to state 255
    member_group_list                         go to state 305
    member_group                              go to state 306


state 241

  154 simple_expression: sign . simple_expression_term_operator_iterable

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression_term_operator_iterable  go to state 307
    function_call                             go to state 251
    function_identifier                       go to state 131
    set_constructor                           go to state 255


state 242

  146 factor: type_boolean .

    $default  reduce using rule 146 (factor)


state 243

  138 factor: variable_reference .

    $default  reduce using rule 138 (factor)


state 244

  140 factor: unsigned_constant .

    $default  reduce using rule 140 (factor)


state 245

  129 unsigned_constant: unsigned_number .

    $default  reduce using rule 129 (unsigned_constant)


state 246

  148 term: factor .

    $default  reduce using rule 148 (term)


state 247

  147 term: term . term_operator_list factor
  157 simple_expression_term_operator_iterable: term .

    "div"  shift, and go to state 308
    "mod"  shift, and go to state 309
    "and"  shift, and go to state 310
    '*'    shift, and go to state 311
    '/'    shift, and go to state 312

    $default  reduce using rule 157 (simple_expression_term_operator_iterable)

    term_operator_list  go to state 313


state 248

  161 expression: simple_expression .
  162           | simple_expression . relational_operator simple_expression

    "in"      shift, and go to state 314
    '='       shift, and go to state 315
    '<'       shift, and go to state 316
    '>'       shift, and go to state 317
    RE        shift, and go to state 318
    LE        shift, and go to state 319
    NOTEQUAL  shift, and go to state 320

    $default  reduce using rule 161 (expression)

    relational_operator  go to state 321


state 249

  155 simple_expression: simple_expression_term_operator_iterable .
  156 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable . simple_expression_term_operator_list term

    "or"  shift, and go to state 322
    '+'   shift, and go to state 323
    '-'   shift, and go to state 324

    $default  reduce using rule 155 (simple_expression)

    simple_expression_term_operator_list  go to state 325


state 250

  176 actual_parameter: expression .

    $default  reduce using rule 176 (actual_parameter)


state 251

  141 factor: function_call .

    $default  reduce using rule 141 (factor)


state 252

  173 actual_parameter_list: '(' actual_parameter_iterable . ')'
  174 actual_parameter_iterable: actual_parameter_iterable . ',' actual_parameter

    ')'  shift, and go to state 326
    ','  shift, and go to state 327


state 253

  175 actual_parameter_iterable: actual_parameter .

    $default  reduce using rule 175 (actual_parameter_iterable)


state 254

  177 actual_parameter: procedure_identifier .

    $default  reduce using rule 177 (actual_parameter)


state 255

  142 factor: set_constructor .

    $default  reduce using rule 142 (factor)


state 256

   37 variable_declaration: identifier_list ':' type ';' .

    $default  reduce using rule 37 (variable_declaration)


state 257

  254 parameter_declaration: "var" . identifier_list ':' type_identifier

    IDENTIFIER  shift, and go to state 21

    identifier_list  go to state 328


state 258

   48 identifier_list: identifier_list . ',' IDENTIFIER
  255 parameter_declaration: identifier_list . ':' type_identifier

    ','  shift, and go to state 36
    ':'  shift, and go to state 329


state 259

  252 formal_parameter_list_iterable_list: procedure_heading .

    $default  reduce using rule 252 (formal_parameter_list_iterable_list)


state 260

  253 formal_parameter_list_iterable_list: function_heading .

    $default  reduce using rule 253 (formal_parameter_list_iterable_list)


state 261

  248 formal_parameter_list: '(' formal_parameter_list_iterable . ')'
  249 formal_parameter_list_iterable: formal_parameter_list_iterable . ';' formal_parameter_list_iterable_list

    ';'  shift, and go to state 330
    ')'  shift, and go to state 331


state 262

  250 formal_parameter_list_iterable: formal_parameter_list_iterable_list .

    $default  reduce using rule 250 (formal_parameter_list_iterable)


state 263

  251 formal_parameter_list_iterable_list: parameter_declaration .

    $default  reduce using rule 251 (formal_parameter_list_iterable_list)


state 264

  246 function_heading: "function" IDENTIFIER ':' type .

    $default  reduce using rule 246 (function_heading)


state 265

  247 function_heading: "function" IDENTIFIER formal_parameter_list ':' . type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 94
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 95
    "integer"      shift, and go to state 96
    "longint"      shift, and go to state 97
    "word"         shift, and go to state 98
    "char"         shift, and go to state 99
    "boolean"      shift, and go to state 100
    "string"       shift, and go to state 101
    "packed"       shift, and go to state 102
    "array"        shift, and go to state 103
    "record"       shift, and go to state 104
    "of"           shift, and go to state 105
    "set"          shift, and go to state 106
    "function"     shift, and go to state 107
    "file"         shift, and go to state 108
    "nil"          shift, and go to state 109
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 110
    '^'            shift, and go to state 111

    constant                 go to state 112
    constant_identifier      go to state 70
    sign                     go to state 71
    type                     go to state 332
    simple_type              go to state 114
    ordinal_type             go to state 115
    ordinal_type_identifier  go to state 116
    enumerated_type          go to state 117
    subrange_type            go to state 118
    real_type                go to state 119
    real_type_identifier     go to state 120
    string_type              go to state 121
    structured_type          go to state 122
    type_list                go to state 123
    array_type               go to state 124
    record_type              go to state 125
    set_type                 go to state 126
    file_type                go to state 127
    pointer_type             go to state 128
    pointer_type_identifier  go to state 129
    unsigned_number          go to state 72
    signed_number            go to state 73
    function_call            go to state 130
    function_identifier      go to state 131


state 266

  202 procedure_statement: IDENTIFIER actual_parameter_list .

    $default  reduce using rule 202 (procedure_statement)


state 267

  215 case_statement: "case" expression . "of" case_list "end"
  216               | "case" expression . "of" case_list otherwise_clause "end"
  217               | "case" expression . "of" case_list otherwise_clause ';' "end"
  218               | "case" expression . "of" case_list ';' "end"

    "of"  shift, and go to state 333


state 268

  203 goto_statement: "goto" label .

    $default  reduce using rule 203 (goto_statement)


state 269

  213 if_statement: "if" expression . "then" statement
  214             | "if" expression . "then" statement "else" statement

    "then"  shift, and go to state 334


state 270

  209 statement_list: statement_list . ';' statement
  226 repeat_statement: "repeat" statement_list . "until" expression

    "until"  shift, and go to state 335
    ';'      shift, and go to state 289


state 271

  227 while_statement: "while" expression . "do" statement

    "do"  shift, and go to state 336


state 272

  230 control_variable: IDENTIFIER .

    $default  reduce using rule 230 (control_variable)


state 273

  228 for_statement: "for" control_variable . ":=" initial_value "to" final_value "do" statement
  229              | "for" control_variable . ":=" initial_value "downto" final_value "do" statement

    ":="  shift, and go to state 337


state 274

  119 variable_identifier: IDENTIFIER .

    $default  reduce using rule 119 (variable_identifier)


state 275

  235 record_variable_reference_list: variable_reference .

    $default  reduce using rule 235 (record_variable_reference_list)


state 276

  233 with_statement: "with" record_variable_reference_list . "do" statement
  234 record_variable_reference_list: record_variable_reference_list . ',' variable_reference

    "do"  shift, and go to state 338
    ','   shift, and go to state 339


state 277

  189 statement: label ':' .
  190          | label ':' . simple_statement
  191          | label ':' . structured_statement

    IDENTIFIER  shift, and go to state 340
    "begin"     shift, and go to state 136
    "case"      shift, and go to state 178
    "function"  shift, and go to state 107
    "goto"      shift, and go to state 179
    "if"        shift, and go to state 180
    "repeat"    shift, and go to state 181
    "while"     shift, and go to state 182
    "for"       shift, and go to state 183
    "with"      shift, and go to state 184
    "read"      shift, and go to state 185
    "readln"    shift, and go to state 186
    "write"     shift, and go to state 187
    "writeln"   shift, and go to state 188

    $default  reduce using rule 189 (statement)

    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    simple_statement       go to state 341
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 342
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 278

  198 assignment_statement: variable_reference ":=" . expression

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 343
    function_call                             go to state 251
    function_identifier                       go to state 131
    set_constructor                           go to state 255


state 279

  125 index: '[' . expression_list ']'

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    expression_list                           go to state 344
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 345
    function_call                             go to state 251
    function_identifier                       go to state 131
    set_constructor                           go to state 255


state 280

  124 qualifier: '^' .

    $default  reduce using rule 124 (qualifier)


state 281

  128 field_designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 346


state 282

  118 variable_reference: variable_identifier qualifier_list .
  120 qualifier_list: qualifier_list . qualifier

    '['  shift, and go to state 279
    '^'  shift, and go to state 280
    '.'  shift, and go to state 281

    $default  reduce using rule 118 (variable_reference)

    qualifier         go to state 347
    index             go to state 284
    field_designator  go to state 285


state 283

  121 qualifier_list: qualifier .

    $default  reduce using rule 121 (qualifier_list)


state 284

  122 qualifier: index .

    $default  reduce using rule 122 (qualifier)


state 285

  123 qualifier: field_designator .

    $default  reduce using rule 123 (qualifier)


state 286

  199 assignment_statement: function_identifier ":=" . expression

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 348
    function_call                             go to state 251
    function_identifier                       go to state 131
    set_constructor                           go to state 255


state 287

  201 procedure_statement: procedure_identifier actual_parameter_list .

    $default  reduce using rule 201 (procedure_statement)


state 288

  208 compound_statement: "begin" statement_list "end" .

    $default  reduce using rule 208 (compound_statement)


state 289

  209 statement_list: statement_list ';' . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 136
    "case"       shift, and go to state 178
    "function"   shift, and go to state 107
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 188 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 349
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 290

  236 procedure_declaration: procedure_heading ';' procedure_body ';' .

    $default  reduce using rule 236 (procedure_declaration)


state 291

  242 function_declaration: function_heading ';' function_body ';' .

    $default  reduce using rule 242 (function_declaration)


state 292

   72 string_type: "string" '[' DECIMAL_INT ']' .

    $default  reduce using rule 72 (string_type)


state 293

   80 index_type_list: index_type_list ',' . ordinal_type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "integer"      shift, and go to state 96
    "longint"      shift, and go to state 97
    "word"         shift, and go to state 98
    "char"         shift, and go to state 99
    "boolean"      shift, and go to state 100
    "function"     shift, and go to state 107
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 110

    constant                 go to state 112
    constant_identifier      go to state 70
    sign                     go to state 71
    ordinal_type             go to state 350
    ordinal_type_identifier  go to state 116
    enumerated_type          go to state 117
    subrange_type            go to state 118
    unsigned_number          go to state 72
    signed_number            go to state 73
    function_call            go to state 130
    function_identifier      go to state 131


state 294

   79 array_type: "array" '[' index_type_list ']' . "of" type

    "of"  shift, and go to state 351


state 295

   94 variant_part: "case" IDENTIFIER ':' . tag_field_type "of" variant_list

    IDENTIFIER  shift, and go to state 352

    tag_field_type  go to state 353


state 296

   93 variant_part: "case" tag_field_type "of" . variant_list

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68

    constant             go to state 354
    constant_identifier  go to state 70
    sign                 go to state 71
    variant_list         go to state 355
    variant              go to state 356
    constant_list        go to state 357
    unsigned_number      go to state 72
    signed_number        go to state 73


state 297

   92 field_declaration: identifier_list ':' type .

    $default  reduce using rule 92 (field_declaration)


state 298

   90 fixed_part: fixed_part ';' field_declaration .

    $default  reduce using rule 90 (fixed_part)


state 299

   86 field_list: fixed_part ';' variant_part .
   87           | fixed_part ';' variant_part . ';'

    ';'  shift, and go to state 358

    $default  reduce using rule 86 (field_list)


state 300

  144 factor: "not" factor .

    $default  reduce using rule 144 (factor)


state 301

  139 factor: '@' variable_reference .

    $default  reduce using rule 139 (factor)


state 302

  143 factor: '(' expression . ')'

    ')'  shift, and go to state 359


state 303

  182 set_constructor: '[' ']' .

    $default  reduce using rule 182 (set_constructor)


state 304

  186 member_group: expression .
  187             | expression . ".." expression

    ".."  shift, and go to state 360

    $default  reduce using rule 186 (member_group)


state 305

  183 set_constructor: '[' member_group_list . ']'
  184 member_group_list: member_group_list . ',' member_group

    ','  shift, and go to state 361
    ']'  shift, and go to state 362


state 306

  185 member_group_list: member_group .

    $default  reduce using rule 185 (member_group_list)


state 307

  154 simple_expression: sign simple_expression_term_operator_iterable .
  156 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable . simple_expression_term_operator_list term

    "or"  shift, and go to state 322
    '+'   shift, and go to state 323
    '-'   shift, and go to state 324

    $default  reduce using rule 154 (simple_expression)

    simple_expression_term_operator_list  go to state 325


state 308

  151 term_operator_list: "div" .

    $default  reduce using rule 151 (term_operator_list)


state 309

  152 term_operator_list: "mod" .

    $default  reduce using rule 152 (term_operator_list)


state 310

  153 term_operator_list: "and" .

    $default  reduce using rule 153 (term_operator_list)


state 311

  149 term_operator_list: '*' .

    $default  reduce using rule 149 (term_operator_list)


state 312

  150 term_operator_list: '/' .

    $default  reduce using rule 150 (term_operator_list)


state 313

  147 term: term term_operator_list . factor

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    type_boolean         go to state 242
    variable_reference   go to state 243
    variable_identifier  go to state 191
    unsigned_constant    go to state 244
    unsigned_number      go to state 245
    factor               go to state 363
    function_call        go to state 251
    function_identifier  go to state 131
    set_constructor      go to state 255


state 314

  169 relational_operator: "in" .

    $default  reduce using rule 169 (relational_operator)


state 315

  163 relational_operator: '=' .

    $default  reduce using rule 163 (relational_operator)


state 316

  164 relational_operator: '<' .

    $default  reduce using rule 164 (relational_operator)


state 317

  165 relational_operator: '>' .

    $default  reduce using rule 165 (relational_operator)


state 318

  167 relational_operator: RE .

    $default  reduce using rule 167 (relational_operator)


state 319

  166 relational_operator: LE .

    $default  reduce using rule 166 (relational_operator)


state 320

  168 relational_operator: NOTEQUAL .

    $default  reduce using rule 168 (relational_operator)


state 321

  162 expression: simple_expression relational_operator . simple_expression

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 364
    simple_expression_term_operator_iterable  go to state 249
    function_call                             go to state 251
    function_identifier                       go to state 131
    set_constructor                           go to state 255


state 322

  160 simple_expression_term_operator_list: "or" .

    $default  reduce using rule 160 (simple_expression_term_operator_list)


state 323

  158 simple_expression_term_operator_list: '+' .

    $default  reduce using rule 158 (simple_expression_term_operator_list)


state 324

  159 simple_expression_term_operator_list: '-' .

    $default  reduce using rule 159 (simple_expression_term_operator_list)


state 325

  156 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list . term

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    type_boolean         go to state 242
    variable_reference   go to state 243
    variable_identifier  go to state 191
    unsigned_constant    go to state 244
    unsigned_number      go to state 245
    factor               go to state 246
    term                 go to state 365
    function_call        go to state 251
    function_identifier  go to state 131
    set_constructor      go to state 255


state 326

  173 actual_parameter_list: '(' actual_parameter_iterable ')' .

    $default  reduce using rule 173 (actual_parameter_list)


state 327

  174 actual_parameter_iterable: actual_parameter_iterable ',' . actual_parameter

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "read"         shift, and go to state 185
    "readln"       shift, and go to state 186
    "write"        shift, and go to state 187
    "writeln"      shift, and go to state 188
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 250
    function_call                             go to state 251
    function_identifier                       go to state 131
    actual_parameter                          go to state 366
    procedure_identifier                      go to state 254
    set_constructor                           go to state 255


state 328

   48 identifier_list: identifier_list . ',' IDENTIFIER
  254 parameter_declaration: "var" identifier_list . ':' type_identifier

    ','  shift, and go to state 36
    ':'  shift, and go to state 367


state 329

  255 parameter_declaration: identifier_list ':' . type_identifier

    IDENTIFIER  shift, and go to state 368

    type_identifier  go to state 369


state 330

  249 formal_parameter_list_iterable: formal_parameter_list_iterable ';' . formal_parameter_list_iterable_list

    IDENTIFIER   shift, and go to state 21
    "var"        shift, and go to state 257
    "function"   shift, and go to state 79
    "procedure"  shift, and go to state 80

    identifier_list                      go to state 258
    procedure_heading                    go to state 259
    function_heading                     go to state 260
    formal_parameter_list_iterable_list  go to state 370
    parameter_declaration                go to state 263


state 331

  248 formal_parameter_list: '(' formal_parameter_list_iterable ')' .

    $default  reduce using rule 248 (formal_parameter_list)


state 332

  247 function_heading: "function" IDENTIFIER formal_parameter_list ':' type .

    $default  reduce using rule 247 (function_heading)


state 333

  215 case_statement: "case" expression "of" . case_list "end"
  216               | "case" expression "of" . case_list otherwise_clause "end"
  217               | "case" expression "of" . case_list otherwise_clause ';' "end"
  218               | "case" expression "of" . case_list ';' "end"

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68

    constant             go to state 354
    constant_identifier  go to state 70
    sign                 go to state 71
    constant_list        go to state 371
    unsigned_number      go to state 72
    signed_number        go to state 73
    case_list            go to state 372
    case                 go to state 373


state 334

  213 if_statement: "if" expression "then" . statement
  214             | "if" expression "then" . statement "else" statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 136
    "case"       shift, and go to state 178
    "function"   shift, and go to state 107
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 188 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 374
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 335

  226 repeat_statement: "repeat" statement_list "until" . expression

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 375
    function_call                             go to state 251
    function_identifier                       go to state 131
    set_constructor                           go to state 255


state 336

  227 while_statement: "while" expression "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 136
    "case"       shift, and go to state 178
    "function"   shift, and go to state 107
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 188 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 376
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 337

  228 for_statement: "for" control_variable ":=" . initial_value "to" final_value "do" statement
  229              | "for" control_variable ":=" . initial_value "downto" final_value "do" statement

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 377
    function_call                             go to state 251
    function_identifier                       go to state 131
    set_constructor                           go to state 255
    initial_value                             go to state 378


state 338

  233 with_statement: "with" record_variable_reference_list "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 136
    "case"       shift, and go to state 178
    "function"   shift, and go to state 107
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 188 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 379
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 339

  234 record_variable_reference_list: record_variable_reference_list ',' . variable_reference

    IDENTIFIER  shift, and go to state 274

    variable_reference   go to state 380
    variable_identifier  go to state 191


state 340

  119 variable_identifier: IDENTIFIER .
  172 function_identifier: IDENTIFIER .
  202 procedure_statement: IDENTIFIER . actual_parameter_list

    '('  shift, and go to state 170

    ":="      reduce using rule 172 (function_identifier)
    $default  reduce using rule 119 (variable_identifier)

    actual_parameter_list  go to state 266


state 341

  190 statement: label ':' simple_statement .

    $default  reduce using rule 190 (statement)


state 342

  191 statement: label ':' structured_statement .

    $default  reduce using rule 191 (statement)


state 343

  198 assignment_statement: variable_reference ":=" expression .

    $default  reduce using rule 198 (assignment_statement)


state 344

  125 index: '[' expression_list . ']'
  126 expression_list: expression_list . ',' expression

    ','  shift, and go to state 381
    ']'  shift, and go to state 382


state 345

  127 expression_list: expression .

    $default  reduce using rule 127 (expression_list)


state 346

  128 field_designator: '.' IDENTIFIER .

    $default  reduce using rule 128 (field_designator)


state 347

  120 qualifier_list: qualifier_list qualifier .

    $default  reduce using rule 120 (qualifier_list)


state 348

  199 assignment_statement: function_identifier ":=" expression .

    $default  reduce using rule 199 (assignment_statement)


state 349

  209 statement_list: statement_list ';' statement .

    $default  reduce using rule 209 (statement_list)


state 350

   80 index_type_list: index_type_list ',' ordinal_type .

    $default  reduce using rule 80 (index_type_list)


state 351

   79 array_type: "array" '[' index_type_list ']' "of" . type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 94
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 95
    "integer"      shift, and go to state 96
    "longint"      shift, and go to state 97
    "word"         shift, and go to state 98
    "char"         shift, and go to state 99
    "boolean"      shift, and go to state 100
    "string"       shift, and go to state 101
    "packed"       shift, and go to state 102
    "array"        shift, and go to state 103
    "record"       shift, and go to state 104
    "of"           shift, and go to state 105
    "set"          shift, and go to state 106
    "function"     shift, and go to state 107
    "file"         shift, and go to state 108
    "nil"          shift, and go to state 109
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 110
    '^'            shift, and go to state 111

    constant                 go to state 112
    constant_identifier      go to state 70
    sign                     go to state 71
    type                     go to state 383
    simple_type              go to state 114
    ordinal_type             go to state 115
    ordinal_type_identifier  go to state 116
    enumerated_type          go to state 117
    subrange_type            go to state 118
    real_type                go to state 119
    real_type_identifier     go to state 120
    string_type              go to state 121
    structured_type          go to state 122
    type_list                go to state 123
    array_type               go to state 124
    record_type              go to state 125
    set_type                 go to state 126
    file_type                go to state 127
    pointer_type             go to state 128
    pointer_type_identifier  go to state 129
    unsigned_number          go to state 72
    signed_number            go to state 73
    function_call            go to state 130
    function_identifier      go to state 131


state 352

  101 tag_field_type: IDENTIFIER .

    $default  reduce using rule 101 (tag_field_type)


state 353

   94 variant_part: "case" IDENTIFIER ':' tag_field_type . "of" variant_list

    "of"  shift, and go to state 384


state 354

  100 constant_list: constant .

    $default  reduce using rule 100 (constant_list)


state 355

   93 variant_part: "case" tag_field_type "of" variant_list .
   95 variant_list: variant_list . ';' variant

    ';'  shift, and go to state 385

    ';'       [reduce using rule 93 (variant_part)]
    $default  reduce using rule 93 (variant_part)


state 356

   96 variant_list: variant .

    $default  reduce using rule 96 (variant_list)


state 357

   97 variant: constant_list . ':' '(' ')'
   98        | constant_list . ':' '(' field_list ')'
   99 constant_list: constant_list . ',' constant

    ','  shift, and go to state 386
    ':'  shift, and go to state 387


state 358

   87 field_list: fixed_part ';' variant_part ';' .

    $default  reduce using rule 87 (field_list)


state 359

  143 factor: '(' expression ')' .

    $default  reduce using rule 143 (factor)


state 360

  187 member_group: expression ".." . expression

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 388
    function_call                             go to state 251
    function_identifier                       go to state 131
    set_constructor                           go to state 255


state 361

  184 member_group_list: member_group_list ',' . member_group

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 304
    function_call                             go to state 251
    function_identifier                       go to state 131
    set_constructor                           go to state 255
    member_group                              go to state 389


state 362

  183 set_constructor: '[' member_group_list ']' .

    $default  reduce using rule 183 (set_constructor)


state 363

  147 term: term term_operator_list factor .

    $default  reduce using rule 147 (term)


state 364

  162 expression: simple_expression relational_operator simple_expression .

    $default  reduce using rule 162 (expression)


state 365

  147 term: term . term_operator_list factor
  156 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list term .

    "div"  shift, and go to state 308
    "mod"  shift, and go to state 309
    "and"  shift, and go to state 310
    '*'    shift, and go to state 311
    '/'    shift, and go to state 312

    $default  reduce using rule 156 (simple_expression_term_operator_iterable)

    term_operator_list  go to state 313


state 366

  174 actual_parameter_iterable: actual_parameter_iterable ',' actual_parameter .

    $default  reduce using rule 174 (actual_parameter_iterable)


state 367

  254 parameter_declaration: "var" identifier_list ':' . type_identifier

    IDENTIFIER  shift, and go to state 368

    type_identifier  go to state 390


state 368

  256 type_identifier: IDENTIFIER .

    $default  reduce using rule 256 (type_identifier)


state 369

  255 parameter_declaration: identifier_list ':' type_identifier .

    $default  reduce using rule 255 (parameter_declaration)


state 370

  249 formal_parameter_list_iterable: formal_parameter_list_iterable ';' formal_parameter_list_iterable_list .

    $default  reduce using rule 249 (formal_parameter_list_iterable)


state 371

   99 constant_list: constant_list . ',' constant
  221 case: constant_list . ':' statement

    ','  shift, and go to state 386
    ':'  shift, and go to state 391


state 372

  215 case_statement: "case" expression "of" case_list . "end"
  216               | "case" expression "of" case_list . otherwise_clause "end"
  217               | "case" expression "of" case_list . otherwise_clause ';' "end"
  218               | "case" expression "of" case_list . ';' "end"
  219 case_list: case_list . ';' case

    "end"  shift, and go to state 392
    ';'    shift, and go to state 393

    otherwise_clause  go to state 394


state 373

  220 case_list: case .

    $default  reduce using rule 220 (case_list)


state 374

  213 if_statement: "if" expression "then" statement .
  214             | "if" expression "then" statement . "else" statement

    "else"  shift, and go to state 395

    "else"    [reduce using rule 213 (if_statement)]
    $default  reduce using rule 213 (if_statement)


state 375

  226 repeat_statement: "repeat" statement_list "until" expression .

    $default  reduce using rule 226 (repeat_statement)


state 376

  227 while_statement: "while" expression "do" statement .

    $default  reduce using rule 227 (while_statement)


state 377

  231 initial_value: expression .

    $default  reduce using rule 231 (initial_value)


state 378

  228 for_statement: "for" control_variable ":=" initial_value . "to" final_value "do" statement
  229              | "for" control_variable ":=" initial_value . "downto" final_value "do" statement

    "to"      shift, and go to state 396
    "downto"  shift, and go to state 397


state 379

  233 with_statement: "with" record_variable_reference_list "do" statement .

    $default  reduce using rule 233 (with_statement)


state 380

  234 record_variable_reference_list: record_variable_reference_list ',' variable_reference .

    $default  reduce using rule 234 (record_variable_reference_list)


state 381

  126 expression_list: expression_list ',' . expression

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 398
    function_call                             go to state 251
    function_identifier                       go to state 131
    set_constructor                           go to state 255


state 382

  125 index: '[' expression_list ']' .

    $default  reduce using rule 125 (index)


state 383

   79 array_type: "array" '[' index_type_list ']' "of" type .

    $default  reduce using rule 79 (array_type)


state 384

   94 variant_part: "case" IDENTIFIER ':' tag_field_type "of" . variant_list

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68

    constant             go to state 354
    constant_identifier  go to state 70
    sign                 go to state 71
    variant_list         go to state 399
    variant              go to state 356
    constant_list        go to state 357
    unsigned_number      go to state 72
    signed_number        go to state 73


state 385

   95 variant_list: variant_list ';' . variant

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68

    constant             go to state 354
    constant_identifier  go to state 70
    sign                 go to state 71
    variant              go to state 400
    constant_list        go to state 357
    unsigned_number      go to state 72
    signed_number        go to state 73


state 386

   99 constant_list: constant_list ',' . constant

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68

    constant             go to state 401
    constant_identifier  go to state 70
    sign                 go to state 71
    unsigned_number      go to state 72
    signed_number        go to state 73


state 387

   97 variant: constant_list ':' . '(' ')'
   98        | constant_list ':' . '(' field_list ')'

    '('  shift, and go to state 402


state 388

  187 member_group: expression ".." expression .

    $default  reduce using rule 187 (member_group)


state 389

  184 member_group_list: member_group_list ',' member_group .

    $default  reduce using rule 184 (member_group_list)


state 390

  254 parameter_declaration: "var" identifier_list ':' type_identifier .

    $default  reduce using rule 254 (parameter_declaration)


state 391

  221 case: constant_list ':' . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 136
    "case"       shift, and go to state 178
    "function"   shift, and go to state 107
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 188 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 403
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 392

  215 case_statement: "case" expression "of" case_list "end" .

    $default  reduce using rule 215 (case_statement)


state 393

  218 case_statement: "case" expression "of" case_list ';' . "end"
  219 case_list: case_list ';' . case
  222 otherwise_clause: ';' . "otherwise" statement

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "end"          shift, and go to state 404
    "otherwise"    shift, and go to state 405
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68

    constant             go to state 354
    constant_identifier  go to state 70
    sign                 go to state 71
    constant_list        go to state 371
    unsigned_number      go to state 72
    signed_number        go to state 73
    case                 go to state 406


state 394

  216 case_statement: "case" expression "of" case_list otherwise_clause . "end"
  217               | "case" expression "of" case_list otherwise_clause . ';' "end"

    "end"  shift, and go to state 407
    ';'    shift, and go to state 408


state 395

  214 if_statement: "if" expression "then" statement "else" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 136
    "case"       shift, and go to state 178
    "function"   shift, and go to state 107
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 188 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 409
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 396

  228 for_statement: "for" control_variable ":=" initial_value "to" . final_value "do" statement

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 410
    function_call                             go to state 251
    function_identifier                       go to state 131
    set_constructor                           go to state 255
    final_value                               go to state 411


state 397

  229 for_statement: "for" control_variable ":=" initial_value "downto" . final_value "do" statement

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 107
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 410
    function_call                             go to state 251
    function_identifier                       go to state 131
    set_constructor                           go to state 255
    final_value                               go to state 412


state 398

  126 expression_list: expression_list ',' expression .

    $default  reduce using rule 126 (expression_list)


state 399

   94 variant_part: "case" IDENTIFIER ':' tag_field_type "of" variant_list .
   95 variant_list: variant_list . ';' variant

    ';'  shift, and go to state 385

    ';'       [reduce using rule 94 (variant_part)]
    $default  reduce using rule 94 (variant_part)


state 400

   95 variant_list: variant_list ';' variant .

    $default  reduce using rule 95 (variant_list)


state 401

   99 constant_list: constant_list ',' constant .

    $default  reduce using rule 99 (constant_list)


state 402

   97 variant: constant_list ':' '(' . ')'
   98        | constant_list ':' '(' . field_list ')'

    IDENTIFIER  shift, and go to state 21
    "case"      shift, and go to state 148
    ')'         shift, and go to state 413

    identifier_list    go to state 149
    field_list         go to state 414
    fixed_part         go to state 151
    field_declaration  go to state 152
    variant_part       go to state 153


state 403

  221 case: constant_list ':' statement .

    $default  reduce using rule 221 (case)


state 404

  218 case_statement: "case" expression "of" case_list ';' "end" .

    $default  reduce using rule 218 (case_statement)


state 405

  222 otherwise_clause: ';' "otherwise" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 136
    "case"       shift, and go to state 178
    "function"   shift, and go to state 107
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 188 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 415
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 406

  219 case_list: case_list ';' case .

    $default  reduce using rule 219 (case_list)


state 407

  216 case_statement: "case" expression "of" case_list otherwise_clause "end" .

    $default  reduce using rule 216 (case_statement)


state 408

  217 case_statement: "case" expression "of" case_list otherwise_clause ';' . "end"

    "end"  shift, and go to state 416


state 409

  214 if_statement: "if" expression "then" statement "else" statement .

    $default  reduce using rule 214 (if_statement)


state 410

  232 final_value: expression .

    $default  reduce using rule 232 (final_value)


state 411

  228 for_statement: "for" control_variable ":=" initial_value "to" final_value . "do" statement

    "do"  shift, and go to state 417


state 412

  229 for_statement: "for" control_variable ":=" initial_value "downto" final_value . "do" statement

    "do"  shift, and go to state 418


state 413

   97 variant: constant_list ':' '(' ')' .

    $default  reduce using rule 97 (variant)


state 414

   98 variant: constant_list ':' '(' field_list . ')'

    ')'  shift, and go to state 419


state 415

  222 otherwise_clause: ';' "otherwise" statement .

    $default  reduce using rule 222 (otherwise_clause)


state 416

  217 case_statement: "case" expression "of" case_list otherwise_clause ';' "end" .

    $default  reduce using rule 217 (case_statement)


state 417

  228 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 136
    "case"       shift, and go to state 178
    "function"   shift, and go to state 107
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 188 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 420
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 418

  229 for_statement: "for" control_variable ":=" initial_value "downto" final_value "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 136
    "case"       shift, and go to state 178
    "function"   shift, and go to state 107
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 188 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 421
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 419

   98 variant: constant_list ':' '(' field_list ')' .

    $default  reduce using rule 98 (variant)


state 420

  228 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" statement .

    $default  reduce using rule 228 (for_statement)


state 421

  229 for_statement: "for" control_variable ":=" initial_value "downto" final_value "do" statement .

    $default  reduce using rule 229 (for_statement)
