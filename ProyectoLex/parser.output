Nonterminals useless in grammar

   file_buffer_symbol
   pointer_object_symbol
   result_type


Terminals unused in grammar

   "true"
   "false"
   ASSIGNMENT_PRECEDENCE
   "<>"
   "<="
   ">="
   POSITIVE
   NEGATIVE


Rules useless in grammar

  246 file_buffer_symbol: '^'

  247 pointer_object_symbol: '^'

  248 result_type: ordinal_type_identifier
  249            | real_type_identifier
  250            | pointer_type_identifier


State 335 conflicts: 1 shift/reduce
State 353 conflicts: 1 shift/reduce
State 382 conflicts: 1 shift/reduce


Grammar

    0 $accept: pascal $end

    1 pascal: program
    2       | regular_unit

    3 program: program_heading ';' block
    4        | program_heading ';' uses_clause ';' block

    5 program_heading: "program" IDENTIFIER
    6                | "program" IDENTIFIER '(' program_parameters ')'

    7 program_parameters: identifier_list

    8 uses_clause: "uses" identifier_list

    9 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part

   10 label_declaration_part: "label" label_list ';'
   11                       | /* empty */

   12 label_list: label_list ',' label
   13           | label

   14 $@1: /* empty */

   15 label: DECIMAL_INT $@1

   16 constant_declaration_part: "const" constant_declaration_list
   17                          | /* empty */

   18 constant_declaration_list: constant_declaration_list constant_declaration
   19                          | constant_declaration

   20 constant_declaration: IDENTIFIER '=' constant ';'

   21 $@2: /* empty */

   22 constant: constant_identifier $@2
   23         | sign constant_identifier
   24         | DECIMAL_INT
   25         | HEXADECIMAL
   26         | REAL_DECIMAL
   27         | QUOTED_STRING
   28         | QUOTED_CHAR

   29 constant_identifier: IDENTIFIER

   30 type_declaration_part: "type" type_declaration_list
   31                      | /* empty */

   32 type_declaration_list: type_declaration_list type_declaration
   33                      | type_declaration

   34 type_declaration: IDENTIFIER '=' type ';'

   35 variable_declaration_part: "var" variable_declaration_list
   36                          | /* empty */

   37 variable_declaration_list: variable_declaration_list variable_declaration
   38                          | variable_declaration

   39 variable_declaration: identifier_list ':' type ';'

   40 procedure_and_function_declaration_part: procedure_and_function_declaration_list
   41                                        | /* empty */

   42 procedure_and_function_declaration_list: procedure_and_function_declaration_list procedure_and_function_declaration
   43                                        | procedure_and_function_declaration

   44 procedure_and_function_declaration: procedure_declaration
   45                                   | function_declaration

   46 statement_part: compound_statement
   47               | /* empty */

   48 sign: '+'
   49     | '-'

   50 identifier_list: identifier_list ',' IDENTIFIER
   51                | IDENTIFIER

   52 type: simple_type
   53     | structured_type
   54     | pointer_type
   55     | IDENTIFIER

   56 simple_type: ordinal_type
   57            | real_type
   58            | string_type

   59 ordinal_type: subrange_type
   60             | enumerated_type
   61             | ordinal_type_identifier

   62 ordinal_type_identifier: "integer"
   63                        | "word"
   64                        | "longint"
   65                        | "char"
   66                        | "boolean"

   67 enumerated_type: '(' identifier_list ')'

   68 subrange_type: constant ".." constant

   69 real_type: real_type_identifier

   70 real_type_identifier: "real"

   71 string_type: "string" '[' DECIMAL_INT ']'

   72 structured_type: "packed" type_list
   73                | type_list

   74 type_list: array_type
   75          | set_type
   76          | file_type
   77          | record_type

   78 array_type: "array" '[' index_type_list ']' "of" type

   79 index_type_list: index_type_list ',' ordinal_type
   80                | ordinal_type

   81 record_type: "record" "end"
   82            | "record" field_list "end"

   83 field_list: fixed_part
   84           | fixed_part ';'
   85           | fixed_part ';' variant_part
   86           | fixed_part ';' variant_part ';'
   87           | variant_part
   88           | variant_part ';'

   89 fixed_part: fixed_part ';' field_declaration
   90           | field_declaration

   91 field_declaration: identifier_list ':' type

   92 variant_part: "case" tag_field_type "of" variant_list
   93             | "case" IDENTIFIER ':' tag_field_type "of" variant_list

   94 variant_list: variant_list ';' variant
   95             | variant

   96 variant: constant_list ':' '(' ')'
   97        | constant_list ':' '(' field_list ')'

   98 constant_list: constant_list ',' constant
   99              | constant

  100 tag_field_type: IDENTIFIER

  101 set_type: "set" "of" ordinal_type

  102 file_type: "file"
  103          | "of" type

  104 pointer_type: '^' base_type
  105             | pointer_type_identifier

  106 pointer_type_identifier: "nil"

  107 base_type: IDENTIFIER

  108 variable_reference: variable_identifier qualifier_list

  109 variable_identifier: IDENTIFIER

  110 qualifier_list: qualifier_list qualifier
  111               | qualifier

  112 qualifier: index
  113          | field_designator
  114          | '^'

  115 index: '[' expression_list ']'

  116 expression_list: expression_list ',' expression
  117                | expression

  118 field_designator: '.' IDENTIFIER

  119 unsigned_constant: unsigned_number
  120                  | QUOTED_STRING
  121                  | "nil"

  122 unsigned_number: DECIMAL_INT
  123                | HEXADECIMAL
  124                | REAL_DECIMAL

  125 factor: variable_reference
  126       | '@' variable_reference
  127       | unsigned_constant
  128       | function_call
  129       | set_constructor
  130       | '(' expression ')'
  131       | "not" factor
  132       | IDENTIFIER

  133 term: term term_operator_list factor
  134     | factor

  135 term_operator_list: '*'
  136                   | '/'
  137                   | "div"
  138                   | "mod"
  139                   | "and"

  140 simple_expression: sign simple_expression_term_operator_iterable
  141                  | simple_expression_term_operator_iterable

  142 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list term
  143                                         | term

  144 simple_expression_term_operator_list: '+'
  145                                     | '-'
  146                                     | "or"

  147 expression: simple_expression
  148           | simple_expression relational_operator simple_expression

  149 relational_operator: '='
  150                    | '<'
  151                    | '>'
  152                    | LE
  153                    | RE
  154                    | NOTEQUAL
  155                    | "in"

  156 function_call: function_identifier actual_parameter_list

  157 function_identifier: IDENTIFIER

  158 actual_parameter_list: '(' actual_parameter_iterable ')'

  159 actual_parameter_iterable: actual_parameter_iterable ',' actual_parameter
  160                          | actual_parameter

  161 actual_parameter: expression
  162                 | procedure_identifier

  163 procedure_identifier: "write"
  164                     | "writeln"
  165                     | "read"
  166                     | "readln"

  167 set_constructor: '[' ']'
  168                | '[' member_group_list ']'

  169 member_group_list: member_group_list ',' member_group
  170                  | member_group

  171 member_group: expression
  172             | expression ".." expression

  173 statement: /* empty */
  174          | label ':'
  175          | label ':' simple_statement
  176          | label ':' structured_statement
  177          | simple_statement
  178          | structured_statement

  179 simple_statement: assignment_statement
  180                 | procedure_statement
  181                 | goto_statement

  182 assignment_statement: variable_reference ":=" expression
  183                     | function_identifier ":=" expression

  184 procedure_statement: procedure_identifier
  185                    | procedure_identifier actual_parameter_list

  186 goto_statement: "goto" label

  187 structured_statement: compound_statement
  188                     | conditional_statement
  189                     | repetitive_statement
  190                     | with_statement

  191 compound_statement: "begin" statement_list "end"

  192 statement_list: statement_list ';' statement
  193               | statement

  194 conditional_statement: if_statement
  195                      | case_statement

  196 if_statement: "if" expression "then" statement
  197             | "if" expression "then" statement "else" statement

  198 case_statement: "case" expression "of" case_list "end"
  199               | "case" expression "of" case_list otherwise_clause "end"
  200               | "case" expression "of" case_list otherwise_clause ';' "end"
  201               | "case" expression "of" case_list ';' "end"

  202 case_list: case_list ',' case
  203          | case

  204 case: constant_list ':' statement

  205 otherwise_clause: ';' "otherwise" statement

  206 repetitive_statement: repeat_statement
  207                     | while_statement
  208                     | for_statement

  209 repeat_statement: "repeat" statement_list "until" expression

  210 while_statement: "while" expression "do" statement

  211 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" statement
  212              | "for" control_variable ":=" initial_value "downto" final_value "do" statement

  213 control_variable: IDENTIFIER

  214 initial_value: expression

  215 final_value: expression

  216 with_statement: "with" record_variable_reference_list "do" statement

  217 record_variable_reference_list: record_variable_reference_list ',' variable_reference
  218                               | variable_reference

  219 procedure_declaration: procedure_heading ';' procedure_body ';'

  220 procedure_body: block
  221               | "forward"
  222               | "external"

  223 procedure_heading: "procedure" IDENTIFIER
  224                  | "procedure" IDENTIFIER formal_parameter_list

  225 function_declaration: function_heading ';' function_body ';'

  226 function_body: block
  227              | "forward"
  228              | "external"

  229 function_heading: "function" IDENTIFIER ':' IDENTIFIER
  230                 | "function" IDENTIFIER formal_parameter_list ':' IDENTIFIER

  231 formal_parameter_list: '(' formal_parameter_list_iterable ')'

  232 formal_parameter_list_iterable: formal_parameter_list_iterable ';' formal_parameter_list_iterable_list
  233                               | formal_parameter_list_iterable_list

  234 formal_parameter_list_iterable_list: parameter_declaration
  235                                    | procedure_heading
  236                                    | function_heading

  237 parameter_declaration: "var" identifier_list ':' type_identifier
  238                      | identifier_list ':' type_identifier

  239 type_identifier: IDENTIFIER

  240 regular_unit: unit_heading ';' interface_part implementation_part "end" '.'

  241 unit_heading: "unit" IDENTIFIER

  242 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

  243 uses_clause_empty: uses_clause
  244                  | /* empty */

  245 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 67 96 97 130 158 231
')' (41) 6 67 96 97 130 158 231
'*' (42) 135
'+' (43) 48 144
',' (44) 12 50 79 98 116 159 169 202 217
'-' (45) 49 145
'.' (46) 118 240
'/' (47) 136
':' (58) 39 91 93 96 97 174 175 176 204 229 230 237 238
';' (59) 3 4 10 20 34 39 84 85 86 88 89 94 192 200 201 205 219 225
    232 240
'<' (60) 150
'=' (61) 20 34 149
'>' (62) 151
'@' (64) 126
'[' (91) 71 78 115 167 168
']' (93) 71 78 115 167 168
'^' (94) 104 114
error (256)
DECIMAL_INT (258) 15 24 71 122
HEXADECIMAL (259) 25 123
REAL_DECIMAL (260) 26 124
IDENTIFIER (261) 5 6 20 29 34 50 51 55 93 100 107 109 118 132 157 213
    223 224 229 230 239 241
QUOTED_STRING (262) 27 120
QUOTED_CHAR (263) 28
"program" (264) 5 6
"begin" (265) 191
"uses" (266) 8
"unit" (267) 241
"interface" (268) 242
"implementation" (269) 245
"label" (270) 10
"const" (271) 16
"type" (272) 30
"real" (273) 70
"integer" (274) 62
"longint" (275) 64
"word" (276) 63
"char" (277) 65
"boolean" (278) 66
"true" (279)
"false" (280)
"string" (281) 71
"packed" (282) 72
"array" (283) 78
"record" (284) 81 82
"end" (285) 81 82 191 198 199 200 201 240
"case" (286) 92 93 198 199 200 201
"otherwise" (287) 205
"of" (288) 78 92 93 101 103 198 199 200 201
"set" (289) 101
"var" (290) 35 237
"forward" (291) 221 227
"external" (292) 222 228
"function" (293) 229 230
"procedure" (294) 223 224
"file" (295) 102
"goto" (296) 186
"if" (297) 196 197
"then" (298) 196 197
"else" (299) 197
"repeat" (300) 209
"until" (301) 209
"while" (302) 210
"do" (303) 210 211 212 216
"for" (304) 211 212
"to" (305) 211
"downto" (306) 212
"with" (307) 216
"nil" (308) 106 121
"read" (309) 165
"readln" (310) 166
"write" (311) 163
"writeln" (312) 164
"in" (313) 155
"or" (314) 146
"div" (315) 137
"mod" (316) 138
"and" (317) 139
"not" (318) 131
ASSIGNMENT_PRECEDENCE (319)
":=" (320) 182 183 211 212
".." (321) 68 172
"<>" (322)
"<=" (323)
">=" (324)
RE (325) 153
LE (326) 152
NOTEQUAL (327) 154
POSITIVE (328)
NEGATIVE (329)


Nonterminals, with rules where they appear

$accept (92)
    on left: 0
pascal (93)
    on left: 1 2, on right: 0
program (94)
    on left: 3 4, on right: 1
program_heading (95)
    on left: 5 6, on right: 3 4
program_parameters (96)
    on left: 7, on right: 6
uses_clause (97)
    on left: 8, on right: 4 243
block (98)
    on left: 9, on right: 3 4 220 226
label_declaration_part (99)
    on left: 10 11, on right: 9
label_list (100)
    on left: 12 13, on right: 10 12
label (101)
    on left: 15, on right: 12 13 174 175 176 186
$@1 (102)
    on left: 14, on right: 15
constant_declaration_part (103)
    on left: 16 17, on right: 9 242 245
constant_declaration_list (104)
    on left: 18 19, on right: 16 18
constant_declaration (105)
    on left: 20, on right: 18 19
constant (106)
    on left: 22 23 24 25 26 27 28, on right: 20 68 98 99
$@2 (107)
    on left: 21, on right: 22
constant_identifier (108)
    on left: 29, on right: 22 23
type_declaration_part (109)
    on left: 30 31, on right: 9 242 245
type_declaration_list (110)
    on left: 32 33, on right: 30 32
type_declaration (111)
    on left: 34, on right: 32 33
variable_declaration_part (112)
    on left: 35 36, on right: 9 242 245
variable_declaration_list (113)
    on left: 37 38, on right: 35 37
variable_declaration (114)
    on left: 39, on right: 37 38
procedure_and_function_declaration_part (115)
    on left: 40 41, on right: 9 242 245
procedure_and_function_declaration_list (116)
    on left: 42 43, on right: 40 42
procedure_and_function_declaration (117)
    on left: 44 45, on right: 42 43
statement_part (118)
    on left: 46 47, on right: 9
sign (119)
    on left: 48 49, on right: 23 140
identifier_list (120)
    on left: 50 51, on right: 7 8 39 50 67 91 237 238
type (121)
    on left: 52 53 54 55, on right: 34 39 78 91 103
simple_type (122)
    on left: 56 57 58, on right: 52
ordinal_type (123)
    on left: 59 60 61, on right: 56 79 80 101
ordinal_type_identifier (124)
    on left: 62 63 64 65 66, on right: 61
enumerated_type (125)
    on left: 67, on right: 60
subrange_type (126)
    on left: 68, on right: 59
real_type (127)
    on left: 69, on right: 57
real_type_identifier (128)
    on left: 70, on right: 69
string_type (129)
    on left: 71, on right: 58
structured_type (130)
    on left: 72 73, on right: 53
type_list (131)
    on left: 74 75 76 77, on right: 72 73
array_type (132)
    on left: 78, on right: 74
index_type_list (133)
    on left: 79 80, on right: 78 79
record_type (134)
    on left: 81 82, on right: 77
field_list (135)
    on left: 83 84 85 86 87 88, on right: 82 97
fixed_part (136)
    on left: 89 90, on right: 83 84 85 86 89
field_declaration (137)
    on left: 91, on right: 89 90
variant_part (138)
    on left: 92 93, on right: 85 86 87 88
variant_list (139)
    on left: 94 95, on right: 92 93 94
variant (140)
    on left: 96 97, on right: 94 95
constant_list (141)
    on left: 98 99, on right: 96 97 98 204
tag_field_type (142)
    on left: 100, on right: 92 93
set_type (143)
    on left: 101, on right: 75
file_type (144)
    on left: 102 103, on right: 76
pointer_type (145)
    on left: 104 105, on right: 54
pointer_type_identifier (146)
    on left: 106, on right: 105
base_type (147)
    on left: 107, on right: 104
variable_reference (148)
    on left: 108, on right: 125 126 182 217 218
variable_identifier (149)
    on left: 109, on right: 108
qualifier_list (150)
    on left: 110 111, on right: 108 110
qualifier (151)
    on left: 112 113 114, on right: 110 111
index (152)
    on left: 115, on right: 112
expression_list (153)
    on left: 116 117, on right: 115 116
field_designator (154)
    on left: 118, on right: 113
unsigned_constant (155)
    on left: 119 120 121, on right: 127
unsigned_number (156)
    on left: 122 123 124, on right: 119
factor (157)
    on left: 125 126 127 128 129 130 131 132, on right: 131 133 134
term (158)
    on left: 133 134, on right: 133 142 143
term_operator_list (159)
    on left: 135 136 137 138 139, on right: 133
simple_expression (160)
    on left: 140 141, on right: 147 148
simple_expression_term_operator_iterable (161)
    on left: 142 143, on right: 140 141 142
simple_expression_term_operator_list (162)
    on left: 144 145 146, on right: 142
expression (163)
    on left: 147 148, on right: 116 117 130 161 171 172 182 183 196
    197 198 199 200 201 209 210 214 215
relational_operator (164)
    on left: 149 150 151 152 153 154 155, on right: 148
function_call (165)
    on left: 156, on right: 128
function_identifier (166)
    on left: 157, on right: 156 183
actual_parameter_list (167)
    on left: 158, on right: 156 185
actual_parameter_iterable (168)
    on left: 159 160, on right: 158 159
actual_parameter (169)
    on left: 161 162, on right: 159 160
procedure_identifier (170)
    on left: 163 164 165 166, on right: 162 184 185
set_constructor (171)
    on left: 167 168, on right: 129
member_group_list (172)
    on left: 169 170, on right: 168 169
member_group (173)
    on left: 171 172, on right: 169 170
statement (174)
    on left: 173 174 175 176 177 178, on right: 192 193 196 197 204
    205 210 211 212 216
simple_statement (175)
    on left: 179 180 181, on right: 175 177
assignment_statement (176)
    on left: 182 183, on right: 179
procedure_statement (177)
    on left: 184 185, on right: 180
goto_statement (178)
    on left: 186, on right: 181
structured_statement (179)
    on left: 187 188 189 190, on right: 176 178
compound_statement (180)
    on left: 191, on right: 46 187
statement_list (181)
    on left: 192 193, on right: 191 192 209
conditional_statement (182)
    on left: 194 195, on right: 188
if_statement (183)
    on left: 196 197, on right: 194
case_statement (184)
    on left: 198 199 200 201, on right: 195
case_list (185)
    on left: 202 203, on right: 198 199 200 201 202
case (186)
    on left: 204, on right: 202 203
otherwise_clause (187)
    on left: 205, on right: 199 200
repetitive_statement (188)
    on left: 206 207 208, on right: 189
repeat_statement (189)
    on left: 209, on right: 206
while_statement (190)
    on left: 210, on right: 207
for_statement (191)
    on left: 211 212, on right: 208
control_variable (192)
    on left: 213, on right: 211 212
initial_value (193)
    on left: 214, on right: 211 212
final_value (194)
    on left: 215, on right: 211 212
with_statement (195)
    on left: 216, on right: 190
record_variable_reference_list (196)
    on left: 217 218, on right: 216 217
procedure_declaration (197)
    on left: 219, on right: 44
procedure_body (198)
    on left: 220 221 222, on right: 219
procedure_heading (199)
    on left: 223 224, on right: 219 235
function_declaration (200)
    on left: 225, on right: 45
function_body (201)
    on left: 226 227 228, on right: 225
function_heading (202)
    on left: 229 230, on right: 225 236
formal_parameter_list (203)
    on left: 231, on right: 224 230
formal_parameter_list_iterable (204)
    on left: 232 233, on right: 231 232
formal_parameter_list_iterable_list (205)
    on left: 234 235 236, on right: 232 233
parameter_declaration (206)
    on left: 237 238, on right: 234
type_identifier (207)
    on left: 239, on right: 237 238
regular_unit (208)
    on left: 240, on right: 2
unit_heading (209)
    on left: 241, on right: 240
interface_part (210)
    on left: 242, on right: 240
uses_clause_empty (211)
    on left: 243 244, on right: 242
implementation_part (212)
    on left: 245, on right: 240


state 0

    0 $accept: . pascal $end

    "program"  shift, and go to state 1
    "unit"     shift, and go to state 2

    pascal           go to state 3
    program          go to state 4
    program_heading  go to state 5
    regular_unit     go to state 6
    unit_heading     go to state 7


state 1

    5 program_heading: "program" . IDENTIFIER
    6                | "program" . IDENTIFIER '(' program_parameters ')'

    IDENTIFIER  shift, and go to state 8


state 2

  241 unit_heading: "unit" . IDENTIFIER

    IDENTIFIER  shift, and go to state 9


state 3

    0 $accept: pascal . $end

    $end  shift, and go to state 10


state 4

    1 pascal: program .

    $default  reduce using rule 1 (pascal)


state 5

    3 program: program_heading . ';' block
    4        | program_heading . ';' uses_clause ';' block

    ';'  shift, and go to state 11


state 6

    2 pascal: regular_unit .

    $default  reduce using rule 2 (pascal)


state 7

  240 regular_unit: unit_heading . ';' interface_part implementation_part "end" '.'

    ';'  shift, and go to state 12


state 8

    5 program_heading: "program" IDENTIFIER .
    6                | "program" IDENTIFIER . '(' program_parameters ')'

    '('  shift, and go to state 13

    $default  reduce using rule 5 (program_heading)


state 9

  241 unit_heading: "unit" IDENTIFIER .

    $default  reduce using rule 241 (unit_heading)


state 10

    0 $accept: pascal $end .

    $default  accept


state 11

    3 program: program_heading ';' . block
    4        | program_heading ';' . uses_clause ';' block

    "uses"   shift, and go to state 14
    "label"  shift, and go to state 15

    $default  reduce using rule 11 (label_declaration_part)

    uses_clause             go to state 16
    block                   go to state 17
    label_declaration_part  go to state 18


state 12

  240 regular_unit: unit_heading ';' . interface_part implementation_part "end" '.'

    "interface"  shift, and go to state 19

    interface_part  go to state 20


state 13

    6 program_heading: "program" IDENTIFIER '(' . program_parameters ')'

    IDENTIFIER  shift, and go to state 21

    program_parameters  go to state 22
    identifier_list     go to state 23


state 14

    8 uses_clause: "uses" . identifier_list

    IDENTIFIER  shift, and go to state 21

    identifier_list  go to state 24


state 15

   10 label_declaration_part: "label" . label_list ';'

    DECIMAL_INT  shift, and go to state 25

    label_list  go to state 26
    label       go to state 27


state 16

    4 program: program_heading ';' uses_clause . ';' block

    ';'  shift, and go to state 28


state 17

    3 program: program_heading ';' block .

    $default  reduce using rule 3 (program)


state 18

    9 block: label_declaration_part . constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part

    "const"  shift, and go to state 29

    $default  reduce using rule 17 (constant_declaration_part)

    constant_declaration_part  go to state 30


state 19

  242 interface_part: "interface" . uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "uses"  shift, and go to state 14

    $default  reduce using rule 244 (uses_clause_empty)

    uses_clause        go to state 31
    uses_clause_empty  go to state 32


state 20

  240 regular_unit: unit_heading ';' interface_part . implementation_part "end" '.'

    "implementation"  shift, and go to state 33

    implementation_part  go to state 34


state 21

   51 identifier_list: IDENTIFIER .

    $default  reduce using rule 51 (identifier_list)


state 22

    6 program_heading: "program" IDENTIFIER '(' program_parameters . ')'

    ')'  shift, and go to state 35


state 23

    7 program_parameters: identifier_list .
   50 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 36

    $default  reduce using rule 7 (program_parameters)


state 24

    8 uses_clause: "uses" identifier_list .
   50 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 36

    $default  reduce using rule 8 (uses_clause)


state 25

   15 label: DECIMAL_INT . $@1

    $default  reduce using rule 14 ($@1)

    $@1  go to state 37


state 26

   10 label_declaration_part: "label" label_list . ';'
   12 label_list: label_list . ',' label

    ';'  shift, and go to state 38
    ','  shift, and go to state 39


state 27

   13 label_list: label .

    $default  reduce using rule 13 (label_list)


state 28

    4 program: program_heading ';' uses_clause ';' . block

    "label"  shift, and go to state 15

    $default  reduce using rule 11 (label_declaration_part)

    block                   go to state 40
    label_declaration_part  go to state 18


state 29

   16 constant_declaration_part: "const" . constant_declaration_list

    IDENTIFIER  shift, and go to state 41

    constant_declaration_list  go to state 42
    constant_declaration       go to state 43


state 30

    9 block: label_declaration_part constant_declaration_part . type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part

    "type"  shift, and go to state 44

    $default  reduce using rule 31 (type_declaration_part)

    type_declaration_part  go to state 45


state 31

  243 uses_clause_empty: uses_clause .

    $default  reduce using rule 243 (uses_clause_empty)


state 32

  242 interface_part: "interface" uses_clause_empty . constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "const"  shift, and go to state 29

    $default  reduce using rule 17 (constant_declaration_part)

    constant_declaration_part  go to state 46


state 33

  245 implementation_part: "implementation" . constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "const"  shift, and go to state 29

    $default  reduce using rule 17 (constant_declaration_part)

    constant_declaration_part  go to state 47


state 34

  240 regular_unit: unit_heading ';' interface_part implementation_part . "end" '.'

    "end"  shift, and go to state 48


state 35

    6 program_heading: "program" IDENTIFIER '(' program_parameters ')' .

    $default  reduce using rule 6 (program_heading)


state 36

   50 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 49


state 37

   15 label: DECIMAL_INT $@1 .

    $default  reduce using rule 15 (label)


state 38

   10 label_declaration_part: "label" label_list ';' .

    $default  reduce using rule 10 (label_declaration_part)


state 39

   12 label_list: label_list ',' . label

    DECIMAL_INT  shift, and go to state 25

    label  go to state 50


state 40

    4 program: program_heading ';' uses_clause ';' block .

    $default  reduce using rule 4 (program)


state 41

   20 constant_declaration: IDENTIFIER . '=' constant ';'

    '='  shift, and go to state 51


state 42

   16 constant_declaration_part: "const" constant_declaration_list .
   18 constant_declaration_list: constant_declaration_list . constant_declaration

    IDENTIFIER  shift, and go to state 41

    $default  reduce using rule 16 (constant_declaration_part)

    constant_declaration  go to state 52


state 43

   19 constant_declaration_list: constant_declaration .

    $default  reduce using rule 19 (constant_declaration_list)


state 44

   30 type_declaration_part: "type" . type_declaration_list

    IDENTIFIER  shift, and go to state 53

    type_declaration_list  go to state 54
    type_declaration       go to state 55


state 45

    9 block: label_declaration_part constant_declaration_part type_declaration_part . variable_declaration_part procedure_and_function_declaration_part statement_part

    "var"  shift, and go to state 56

    $default  reduce using rule 36 (variable_declaration_part)

    variable_declaration_part  go to state 57


state 46

  242 interface_part: "interface" uses_clause_empty constant_declaration_part . type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "type"  shift, and go to state 44

    $default  reduce using rule 31 (type_declaration_part)

    type_declaration_part  go to state 58


state 47

  245 implementation_part: "implementation" constant_declaration_part . type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "type"  shift, and go to state 44

    $default  reduce using rule 31 (type_declaration_part)

    type_declaration_part  go to state 59


state 48

  240 regular_unit: unit_heading ';' interface_part implementation_part "end" . '.'

    '.'  shift, and go to state 60


state 49

   50 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 50 (identifier_list)


state 50

   12 label_list: label_list ',' label .

    $default  reduce using rule 12 (label_list)


state 51

   20 constant_declaration: IDENTIFIER '=' . constant ';'

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68

    constant             go to state 69
    constant_identifier  go to state 70
    sign                 go to state 71


state 52

   18 constant_declaration_list: constant_declaration_list constant_declaration .

    $default  reduce using rule 18 (constant_declaration_list)


state 53

   34 type_declaration: IDENTIFIER . '=' type ';'

    '='  shift, and go to state 72


state 54

   30 type_declaration_part: "type" type_declaration_list .
   32 type_declaration_list: type_declaration_list . type_declaration

    IDENTIFIER  shift, and go to state 53

    $default  reduce using rule 30 (type_declaration_part)

    type_declaration  go to state 73


state 55

   33 type_declaration_list: type_declaration .

    $default  reduce using rule 33 (type_declaration_list)


state 56

   35 variable_declaration_part: "var" . variable_declaration_list

    IDENTIFIER  shift, and go to state 21

    variable_declaration_list  go to state 74
    variable_declaration       go to state 75
    identifier_list            go to state 76


state 57

    9 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part . procedure_and_function_declaration_part statement_part

    "function"   shift, and go to state 77
    "procedure"  shift, and go to state 78

    $default  reduce using rule 41 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 79
    procedure_and_function_declaration_list  go to state 80
    procedure_and_function_declaration       go to state 81
    procedure_declaration                    go to state 82
    procedure_heading                        go to state 83
    function_declaration                     go to state 84
    function_heading                         go to state 85


state 58

  242 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part . variable_declaration_part procedure_and_function_declaration_part

    "var"  shift, and go to state 56

    $default  reduce using rule 36 (variable_declaration_part)

    variable_declaration_part  go to state 86


state 59

  245 implementation_part: "implementation" constant_declaration_part type_declaration_part . variable_declaration_part procedure_and_function_declaration_part

    "var"  shift, and go to state 56

    $default  reduce using rule 36 (variable_declaration_part)

    variable_declaration_part  go to state 87


state 60

  240 regular_unit: unit_heading ';' interface_part implementation_part "end" '.' .

    $default  reduce using rule 240 (regular_unit)


state 61

   24 constant: DECIMAL_INT .

    $default  reduce using rule 24 (constant)


state 62

   25 constant: HEXADECIMAL .

    $default  reduce using rule 25 (constant)


state 63

   26 constant: REAL_DECIMAL .

    $default  reduce using rule 26 (constant)


state 64

   29 constant_identifier: IDENTIFIER .

    $default  reduce using rule 29 (constant_identifier)


state 65

   27 constant: QUOTED_STRING .

    $default  reduce using rule 27 (constant)


state 66

   28 constant: QUOTED_CHAR .

    $default  reduce using rule 28 (constant)


state 67

   48 sign: '+' .

    $default  reduce using rule 48 (sign)


state 68

   49 sign: '-' .

    $default  reduce using rule 49 (sign)


state 69

   20 constant_declaration: IDENTIFIER '=' constant . ';'

    ';'  shift, and go to state 88


state 70

   22 constant: constant_identifier . $@2

    $default  reduce using rule 21 ($@2)

    $@2  go to state 89


state 71

   23 constant: sign . constant_identifier

    IDENTIFIER  shift, and go to state 64

    constant_identifier  go to state 90


state 72

   34 type_declaration: IDENTIFIER '=' . type ';'

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 91
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 92
    "integer"      shift, and go to state 93
    "longint"      shift, and go to state 94
    "word"         shift, and go to state 95
    "char"         shift, and go to state 96
    "boolean"      shift, and go to state 97
    "string"       shift, and go to state 98
    "packed"       shift, and go to state 99
    "array"        shift, and go to state 100
    "record"       shift, and go to state 101
    "of"           shift, and go to state 102
    "set"          shift, and go to state 103
    "file"         shift, and go to state 104
    "nil"          shift, and go to state 105
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 106
    '^'            shift, and go to state 107

    constant                 go to state 108
    constant_identifier      go to state 70
    sign                     go to state 71
    type                     go to state 109
    simple_type              go to state 110
    ordinal_type             go to state 111
    ordinal_type_identifier  go to state 112
    enumerated_type          go to state 113
    subrange_type            go to state 114
    real_type                go to state 115
    real_type_identifier     go to state 116
    string_type              go to state 117
    structured_type          go to state 118
    type_list                go to state 119
    array_type               go to state 120
    record_type              go to state 121
    set_type                 go to state 122
    file_type                go to state 123
    pointer_type             go to state 124
    pointer_type_identifier  go to state 125


state 73

   32 type_declaration_list: type_declaration_list type_declaration .

    $default  reduce using rule 32 (type_declaration_list)


state 74

   35 variable_declaration_part: "var" variable_declaration_list .
   37 variable_declaration_list: variable_declaration_list . variable_declaration

    IDENTIFIER  shift, and go to state 21

    $default  reduce using rule 35 (variable_declaration_part)

    variable_declaration  go to state 126
    identifier_list       go to state 76


state 75

   38 variable_declaration_list: variable_declaration .

    $default  reduce using rule 38 (variable_declaration_list)


state 76

   39 variable_declaration: identifier_list . ':' type ';'
   50 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 36
    ':'  shift, and go to state 127


state 77

  229 function_heading: "function" . IDENTIFIER ':' IDENTIFIER
  230                 | "function" . IDENTIFIER formal_parameter_list ':' IDENTIFIER

    IDENTIFIER  shift, and go to state 128


state 78

  223 procedure_heading: "procedure" . IDENTIFIER
  224                  | "procedure" . IDENTIFIER formal_parameter_list

    IDENTIFIER  shift, and go to state 129


state 79

    9 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part . statement_part

    "begin"  shift, and go to state 130

    $default  reduce using rule 47 (statement_part)

    statement_part      go to state 131
    compound_statement  go to state 132


state 80

   40 procedure_and_function_declaration_part: procedure_and_function_declaration_list .
   42 procedure_and_function_declaration_list: procedure_and_function_declaration_list . procedure_and_function_declaration

    "function"   shift, and go to state 77
    "procedure"  shift, and go to state 78

    $default  reduce using rule 40 (procedure_and_function_declaration_part)

    procedure_and_function_declaration  go to state 133
    procedure_declaration               go to state 82
    procedure_heading                   go to state 83
    function_declaration                go to state 84
    function_heading                    go to state 85


state 81

   43 procedure_and_function_declaration_list: procedure_and_function_declaration .

    $default  reduce using rule 43 (procedure_and_function_declaration_list)


state 82

   44 procedure_and_function_declaration: procedure_declaration .

    $default  reduce using rule 44 (procedure_and_function_declaration)


state 83

  219 procedure_declaration: procedure_heading . ';' procedure_body ';'

    ';'  shift, and go to state 134


state 84

   45 procedure_and_function_declaration: function_declaration .

    $default  reduce using rule 45 (procedure_and_function_declaration)


state 85

  225 function_declaration: function_heading . ';' function_body ';'

    ';'  shift, and go to state 135


state 86

  242 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part . procedure_and_function_declaration_part

    "function"   shift, and go to state 77
    "procedure"  shift, and go to state 78

    $default  reduce using rule 41 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 136
    procedure_and_function_declaration_list  go to state 80
    procedure_and_function_declaration       go to state 81
    procedure_declaration                    go to state 82
    procedure_heading                        go to state 83
    function_declaration                     go to state 84
    function_heading                         go to state 85


state 87

  245 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part . procedure_and_function_declaration_part

    "function"   shift, and go to state 77
    "procedure"  shift, and go to state 78

    $default  reduce using rule 41 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 137
    procedure_and_function_declaration_list  go to state 80
    procedure_and_function_declaration       go to state 81
    procedure_declaration                    go to state 82
    procedure_heading                        go to state 83
    function_declaration                     go to state 84
    function_heading                         go to state 85


state 88

   20 constant_declaration: IDENTIFIER '=' constant ';' .

    $default  reduce using rule 20 (constant_declaration)


state 89

   22 constant: constant_identifier $@2 .

    $default  reduce using rule 22 (constant)


state 90

   23 constant: sign constant_identifier .

    $default  reduce using rule 23 (constant)


state 91

   29 constant_identifier: IDENTIFIER .
   55 type: IDENTIFIER .

    ".."      reduce using rule 29 (constant_identifier)
    $default  reduce using rule 55 (type)


state 92

   70 real_type_identifier: "real" .

    $default  reduce using rule 70 (real_type_identifier)


state 93

   62 ordinal_type_identifier: "integer" .

    $default  reduce using rule 62 (ordinal_type_identifier)


state 94

   64 ordinal_type_identifier: "longint" .

    $default  reduce using rule 64 (ordinal_type_identifier)


state 95

   63 ordinal_type_identifier: "word" .

    $default  reduce using rule 63 (ordinal_type_identifier)


state 96

   65 ordinal_type_identifier: "char" .

    $default  reduce using rule 65 (ordinal_type_identifier)


state 97

   66 ordinal_type_identifier: "boolean" .

    $default  reduce using rule 66 (ordinal_type_identifier)


state 98

   71 string_type: "string" . '[' DECIMAL_INT ']'

    '['  shift, and go to state 138


state 99

   72 structured_type: "packed" . type_list

    "array"   shift, and go to state 100
    "record"  shift, and go to state 101
    "of"      shift, and go to state 102
    "set"     shift, and go to state 103
    "file"    shift, and go to state 104

    type_list    go to state 139
    array_type   go to state 120
    record_type  go to state 121
    set_type     go to state 122
    file_type    go to state 123


state 100

   78 array_type: "array" . '[' index_type_list ']' "of" type

    '['  shift, and go to state 140


state 101

   81 record_type: "record" . "end"
   82            | "record" . field_list "end"

    IDENTIFIER  shift, and go to state 21
    "end"       shift, and go to state 141
    "case"      shift, and go to state 142

    identifier_list    go to state 143
    field_list         go to state 144
    fixed_part         go to state 145
    field_declaration  go to state 146
    variant_part       go to state 147


state 102

  103 file_type: "of" . type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 91
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 92
    "integer"      shift, and go to state 93
    "longint"      shift, and go to state 94
    "word"         shift, and go to state 95
    "char"         shift, and go to state 96
    "boolean"      shift, and go to state 97
    "string"       shift, and go to state 98
    "packed"       shift, and go to state 99
    "array"        shift, and go to state 100
    "record"       shift, and go to state 101
    "of"           shift, and go to state 102
    "set"          shift, and go to state 103
    "file"         shift, and go to state 104
    "nil"          shift, and go to state 105
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 106
    '^'            shift, and go to state 107

    constant                 go to state 108
    constant_identifier      go to state 70
    sign                     go to state 71
    type                     go to state 148
    simple_type              go to state 110
    ordinal_type             go to state 111
    ordinal_type_identifier  go to state 112
    enumerated_type          go to state 113
    subrange_type            go to state 114
    real_type                go to state 115
    real_type_identifier     go to state 116
    string_type              go to state 117
    structured_type          go to state 118
    type_list                go to state 119
    array_type               go to state 120
    record_type              go to state 121
    set_type                 go to state 122
    file_type                go to state 123
    pointer_type             go to state 124
    pointer_type_identifier  go to state 125


state 103

  101 set_type: "set" . "of" ordinal_type

    "of"  shift, and go to state 149


state 104

  102 file_type: "file" .

    $default  reduce using rule 102 (file_type)


state 105

  106 pointer_type_identifier: "nil" .

    $default  reduce using rule 106 (pointer_type_identifier)


state 106

   67 enumerated_type: '(' . identifier_list ')'

    IDENTIFIER  shift, and go to state 21

    identifier_list  go to state 150


state 107

  104 pointer_type: '^' . base_type

    IDENTIFIER  shift, and go to state 151

    base_type  go to state 152


state 108

   68 subrange_type: constant . ".." constant

    ".."  shift, and go to state 153


state 109

   34 type_declaration: IDENTIFIER '=' type . ';'

    ';'  shift, and go to state 154


state 110

   52 type: simple_type .

    $default  reduce using rule 52 (type)


state 111

   56 simple_type: ordinal_type .

    $default  reduce using rule 56 (simple_type)


state 112

   61 ordinal_type: ordinal_type_identifier .

    $default  reduce using rule 61 (ordinal_type)


state 113

   60 ordinal_type: enumerated_type .

    $default  reduce using rule 60 (ordinal_type)


state 114

   59 ordinal_type: subrange_type .

    $default  reduce using rule 59 (ordinal_type)


state 115

   57 simple_type: real_type .

    $default  reduce using rule 57 (simple_type)


state 116

   69 real_type: real_type_identifier .

    $default  reduce using rule 69 (real_type)


state 117

   58 simple_type: string_type .

    $default  reduce using rule 58 (simple_type)


state 118

   53 type: structured_type .

    $default  reduce using rule 53 (type)


state 119

   73 structured_type: type_list .

    $default  reduce using rule 73 (structured_type)


state 120

   74 type_list: array_type .

    $default  reduce using rule 74 (type_list)


state 121

   77 type_list: record_type .

    $default  reduce using rule 77 (type_list)


state 122

   75 type_list: set_type .

    $default  reduce using rule 75 (type_list)


state 123

   76 type_list: file_type .

    $default  reduce using rule 76 (type_list)


state 124

   54 type: pointer_type .

    $default  reduce using rule 54 (type)


state 125

  105 pointer_type: pointer_type_identifier .

    $default  reduce using rule 105 (pointer_type)


state 126

   37 variable_declaration_list: variable_declaration_list variable_declaration .

    $default  reduce using rule 37 (variable_declaration_list)


state 127

   39 variable_declaration: identifier_list ':' . type ';'

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 91
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 92
    "integer"      shift, and go to state 93
    "longint"      shift, and go to state 94
    "word"         shift, and go to state 95
    "char"         shift, and go to state 96
    "boolean"      shift, and go to state 97
    "string"       shift, and go to state 98
    "packed"       shift, and go to state 99
    "array"        shift, and go to state 100
    "record"       shift, and go to state 101
    "of"           shift, and go to state 102
    "set"          shift, and go to state 103
    "file"         shift, and go to state 104
    "nil"          shift, and go to state 105
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 106
    '^'            shift, and go to state 107

    constant                 go to state 108
    constant_identifier      go to state 70
    sign                     go to state 71
    type                     go to state 155
    simple_type              go to state 110
    ordinal_type             go to state 111
    ordinal_type_identifier  go to state 112
    enumerated_type          go to state 113
    subrange_type            go to state 114
    real_type                go to state 115
    real_type_identifier     go to state 116
    string_type              go to state 117
    structured_type          go to state 118
    type_list                go to state 119
    array_type               go to state 120
    record_type              go to state 121
    set_type                 go to state 122
    file_type                go to state 123
    pointer_type             go to state 124
    pointer_type_identifier  go to state 125


state 128

  229 function_heading: "function" IDENTIFIER . ':' IDENTIFIER
  230                 | "function" IDENTIFIER . formal_parameter_list ':' IDENTIFIER

    '('  shift, and go to state 156
    ':'  shift, and go to state 157

    formal_parameter_list  go to state 158


state 129

  223 procedure_heading: "procedure" IDENTIFIER .
  224                  | "procedure" IDENTIFIER . formal_parameter_list

    '('  shift, and go to state 156

    $default  reduce using rule 223 (procedure_heading)

    formal_parameter_list  go to state 159


state 130

  191 compound_statement: "begin" . statement_list "end"

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 160
    "begin"      shift, and go to state 130
    "case"       shift, and go to state 161
    "goto"       shift, and go to state 162
    "if"         shift, and go to state 163
    "repeat"     shift, and go to state 164
    "while"      shift, and go to state 165
    "for"        shift, and go to state 166
    "with"       shift, and go to state 167
    "read"       shift, and go to state 168
    "readln"     shift, and go to state 169
    "write"      shift, and go to state 170
    "writeln"    shift, and go to state 171

    $default  reduce using rule 173 (statement)

    label                  go to state 172
    variable_reference     go to state 173
    variable_identifier    go to state 174
    function_identifier    go to state 175
    procedure_identifier   go to state 176
    statement              go to state 177
    simple_statement       go to state 178
    assignment_statement   go to state 179
    procedure_statement    go to state 180
    goto_statement         go to state 181
    structured_statement   go to state 182
    compound_statement     go to state 183
    statement_list         go to state 184
    conditional_statement  go to state 185
    if_statement           go to state 186
    case_statement         go to state 187
    repetitive_statement   go to state 188
    repeat_statement       go to state 189
    while_statement        go to state 190
    for_statement          go to state 191
    with_statement         go to state 192


state 131

    9 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part .

    $default  reduce using rule 9 (block)


state 132

   46 statement_part: compound_statement .

    $default  reduce using rule 46 (statement_part)


state 133

   42 procedure_and_function_declaration_list: procedure_and_function_declaration_list procedure_and_function_declaration .

    $default  reduce using rule 42 (procedure_and_function_declaration_list)


state 134

  219 procedure_declaration: procedure_heading ';' . procedure_body ';'

    "label"     shift, and go to state 15
    "forward"   shift, and go to state 193
    "external"  shift, and go to state 194

    $default  reduce using rule 11 (label_declaration_part)

    block                   go to state 195
    label_declaration_part  go to state 18
    procedure_body          go to state 196


state 135

  225 function_declaration: function_heading ';' . function_body ';'

    "label"     shift, and go to state 15
    "forward"   shift, and go to state 197
    "external"  shift, and go to state 198

    $default  reduce using rule 11 (label_declaration_part)

    block                   go to state 199
    label_declaration_part  go to state 18
    function_body           go to state 200


state 136

  242 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part .

    $default  reduce using rule 242 (interface_part)


state 137

  245 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part .

    $default  reduce using rule 245 (implementation_part)


state 138

   71 string_type: "string" '[' . DECIMAL_INT ']'

    DECIMAL_INT  shift, and go to state 201


state 139

   72 structured_type: "packed" type_list .

    $default  reduce using rule 72 (structured_type)


state 140

   78 array_type: "array" '[' . index_type_list ']' "of" type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "integer"      shift, and go to state 93
    "longint"      shift, and go to state 94
    "word"         shift, and go to state 95
    "char"         shift, and go to state 96
    "boolean"      shift, and go to state 97
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 106

    constant                 go to state 108
    constant_identifier      go to state 70
    sign                     go to state 71
    ordinal_type             go to state 202
    ordinal_type_identifier  go to state 112
    enumerated_type          go to state 113
    subrange_type            go to state 114
    index_type_list          go to state 203


state 141

   81 record_type: "record" "end" .

    $default  reduce using rule 81 (record_type)


state 142

   92 variant_part: "case" . tag_field_type "of" variant_list
   93             | "case" . IDENTIFIER ':' tag_field_type "of" variant_list

    IDENTIFIER  shift, and go to state 204

    tag_field_type  go to state 205


state 143

   50 identifier_list: identifier_list . ',' IDENTIFIER
   91 field_declaration: identifier_list . ':' type

    ','  shift, and go to state 36
    ':'  shift, and go to state 206


state 144

   82 record_type: "record" field_list . "end"

    "end"  shift, and go to state 207


state 145

   83 field_list: fixed_part .
   84           | fixed_part . ';'
   85           | fixed_part . ';' variant_part
   86           | fixed_part . ';' variant_part ';'
   89 fixed_part: fixed_part . ';' field_declaration

    ';'  shift, and go to state 208

    $default  reduce using rule 83 (field_list)


state 146

   90 fixed_part: field_declaration .

    $default  reduce using rule 90 (fixed_part)


state 147

   87 field_list: variant_part .
   88           | variant_part . ';'

    ';'  shift, and go to state 209

    $default  reduce using rule 87 (field_list)


state 148

  103 file_type: "of" type .

    $default  reduce using rule 103 (file_type)


state 149

  101 set_type: "set" "of" . ordinal_type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "integer"      shift, and go to state 93
    "longint"      shift, and go to state 94
    "word"         shift, and go to state 95
    "char"         shift, and go to state 96
    "boolean"      shift, and go to state 97
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 106

    constant                 go to state 108
    constant_identifier      go to state 70
    sign                     go to state 71
    ordinal_type             go to state 210
    ordinal_type_identifier  go to state 112
    enumerated_type          go to state 113
    subrange_type            go to state 114


state 150

   50 identifier_list: identifier_list . ',' IDENTIFIER
   67 enumerated_type: '(' identifier_list . ')'

    ')'  shift, and go to state 211
    ','  shift, and go to state 36


state 151

  107 base_type: IDENTIFIER .

    $default  reduce using rule 107 (base_type)


state 152

  104 pointer_type: '^' base_type .

    $default  reduce using rule 104 (pointer_type)


state 153

   68 subrange_type: constant ".." . constant

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68

    constant             go to state 212
    constant_identifier  go to state 70
    sign                 go to state 71


state 154

   34 type_declaration: IDENTIFIER '=' type ';' .

    $default  reduce using rule 34 (type_declaration)


state 155

   39 variable_declaration: identifier_list ':' type . ';'

    ';'  shift, and go to state 213


state 156

  231 formal_parameter_list: '(' . formal_parameter_list_iterable ')'

    IDENTIFIER   shift, and go to state 21
    "var"        shift, and go to state 214
    "function"   shift, and go to state 77
    "procedure"  shift, and go to state 78

    identifier_list                      go to state 215
    procedure_heading                    go to state 216
    function_heading                     go to state 217
    formal_parameter_list_iterable       go to state 218
    formal_parameter_list_iterable_list  go to state 219
    parameter_declaration                go to state 220


state 157

  229 function_heading: "function" IDENTIFIER ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 221


state 158

  230 function_heading: "function" IDENTIFIER formal_parameter_list . ':' IDENTIFIER

    ':'  shift, and go to state 222


state 159

  224 procedure_heading: "procedure" IDENTIFIER formal_parameter_list .

    $default  reduce using rule 224 (procedure_heading)


state 160

  109 variable_identifier: IDENTIFIER .
  157 function_identifier: IDENTIFIER .

    ":="      reduce using rule 157 (function_identifier)
    $default  reduce using rule 109 (variable_identifier)


state 161

  198 case_statement: "case" . expression "of" case_list "end"
  199               | "case" . expression "of" case_list otherwise_clause "end"
  200               | "case" . expression "of" case_list otherwise_clause ';' "end"
  201               | "case" . expression "of" case_list ';' "end"

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 239
    simple_expression_term_operator_iterable  go to state 240
    expression                                go to state 241
    function_call                             go to state 242
    function_identifier                       go to state 243
    set_constructor                           go to state 244


state 162

  186 goto_statement: "goto" . label

    DECIMAL_INT  shift, and go to state 25

    label  go to state 245


state 163

  196 if_statement: "if" . expression "then" statement
  197             | "if" . expression "then" statement "else" statement

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 239
    simple_expression_term_operator_iterable  go to state 240
    expression                                go to state 246
    function_call                             go to state 242
    function_identifier                       go to state 243
    set_constructor                           go to state 244


state 164

  209 repeat_statement: "repeat" . statement_list "until" expression

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 160
    "begin"      shift, and go to state 130
    "case"       shift, and go to state 161
    "goto"       shift, and go to state 162
    "if"         shift, and go to state 163
    "repeat"     shift, and go to state 164
    "while"      shift, and go to state 165
    "for"        shift, and go to state 166
    "with"       shift, and go to state 167
    "read"       shift, and go to state 168
    "readln"     shift, and go to state 169
    "write"      shift, and go to state 170
    "writeln"    shift, and go to state 171

    $default  reduce using rule 173 (statement)

    label                  go to state 172
    variable_reference     go to state 173
    variable_identifier    go to state 174
    function_identifier    go to state 175
    procedure_identifier   go to state 176
    statement              go to state 177
    simple_statement       go to state 178
    assignment_statement   go to state 179
    procedure_statement    go to state 180
    goto_statement         go to state 181
    structured_statement   go to state 182
    compound_statement     go to state 183
    statement_list         go to state 247
    conditional_statement  go to state 185
    if_statement           go to state 186
    case_statement         go to state 187
    repetitive_statement   go to state 188
    repeat_statement       go to state 189
    while_statement        go to state 190
    for_statement          go to state 191
    with_statement         go to state 192


state 165

  210 while_statement: "while" . expression "do" statement

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 239
    simple_expression_term_operator_iterable  go to state 240
    expression                                go to state 248
    function_call                             go to state 242
    function_identifier                       go to state 243
    set_constructor                           go to state 244


state 166

  211 for_statement: "for" . control_variable ":=" initial_value "to" final_value "do" statement
  212              | "for" . control_variable ":=" initial_value "downto" final_value "do" statement

    IDENTIFIER  shift, and go to state 249

    control_variable  go to state 250


state 167

  216 with_statement: "with" . record_variable_reference_list "do" statement

    IDENTIFIER  shift, and go to state 251

    variable_reference              go to state 252
    variable_identifier             go to state 174
    record_variable_reference_list  go to state 253


state 168

  165 procedure_identifier: "read" .

    $default  reduce using rule 165 (procedure_identifier)


state 169

  166 procedure_identifier: "readln" .

    $default  reduce using rule 166 (procedure_identifier)


state 170

  163 procedure_identifier: "write" .

    $default  reduce using rule 163 (procedure_identifier)


state 171

  164 procedure_identifier: "writeln" .

    $default  reduce using rule 164 (procedure_identifier)


state 172

  174 statement: label . ':'
  175          | label . ':' simple_statement
  176          | label . ':' structured_statement

    ':'  shift, and go to state 254


state 173

  182 assignment_statement: variable_reference . ":=" expression

    ":="  shift, and go to state 255


state 174

  108 variable_reference: variable_identifier . qualifier_list

    '['  shift, and go to state 256
    '^'  shift, and go to state 257
    '.'  shift, and go to state 258

    qualifier_list    go to state 259
    qualifier         go to state 260
    index             go to state 261
    field_designator  go to state 262


state 175

  183 assignment_statement: function_identifier . ":=" expression

    ":="  shift, and go to state 263


state 176

  184 procedure_statement: procedure_identifier .
  185                    | procedure_identifier . actual_parameter_list

    '('  shift, and go to state 264

    $default  reduce using rule 184 (procedure_statement)

    actual_parameter_list  go to state 265


state 177

  193 statement_list: statement .

    $default  reduce using rule 193 (statement_list)


state 178

  177 statement: simple_statement .

    $default  reduce using rule 177 (statement)


state 179

  179 simple_statement: assignment_statement .

    $default  reduce using rule 179 (simple_statement)


state 180

  180 simple_statement: procedure_statement .

    $default  reduce using rule 180 (simple_statement)


state 181

  181 simple_statement: goto_statement .

    $default  reduce using rule 181 (simple_statement)


state 182

  178 statement: structured_statement .

    $default  reduce using rule 178 (statement)


state 183

  187 structured_statement: compound_statement .

    $default  reduce using rule 187 (structured_statement)


state 184

  191 compound_statement: "begin" statement_list . "end"
  192 statement_list: statement_list . ';' statement

    "end"  shift, and go to state 266
    ';'    shift, and go to state 267


state 185

  188 structured_statement: conditional_statement .

    $default  reduce using rule 188 (structured_statement)


state 186

  194 conditional_statement: if_statement .

    $default  reduce using rule 194 (conditional_statement)


state 187

  195 conditional_statement: case_statement .

    $default  reduce using rule 195 (conditional_statement)


state 188

  189 structured_statement: repetitive_statement .

    $default  reduce using rule 189 (structured_statement)


state 189

  206 repetitive_statement: repeat_statement .

    $default  reduce using rule 206 (repetitive_statement)


state 190

  207 repetitive_statement: while_statement .

    $default  reduce using rule 207 (repetitive_statement)


state 191

  208 repetitive_statement: for_statement .

    $default  reduce using rule 208 (repetitive_statement)


state 192

  190 structured_statement: with_statement .

    $default  reduce using rule 190 (structured_statement)


state 193

  221 procedure_body: "forward" .

    $default  reduce using rule 221 (procedure_body)


state 194

  222 procedure_body: "external" .

    $default  reduce using rule 222 (procedure_body)


state 195

  220 procedure_body: block .

    $default  reduce using rule 220 (procedure_body)


state 196

  219 procedure_declaration: procedure_heading ';' procedure_body . ';'

    ';'  shift, and go to state 268


state 197

  227 function_body: "forward" .

    $default  reduce using rule 227 (function_body)


state 198

  228 function_body: "external" .

    $default  reduce using rule 228 (function_body)


state 199

  226 function_body: block .

    $default  reduce using rule 226 (function_body)


state 200

  225 function_declaration: function_heading ';' function_body . ';'

    ';'  shift, and go to state 269


state 201

   71 string_type: "string" '[' DECIMAL_INT . ']'

    ']'  shift, and go to state 270


state 202

   80 index_type_list: ordinal_type .

    $default  reduce using rule 80 (index_type_list)


state 203

   78 array_type: "array" '[' index_type_list . ']' "of" type
   79 index_type_list: index_type_list . ',' ordinal_type

    ','  shift, and go to state 271
    ']'  shift, and go to state 272


state 204

   93 variant_part: "case" IDENTIFIER . ':' tag_field_type "of" variant_list
  100 tag_field_type: IDENTIFIER .

    ':'  shift, and go to state 273

    $default  reduce using rule 100 (tag_field_type)


state 205

   92 variant_part: "case" tag_field_type . "of" variant_list

    "of"  shift, and go to state 274


state 206

   91 field_declaration: identifier_list ':' . type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 91
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 92
    "integer"      shift, and go to state 93
    "longint"      shift, and go to state 94
    "word"         shift, and go to state 95
    "char"         shift, and go to state 96
    "boolean"      shift, and go to state 97
    "string"       shift, and go to state 98
    "packed"       shift, and go to state 99
    "array"        shift, and go to state 100
    "record"       shift, and go to state 101
    "of"           shift, and go to state 102
    "set"          shift, and go to state 103
    "file"         shift, and go to state 104
    "nil"          shift, and go to state 105
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 106
    '^'            shift, and go to state 107

    constant                 go to state 108
    constant_identifier      go to state 70
    sign                     go to state 71
    type                     go to state 275
    simple_type              go to state 110
    ordinal_type             go to state 111
    ordinal_type_identifier  go to state 112
    enumerated_type          go to state 113
    subrange_type            go to state 114
    real_type                go to state 115
    real_type_identifier     go to state 116
    string_type              go to state 117
    structured_type          go to state 118
    type_list                go to state 119
    array_type               go to state 120
    record_type              go to state 121
    set_type                 go to state 122
    file_type                go to state 123
    pointer_type             go to state 124
    pointer_type_identifier  go to state 125


state 207

   82 record_type: "record" field_list "end" .

    $default  reduce using rule 82 (record_type)


state 208

   84 field_list: fixed_part ';' .
   85           | fixed_part ';' . variant_part
   86           | fixed_part ';' . variant_part ';'
   89 fixed_part: fixed_part ';' . field_declaration

    IDENTIFIER  shift, and go to state 21
    "case"      shift, and go to state 142

    $default  reduce using rule 84 (field_list)

    identifier_list    go to state 143
    field_declaration  go to state 276
    variant_part       go to state 277


state 209

   88 field_list: variant_part ';' .

    $default  reduce using rule 88 (field_list)


state 210

  101 set_type: "set" "of" ordinal_type .

    $default  reduce using rule 101 (set_type)


state 211

   67 enumerated_type: '(' identifier_list ')' .

    $default  reduce using rule 67 (enumerated_type)


state 212

   68 subrange_type: constant ".." constant .

    $default  reduce using rule 68 (subrange_type)


state 213

   39 variable_declaration: identifier_list ':' type ';' .

    $default  reduce using rule 39 (variable_declaration)


state 214

  237 parameter_declaration: "var" . identifier_list ':' type_identifier

    IDENTIFIER  shift, and go to state 21

    identifier_list  go to state 278


state 215

   50 identifier_list: identifier_list . ',' IDENTIFIER
  238 parameter_declaration: identifier_list . ':' type_identifier

    ','  shift, and go to state 36
    ':'  shift, and go to state 279


state 216

  235 formal_parameter_list_iterable_list: procedure_heading .

    $default  reduce using rule 235 (formal_parameter_list_iterable_list)


state 217

  236 formal_parameter_list_iterable_list: function_heading .

    $default  reduce using rule 236 (formal_parameter_list_iterable_list)


state 218

  231 formal_parameter_list: '(' formal_parameter_list_iterable . ')'
  232 formal_parameter_list_iterable: formal_parameter_list_iterable . ';' formal_parameter_list_iterable_list

    ';'  shift, and go to state 280
    ')'  shift, and go to state 281


state 219

  233 formal_parameter_list_iterable: formal_parameter_list_iterable_list .

    $default  reduce using rule 233 (formal_parameter_list_iterable)


state 220

  234 formal_parameter_list_iterable_list: parameter_declaration .

    $default  reduce using rule 234 (formal_parameter_list_iterable_list)


state 221

  229 function_heading: "function" IDENTIFIER ':' IDENTIFIER .

    $default  reduce using rule 229 (function_heading)


state 222

  230 function_heading: "function" IDENTIFIER formal_parameter_list ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 282


state 223

  122 unsigned_number: DECIMAL_INT .

    $default  reduce using rule 122 (unsigned_number)


state 224

  123 unsigned_number: HEXADECIMAL .

    $default  reduce using rule 123 (unsigned_number)


state 225

  124 unsigned_number: REAL_DECIMAL .

    $default  reduce using rule 124 (unsigned_number)


state 226

  109 variable_identifier: IDENTIFIER .
  132 factor: IDENTIFIER .
  157 function_identifier: IDENTIFIER .

    '('       reduce using rule 157 (function_identifier)
    '['       reduce using rule 109 (variable_identifier)
    '^'       reduce using rule 109 (variable_identifier)
    '.'       reduce using rule 109 (variable_identifier)
    $default  reduce using rule 132 (factor)


state 227

  120 unsigned_constant: QUOTED_STRING .

    $default  reduce using rule 120 (unsigned_constant)


state 228

  121 unsigned_constant: "nil" .

    $default  reduce using rule 121 (unsigned_constant)


state 229

  131 factor: "not" . factor

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    variable_reference   go to state 234
    variable_identifier  go to state 174
    unsigned_constant    go to state 235
    unsigned_number      go to state 236
    factor               go to state 283
    function_call        go to state 242
    function_identifier  go to state 243
    set_constructor      go to state 244


state 230

  126 factor: '@' . variable_reference

    IDENTIFIER  shift, and go to state 251

    variable_reference   go to state 284
    variable_identifier  go to state 174


state 231

  130 factor: '(' . expression ')'

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 239
    simple_expression_term_operator_iterable  go to state 240
    expression                                go to state 285
    function_call                             go to state 242
    function_identifier                       go to state 243
    set_constructor                           go to state 244


state 232

  167 set_constructor: '[' . ']'
  168                | '[' . member_group_list ']'

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232
    ']'            shift, and go to state 286

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 239
    simple_expression_term_operator_iterable  go to state 240
    expression                                go to state 287
    function_call                             go to state 242
    function_identifier                       go to state 243
    set_constructor                           go to state 244
    member_group_list                         go to state 288
    member_group                              go to state 289


state 233

  140 simple_expression: sign . simple_expression_term_operator_iterable

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression_term_operator_iterable  go to state 290
    function_call                             go to state 242
    function_identifier                       go to state 243
    set_constructor                           go to state 244


state 234

  125 factor: variable_reference .

    $default  reduce using rule 125 (factor)


state 235

  127 factor: unsigned_constant .

    $default  reduce using rule 127 (factor)


state 236

  119 unsigned_constant: unsigned_number .

    $default  reduce using rule 119 (unsigned_constant)


state 237

  134 term: factor .

    $default  reduce using rule 134 (term)


state 238

  133 term: term . term_operator_list factor
  143 simple_expression_term_operator_iterable: term .

    "div"  shift, and go to state 291
    "mod"  shift, and go to state 292
    "and"  shift, and go to state 293
    '*'    shift, and go to state 294
    '/'    shift, and go to state 295

    $default  reduce using rule 143 (simple_expression_term_operator_iterable)

    term_operator_list  go to state 296


state 239

  147 expression: simple_expression .
  148           | simple_expression . relational_operator simple_expression

    "in"      shift, and go to state 297
    '='       shift, and go to state 298
    '<'       shift, and go to state 299
    '>'       shift, and go to state 300
    RE        shift, and go to state 301
    LE        shift, and go to state 302
    NOTEQUAL  shift, and go to state 303

    $default  reduce using rule 147 (expression)

    relational_operator  go to state 304


state 240

  141 simple_expression: simple_expression_term_operator_iterable .
  142 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable . simple_expression_term_operator_list term

    "or"  shift, and go to state 305
    '+'   shift, and go to state 306
    '-'   shift, and go to state 307

    $default  reduce using rule 141 (simple_expression)

    simple_expression_term_operator_list  go to state 308


state 241

  198 case_statement: "case" expression . "of" case_list "end"
  199               | "case" expression . "of" case_list otherwise_clause "end"
  200               | "case" expression . "of" case_list otherwise_clause ';' "end"
  201               | "case" expression . "of" case_list ';' "end"

    "of"  shift, and go to state 309


state 242

  128 factor: function_call .

    $default  reduce using rule 128 (factor)


state 243

  156 function_call: function_identifier . actual_parameter_list

    '('  shift, and go to state 264

    actual_parameter_list  go to state 310


state 244

  129 factor: set_constructor .

    $default  reduce using rule 129 (factor)


state 245

  186 goto_statement: "goto" label .

    $default  reduce using rule 186 (goto_statement)


state 246

  196 if_statement: "if" expression . "then" statement
  197             | "if" expression . "then" statement "else" statement

    "then"  shift, and go to state 311


state 247

  192 statement_list: statement_list . ';' statement
  209 repeat_statement: "repeat" statement_list . "until" expression

    "until"  shift, and go to state 312
    ';'      shift, and go to state 267


state 248

  210 while_statement: "while" expression . "do" statement

    "do"  shift, and go to state 313


state 249

  213 control_variable: IDENTIFIER .

    $default  reduce using rule 213 (control_variable)


state 250

  211 for_statement: "for" control_variable . ":=" initial_value "to" final_value "do" statement
  212              | "for" control_variable . ":=" initial_value "downto" final_value "do" statement

    ":="  shift, and go to state 314


state 251

  109 variable_identifier: IDENTIFIER .

    $default  reduce using rule 109 (variable_identifier)


state 252

  218 record_variable_reference_list: variable_reference .

    $default  reduce using rule 218 (record_variable_reference_list)


state 253

  216 with_statement: "with" record_variable_reference_list . "do" statement
  217 record_variable_reference_list: record_variable_reference_list . ',' variable_reference

    "do"  shift, and go to state 315
    ','   shift, and go to state 316


state 254

  174 statement: label ':' .
  175          | label ':' . simple_statement
  176          | label ':' . structured_statement

    IDENTIFIER  shift, and go to state 160
    "begin"     shift, and go to state 130
    "case"      shift, and go to state 161
    "goto"      shift, and go to state 162
    "if"        shift, and go to state 163
    "repeat"    shift, and go to state 164
    "while"     shift, and go to state 165
    "for"       shift, and go to state 166
    "with"      shift, and go to state 167
    "read"      shift, and go to state 168
    "readln"    shift, and go to state 169
    "write"     shift, and go to state 170
    "writeln"   shift, and go to state 171

    $default  reduce using rule 174 (statement)

    variable_reference     go to state 173
    variable_identifier    go to state 174
    function_identifier    go to state 175
    procedure_identifier   go to state 176
    simple_statement       go to state 317
    assignment_statement   go to state 179
    procedure_statement    go to state 180
    goto_statement         go to state 181
    structured_statement   go to state 318
    compound_statement     go to state 183
    conditional_statement  go to state 185
    if_statement           go to state 186
    case_statement         go to state 187
    repetitive_statement   go to state 188
    repeat_statement       go to state 189
    while_statement        go to state 190
    for_statement          go to state 191
    with_statement         go to state 192


state 255

  182 assignment_statement: variable_reference ":=" . expression

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 239
    simple_expression_term_operator_iterable  go to state 240
    expression                                go to state 319
    function_call                             go to state 242
    function_identifier                       go to state 243
    set_constructor                           go to state 244


state 256

  115 index: '[' . expression_list ']'

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    expression_list                           go to state 320
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 239
    simple_expression_term_operator_iterable  go to state 240
    expression                                go to state 321
    function_call                             go to state 242
    function_identifier                       go to state 243
    set_constructor                           go to state 244


state 257

  114 qualifier: '^' .

    $default  reduce using rule 114 (qualifier)


state 258

  118 field_designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 322


state 259

  108 variable_reference: variable_identifier qualifier_list .
  110 qualifier_list: qualifier_list . qualifier

    '['  shift, and go to state 256
    '^'  shift, and go to state 257
    '.'  shift, and go to state 258

    $default  reduce using rule 108 (variable_reference)

    qualifier         go to state 323
    index             go to state 261
    field_designator  go to state 262


state 260

  111 qualifier_list: qualifier .

    $default  reduce using rule 111 (qualifier_list)


state 261

  112 qualifier: index .

    $default  reduce using rule 112 (qualifier)


state 262

  113 qualifier: field_designator .

    $default  reduce using rule 113 (qualifier)


state 263

  183 assignment_statement: function_identifier ":=" . expression

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 239
    simple_expression_term_operator_iterable  go to state 240
    expression                                go to state 324
    function_call                             go to state 242
    function_identifier                       go to state 243
    set_constructor                           go to state 244


state 264

  158 actual_parameter_list: '(' . actual_parameter_iterable ')'

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "read"         shift, and go to state 168
    "readln"       shift, and go to state 169
    "write"        shift, and go to state 170
    "writeln"      shift, and go to state 171
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 239
    simple_expression_term_operator_iterable  go to state 240
    expression                                go to state 325
    function_call                             go to state 242
    function_identifier                       go to state 243
    actual_parameter_iterable                 go to state 326
    actual_parameter                          go to state 327
    procedure_identifier                      go to state 328
    set_constructor                           go to state 244


state 265

  185 procedure_statement: procedure_identifier actual_parameter_list .

    $default  reduce using rule 185 (procedure_statement)


state 266

  191 compound_statement: "begin" statement_list "end" .

    $default  reduce using rule 191 (compound_statement)


state 267

  192 statement_list: statement_list ';' . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 160
    "begin"      shift, and go to state 130
    "case"       shift, and go to state 161
    "goto"       shift, and go to state 162
    "if"         shift, and go to state 163
    "repeat"     shift, and go to state 164
    "while"      shift, and go to state 165
    "for"        shift, and go to state 166
    "with"       shift, and go to state 167
    "read"       shift, and go to state 168
    "readln"     shift, and go to state 169
    "write"      shift, and go to state 170
    "writeln"    shift, and go to state 171

    $default  reduce using rule 173 (statement)

    label                  go to state 172
    variable_reference     go to state 173
    variable_identifier    go to state 174
    function_identifier    go to state 175
    procedure_identifier   go to state 176
    statement              go to state 329
    simple_statement       go to state 178
    assignment_statement   go to state 179
    procedure_statement    go to state 180
    goto_statement         go to state 181
    structured_statement   go to state 182
    compound_statement     go to state 183
    conditional_statement  go to state 185
    if_statement           go to state 186
    case_statement         go to state 187
    repetitive_statement   go to state 188
    repeat_statement       go to state 189
    while_statement        go to state 190
    for_statement          go to state 191
    with_statement         go to state 192


state 268

  219 procedure_declaration: procedure_heading ';' procedure_body ';' .

    $default  reduce using rule 219 (procedure_declaration)


state 269

  225 function_declaration: function_heading ';' function_body ';' .

    $default  reduce using rule 225 (function_declaration)


state 270

   71 string_type: "string" '[' DECIMAL_INT ']' .

    $default  reduce using rule 71 (string_type)


state 271

   79 index_type_list: index_type_list ',' . ordinal_type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "integer"      shift, and go to state 93
    "longint"      shift, and go to state 94
    "word"         shift, and go to state 95
    "char"         shift, and go to state 96
    "boolean"      shift, and go to state 97
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 106

    constant                 go to state 108
    constant_identifier      go to state 70
    sign                     go to state 71
    ordinal_type             go to state 330
    ordinal_type_identifier  go to state 112
    enumerated_type          go to state 113
    subrange_type            go to state 114


state 272

   78 array_type: "array" '[' index_type_list ']' . "of" type

    "of"  shift, and go to state 331


state 273

   93 variant_part: "case" IDENTIFIER ':' . tag_field_type "of" variant_list

    IDENTIFIER  shift, and go to state 332

    tag_field_type  go to state 333


state 274

   92 variant_part: "case" tag_field_type "of" . variant_list

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68

    constant             go to state 334
    constant_identifier  go to state 70
    sign                 go to state 71
    variant_list         go to state 335
    variant              go to state 336
    constant_list        go to state 337


state 275

   91 field_declaration: identifier_list ':' type .

    $default  reduce using rule 91 (field_declaration)


state 276

   89 fixed_part: fixed_part ';' field_declaration .

    $default  reduce using rule 89 (fixed_part)


state 277

   85 field_list: fixed_part ';' variant_part .
   86           | fixed_part ';' variant_part . ';'

    ';'  shift, and go to state 338

    $default  reduce using rule 85 (field_list)


state 278

   50 identifier_list: identifier_list . ',' IDENTIFIER
  237 parameter_declaration: "var" identifier_list . ':' type_identifier

    ','  shift, and go to state 36
    ':'  shift, and go to state 339


state 279

  238 parameter_declaration: identifier_list ':' . type_identifier

    IDENTIFIER  shift, and go to state 340

    type_identifier  go to state 341


state 280

  232 formal_parameter_list_iterable: formal_parameter_list_iterable ';' . formal_parameter_list_iterable_list

    IDENTIFIER   shift, and go to state 21
    "var"        shift, and go to state 214
    "function"   shift, and go to state 77
    "procedure"  shift, and go to state 78

    identifier_list                      go to state 215
    procedure_heading                    go to state 216
    function_heading                     go to state 217
    formal_parameter_list_iterable_list  go to state 342
    parameter_declaration                go to state 220


state 281

  231 formal_parameter_list: '(' formal_parameter_list_iterable ')' .

    $default  reduce using rule 231 (formal_parameter_list)


state 282

  230 function_heading: "function" IDENTIFIER formal_parameter_list ':' IDENTIFIER .

    $default  reduce using rule 230 (function_heading)


state 283

  131 factor: "not" factor .

    $default  reduce using rule 131 (factor)


state 284

  126 factor: '@' variable_reference .

    $default  reduce using rule 126 (factor)


state 285

  130 factor: '(' expression . ')'

    ')'  shift, and go to state 343


state 286

  167 set_constructor: '[' ']' .

    $default  reduce using rule 167 (set_constructor)


state 287

  171 member_group: expression .
  172             | expression . ".." expression

    ".."  shift, and go to state 344

    $default  reduce using rule 171 (member_group)


state 288

  168 set_constructor: '[' member_group_list . ']'
  169 member_group_list: member_group_list . ',' member_group

    ','  shift, and go to state 345
    ']'  shift, and go to state 346


state 289

  170 member_group_list: member_group .

    $default  reduce using rule 170 (member_group_list)


state 290

  140 simple_expression: sign simple_expression_term_operator_iterable .
  142 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable . simple_expression_term_operator_list term

    "or"  shift, and go to state 305
    '+'   shift, and go to state 306
    '-'   shift, and go to state 307

    $default  reduce using rule 140 (simple_expression)

    simple_expression_term_operator_list  go to state 308


state 291

  137 term_operator_list: "div" .

    $default  reduce using rule 137 (term_operator_list)


state 292

  138 term_operator_list: "mod" .

    $default  reduce using rule 138 (term_operator_list)


state 293

  139 term_operator_list: "and" .

    $default  reduce using rule 139 (term_operator_list)


state 294

  135 term_operator_list: '*' .

    $default  reduce using rule 135 (term_operator_list)


state 295

  136 term_operator_list: '/' .

    $default  reduce using rule 136 (term_operator_list)


state 296

  133 term: term term_operator_list . factor

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    variable_reference   go to state 234
    variable_identifier  go to state 174
    unsigned_constant    go to state 235
    unsigned_number      go to state 236
    factor               go to state 347
    function_call        go to state 242
    function_identifier  go to state 243
    set_constructor      go to state 244


state 297

  155 relational_operator: "in" .

    $default  reduce using rule 155 (relational_operator)


state 298

  149 relational_operator: '=' .

    $default  reduce using rule 149 (relational_operator)


state 299

  150 relational_operator: '<' .

    $default  reduce using rule 150 (relational_operator)


state 300

  151 relational_operator: '>' .

    $default  reduce using rule 151 (relational_operator)


state 301

  153 relational_operator: RE .

    $default  reduce using rule 153 (relational_operator)


state 302

  152 relational_operator: LE .

    $default  reduce using rule 152 (relational_operator)


state 303

  154 relational_operator: NOTEQUAL .

    $default  reduce using rule 154 (relational_operator)


state 304

  148 expression: simple_expression relational_operator . simple_expression

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 348
    simple_expression_term_operator_iterable  go to state 240
    function_call                             go to state 242
    function_identifier                       go to state 243
    set_constructor                           go to state 244


state 305

  146 simple_expression_term_operator_list: "or" .

    $default  reduce using rule 146 (simple_expression_term_operator_list)


state 306

  144 simple_expression_term_operator_list: '+' .

    $default  reduce using rule 144 (simple_expression_term_operator_list)


state 307

  145 simple_expression_term_operator_list: '-' .

    $default  reduce using rule 145 (simple_expression_term_operator_list)


state 308

  142 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list . term

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    variable_reference   go to state 234
    variable_identifier  go to state 174
    unsigned_constant    go to state 235
    unsigned_number      go to state 236
    factor               go to state 237
    term                 go to state 349
    function_call        go to state 242
    function_identifier  go to state 243
    set_constructor      go to state 244


state 309

  198 case_statement: "case" expression "of" . case_list "end"
  199               | "case" expression "of" . case_list otherwise_clause "end"
  200               | "case" expression "of" . case_list otherwise_clause ';' "end"
  201               | "case" expression "of" . case_list ';' "end"

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68

    constant             go to state 334
    constant_identifier  go to state 70
    sign                 go to state 71
    constant_list        go to state 350
    case_list            go to state 351
    case                 go to state 352


state 310

  156 function_call: function_identifier actual_parameter_list .

    $default  reduce using rule 156 (function_call)


state 311

  196 if_statement: "if" expression "then" . statement
  197             | "if" expression "then" . statement "else" statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 160
    "begin"      shift, and go to state 130
    "case"       shift, and go to state 161
    "goto"       shift, and go to state 162
    "if"         shift, and go to state 163
    "repeat"     shift, and go to state 164
    "while"      shift, and go to state 165
    "for"        shift, and go to state 166
    "with"       shift, and go to state 167
    "read"       shift, and go to state 168
    "readln"     shift, and go to state 169
    "write"      shift, and go to state 170
    "writeln"    shift, and go to state 171

    $default  reduce using rule 173 (statement)

    label                  go to state 172
    variable_reference     go to state 173
    variable_identifier    go to state 174
    function_identifier    go to state 175
    procedure_identifier   go to state 176
    statement              go to state 353
    simple_statement       go to state 178
    assignment_statement   go to state 179
    procedure_statement    go to state 180
    goto_statement         go to state 181
    structured_statement   go to state 182
    compound_statement     go to state 183
    conditional_statement  go to state 185
    if_statement           go to state 186
    case_statement         go to state 187
    repetitive_statement   go to state 188
    repeat_statement       go to state 189
    while_statement        go to state 190
    for_statement          go to state 191
    with_statement         go to state 192


state 312

  209 repeat_statement: "repeat" statement_list "until" . expression

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 239
    simple_expression_term_operator_iterable  go to state 240
    expression                                go to state 354
    function_call                             go to state 242
    function_identifier                       go to state 243
    set_constructor                           go to state 244


state 313

  210 while_statement: "while" expression "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 160
    "begin"      shift, and go to state 130
    "case"       shift, and go to state 161
    "goto"       shift, and go to state 162
    "if"         shift, and go to state 163
    "repeat"     shift, and go to state 164
    "while"      shift, and go to state 165
    "for"        shift, and go to state 166
    "with"       shift, and go to state 167
    "read"       shift, and go to state 168
    "readln"     shift, and go to state 169
    "write"      shift, and go to state 170
    "writeln"    shift, and go to state 171

    $default  reduce using rule 173 (statement)

    label                  go to state 172
    variable_reference     go to state 173
    variable_identifier    go to state 174
    function_identifier    go to state 175
    procedure_identifier   go to state 176
    statement              go to state 355
    simple_statement       go to state 178
    assignment_statement   go to state 179
    procedure_statement    go to state 180
    goto_statement         go to state 181
    structured_statement   go to state 182
    compound_statement     go to state 183
    conditional_statement  go to state 185
    if_statement           go to state 186
    case_statement         go to state 187
    repetitive_statement   go to state 188
    repeat_statement       go to state 189
    while_statement        go to state 190
    for_statement          go to state 191
    with_statement         go to state 192


state 314

  211 for_statement: "for" control_variable ":=" . initial_value "to" final_value "do" statement
  212              | "for" control_variable ":=" . initial_value "downto" final_value "do" statement

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 239
    simple_expression_term_operator_iterable  go to state 240
    expression                                go to state 356
    function_call                             go to state 242
    function_identifier                       go to state 243
    set_constructor                           go to state 244
    initial_value                             go to state 357


state 315

  216 with_statement: "with" record_variable_reference_list "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 160
    "begin"      shift, and go to state 130
    "case"       shift, and go to state 161
    "goto"       shift, and go to state 162
    "if"         shift, and go to state 163
    "repeat"     shift, and go to state 164
    "while"      shift, and go to state 165
    "for"        shift, and go to state 166
    "with"       shift, and go to state 167
    "read"       shift, and go to state 168
    "readln"     shift, and go to state 169
    "write"      shift, and go to state 170
    "writeln"    shift, and go to state 171

    $default  reduce using rule 173 (statement)

    label                  go to state 172
    variable_reference     go to state 173
    variable_identifier    go to state 174
    function_identifier    go to state 175
    procedure_identifier   go to state 176
    statement              go to state 358
    simple_statement       go to state 178
    assignment_statement   go to state 179
    procedure_statement    go to state 180
    goto_statement         go to state 181
    structured_statement   go to state 182
    compound_statement     go to state 183
    conditional_statement  go to state 185
    if_statement           go to state 186
    case_statement         go to state 187
    repetitive_statement   go to state 188
    repeat_statement       go to state 189
    while_statement        go to state 190
    for_statement          go to state 191
    with_statement         go to state 192


state 316

  217 record_variable_reference_list: record_variable_reference_list ',' . variable_reference

    IDENTIFIER  shift, and go to state 251

    variable_reference   go to state 359
    variable_identifier  go to state 174


state 317

  175 statement: label ':' simple_statement .

    $default  reduce using rule 175 (statement)


state 318

  176 statement: label ':' structured_statement .

    $default  reduce using rule 176 (statement)


state 319

  182 assignment_statement: variable_reference ":=" expression .

    $default  reduce using rule 182 (assignment_statement)


state 320

  115 index: '[' expression_list . ']'
  116 expression_list: expression_list . ',' expression

    ','  shift, and go to state 360
    ']'  shift, and go to state 361


state 321

  117 expression_list: expression .

    $default  reduce using rule 117 (expression_list)


state 322

  118 field_designator: '.' IDENTIFIER .

    $default  reduce using rule 118 (field_designator)


state 323

  110 qualifier_list: qualifier_list qualifier .

    $default  reduce using rule 110 (qualifier_list)


state 324

  183 assignment_statement: function_identifier ":=" expression .

    $default  reduce using rule 183 (assignment_statement)


state 325

  161 actual_parameter: expression .

    $default  reduce using rule 161 (actual_parameter)


state 326

  158 actual_parameter_list: '(' actual_parameter_iterable . ')'
  159 actual_parameter_iterable: actual_parameter_iterable . ',' actual_parameter

    ')'  shift, and go to state 362
    ','  shift, and go to state 363


state 327

  160 actual_parameter_iterable: actual_parameter .

    $default  reduce using rule 160 (actual_parameter_iterable)


state 328

  162 actual_parameter: procedure_identifier .

    $default  reduce using rule 162 (actual_parameter)


state 329

  192 statement_list: statement_list ';' statement .

    $default  reduce using rule 192 (statement_list)


state 330

   79 index_type_list: index_type_list ',' ordinal_type .

    $default  reduce using rule 79 (index_type_list)


state 331

   78 array_type: "array" '[' index_type_list ']' "of" . type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 91
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 92
    "integer"      shift, and go to state 93
    "longint"      shift, and go to state 94
    "word"         shift, and go to state 95
    "char"         shift, and go to state 96
    "boolean"      shift, and go to state 97
    "string"       shift, and go to state 98
    "packed"       shift, and go to state 99
    "array"        shift, and go to state 100
    "record"       shift, and go to state 101
    "of"           shift, and go to state 102
    "set"          shift, and go to state 103
    "file"         shift, and go to state 104
    "nil"          shift, and go to state 105
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 106
    '^'            shift, and go to state 107

    constant                 go to state 108
    constant_identifier      go to state 70
    sign                     go to state 71
    type                     go to state 364
    simple_type              go to state 110
    ordinal_type             go to state 111
    ordinal_type_identifier  go to state 112
    enumerated_type          go to state 113
    subrange_type            go to state 114
    real_type                go to state 115
    real_type_identifier     go to state 116
    string_type              go to state 117
    structured_type          go to state 118
    type_list                go to state 119
    array_type               go to state 120
    record_type              go to state 121
    set_type                 go to state 122
    file_type                go to state 123
    pointer_type             go to state 124
    pointer_type_identifier  go to state 125


state 332

  100 tag_field_type: IDENTIFIER .

    $default  reduce using rule 100 (tag_field_type)


state 333

   93 variant_part: "case" IDENTIFIER ':' tag_field_type . "of" variant_list

    "of"  shift, and go to state 365


state 334

   99 constant_list: constant .

    $default  reduce using rule 99 (constant_list)


state 335

   92 variant_part: "case" tag_field_type "of" variant_list .
   94 variant_list: variant_list . ';' variant

    ';'  shift, and go to state 366

    ';'       [reduce using rule 92 (variant_part)]
    $default  reduce using rule 92 (variant_part)


state 336

   95 variant_list: variant .

    $default  reduce using rule 95 (variant_list)


state 337

   96 variant: constant_list . ':' '(' ')'
   97        | constant_list . ':' '(' field_list ')'
   98 constant_list: constant_list . ',' constant

    ','  shift, and go to state 367
    ':'  shift, and go to state 368


state 338

   86 field_list: fixed_part ';' variant_part ';' .

    $default  reduce using rule 86 (field_list)


state 339

  237 parameter_declaration: "var" identifier_list ':' . type_identifier

    IDENTIFIER  shift, and go to state 340

    type_identifier  go to state 369


state 340

  239 type_identifier: IDENTIFIER .

    $default  reduce using rule 239 (type_identifier)


state 341

  238 parameter_declaration: identifier_list ':' type_identifier .

    $default  reduce using rule 238 (parameter_declaration)


state 342

  232 formal_parameter_list_iterable: formal_parameter_list_iterable ';' formal_parameter_list_iterable_list .

    $default  reduce using rule 232 (formal_parameter_list_iterable)


state 343

  130 factor: '(' expression ')' .

    $default  reduce using rule 130 (factor)


state 344

  172 member_group: expression ".." . expression

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 239
    simple_expression_term_operator_iterable  go to state 240
    expression                                go to state 370
    function_call                             go to state 242
    function_identifier                       go to state 243
    set_constructor                           go to state 244


state 345

  169 member_group_list: member_group_list ',' . member_group

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 239
    simple_expression_term_operator_iterable  go to state 240
    expression                                go to state 287
    function_call                             go to state 242
    function_identifier                       go to state 243
    set_constructor                           go to state 244
    member_group                              go to state 371


state 346

  168 set_constructor: '[' member_group_list ']' .

    $default  reduce using rule 168 (set_constructor)


state 347

  133 term: term term_operator_list factor .

    $default  reduce using rule 133 (term)


state 348

  148 expression: simple_expression relational_operator simple_expression .

    $default  reduce using rule 148 (expression)


state 349

  133 term: term . term_operator_list factor
  142 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list term .

    "div"  shift, and go to state 291
    "mod"  shift, and go to state 292
    "and"  shift, and go to state 293
    '*'    shift, and go to state 294
    '/'    shift, and go to state 295

    $default  reduce using rule 142 (simple_expression_term_operator_iterable)

    term_operator_list  go to state 296


state 350

   98 constant_list: constant_list . ',' constant
  204 case: constant_list . ':' statement

    ','  shift, and go to state 367
    ':'  shift, and go to state 372


state 351

  198 case_statement: "case" expression "of" case_list . "end"
  199               | "case" expression "of" case_list . otherwise_clause "end"
  200               | "case" expression "of" case_list . otherwise_clause ';' "end"
  201               | "case" expression "of" case_list . ';' "end"
  202 case_list: case_list . ',' case

    "end"  shift, and go to state 373
    ';'    shift, and go to state 374
    ','    shift, and go to state 375

    otherwise_clause  go to state 376


state 352

  203 case_list: case .

    $default  reduce using rule 203 (case_list)


state 353

  196 if_statement: "if" expression "then" statement .
  197             | "if" expression "then" statement . "else" statement

    "else"  shift, and go to state 377

    "else"    [reduce using rule 196 (if_statement)]
    $default  reduce using rule 196 (if_statement)


state 354

  209 repeat_statement: "repeat" statement_list "until" expression .

    $default  reduce using rule 209 (repeat_statement)


state 355

  210 while_statement: "while" expression "do" statement .

    $default  reduce using rule 210 (while_statement)


state 356

  214 initial_value: expression .

    $default  reduce using rule 214 (initial_value)


state 357

  211 for_statement: "for" control_variable ":=" initial_value . "to" final_value "do" statement
  212              | "for" control_variable ":=" initial_value . "downto" final_value "do" statement

    "to"      shift, and go to state 378
    "downto"  shift, and go to state 379


state 358

  216 with_statement: "with" record_variable_reference_list "do" statement .

    $default  reduce using rule 216 (with_statement)


state 359

  217 record_variable_reference_list: record_variable_reference_list ',' variable_reference .

    $default  reduce using rule 217 (record_variable_reference_list)


state 360

  116 expression_list: expression_list ',' . expression

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 239
    simple_expression_term_operator_iterable  go to state 240
    expression                                go to state 380
    function_call                             go to state 242
    function_identifier                       go to state 243
    set_constructor                           go to state 244


state 361

  115 index: '[' expression_list ']' .

    $default  reduce using rule 115 (index)


state 362

  158 actual_parameter_list: '(' actual_parameter_iterable ')' .

    $default  reduce using rule 158 (actual_parameter_list)


state 363

  159 actual_parameter_iterable: actual_parameter_iterable ',' . actual_parameter

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "read"         shift, and go to state 168
    "readln"       shift, and go to state 169
    "write"        shift, and go to state 170
    "writeln"      shift, and go to state 171
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 239
    simple_expression_term_operator_iterable  go to state 240
    expression                                go to state 325
    function_call                             go to state 242
    function_identifier                       go to state 243
    actual_parameter                          go to state 381
    procedure_identifier                      go to state 328
    set_constructor                           go to state 244


state 364

   78 array_type: "array" '[' index_type_list ']' "of" type .

    $default  reduce using rule 78 (array_type)


state 365

   93 variant_part: "case" IDENTIFIER ':' tag_field_type "of" . variant_list

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68

    constant             go to state 334
    constant_identifier  go to state 70
    sign                 go to state 71
    variant_list         go to state 382
    variant              go to state 336
    constant_list        go to state 337


state 366

   94 variant_list: variant_list ';' . variant

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68

    constant             go to state 334
    constant_identifier  go to state 70
    sign                 go to state 71
    variant              go to state 383
    constant_list        go to state 337


state 367

   98 constant_list: constant_list ',' . constant

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68

    constant             go to state 384
    constant_identifier  go to state 70
    sign                 go to state 71


state 368

   96 variant: constant_list ':' . '(' ')'
   97        | constant_list ':' . '(' field_list ')'

    '('  shift, and go to state 385


state 369

  237 parameter_declaration: "var" identifier_list ':' type_identifier .

    $default  reduce using rule 237 (parameter_declaration)


state 370

  172 member_group: expression ".." expression .

    $default  reduce using rule 172 (member_group)


state 371

  169 member_group_list: member_group_list ',' member_group .

    $default  reduce using rule 169 (member_group_list)


state 372

  204 case: constant_list ':' . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 160
    "begin"      shift, and go to state 130
    "case"       shift, and go to state 161
    "goto"       shift, and go to state 162
    "if"         shift, and go to state 163
    "repeat"     shift, and go to state 164
    "while"      shift, and go to state 165
    "for"        shift, and go to state 166
    "with"       shift, and go to state 167
    "read"       shift, and go to state 168
    "readln"     shift, and go to state 169
    "write"      shift, and go to state 170
    "writeln"    shift, and go to state 171

    $default  reduce using rule 173 (statement)

    label                  go to state 172
    variable_reference     go to state 173
    variable_identifier    go to state 174
    function_identifier    go to state 175
    procedure_identifier   go to state 176
    statement              go to state 386
    simple_statement       go to state 178
    assignment_statement   go to state 179
    procedure_statement    go to state 180
    goto_statement         go to state 181
    structured_statement   go to state 182
    compound_statement     go to state 183
    conditional_statement  go to state 185
    if_statement           go to state 186
    case_statement         go to state 187
    repetitive_statement   go to state 188
    repeat_statement       go to state 189
    while_statement        go to state 190
    for_statement          go to state 191
    with_statement         go to state 192


state 373

  198 case_statement: "case" expression "of" case_list "end" .

    $default  reduce using rule 198 (case_statement)


state 374

  201 case_statement: "case" expression "of" case_list ';' . "end"
  205 otherwise_clause: ';' . "otherwise" statement

    "end"        shift, and go to state 387
    "otherwise"  shift, and go to state 388


state 375

  202 case_list: case_list ',' . case

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68

    constant             go to state 334
    constant_identifier  go to state 70
    sign                 go to state 71
    constant_list        go to state 350
    case                 go to state 389


state 376

  199 case_statement: "case" expression "of" case_list otherwise_clause . "end"
  200               | "case" expression "of" case_list otherwise_clause . ';' "end"

    "end"  shift, and go to state 390
    ';'    shift, and go to state 391


state 377

  197 if_statement: "if" expression "then" statement "else" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 160
    "begin"      shift, and go to state 130
    "case"       shift, and go to state 161
    "goto"       shift, and go to state 162
    "if"         shift, and go to state 163
    "repeat"     shift, and go to state 164
    "while"      shift, and go to state 165
    "for"        shift, and go to state 166
    "with"       shift, and go to state 167
    "read"       shift, and go to state 168
    "readln"     shift, and go to state 169
    "write"      shift, and go to state 170
    "writeln"    shift, and go to state 171

    $default  reduce using rule 173 (statement)

    label                  go to state 172
    variable_reference     go to state 173
    variable_identifier    go to state 174
    function_identifier    go to state 175
    procedure_identifier   go to state 176
    statement              go to state 392
    simple_statement       go to state 178
    assignment_statement   go to state 179
    procedure_statement    go to state 180
    goto_statement         go to state 181
    structured_statement   go to state 182
    compound_statement     go to state 183
    conditional_statement  go to state 185
    if_statement           go to state 186
    case_statement         go to state 187
    repetitive_statement   go to state 188
    repeat_statement       go to state 189
    while_statement        go to state 190
    for_statement          go to state 191
    with_statement         go to state 192


state 378

  211 for_statement: "for" control_variable ":=" initial_value "to" . final_value "do" statement

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 239
    simple_expression_term_operator_iterable  go to state 240
    expression                                go to state 393
    function_call                             go to state 242
    function_identifier                       go to state 243
    set_constructor                           go to state 244
    final_value                               go to state 394


state 379

  212 for_statement: "for" control_variable ":=" initial_value "downto" . final_value "do" statement

    DECIMAL_INT    shift, and go to state 223
    HEXADECIMAL    shift, and go to state 224
    REAL_DECIMAL   shift, and go to state 225
    IDENTIFIER     shift, and go to state 226
    QUOTED_STRING  shift, and go to state 227
    "nil"          shift, and go to state 228
    "not"          shift, and go to state 229
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 230
    '('            shift, and go to state 231
    '['            shift, and go to state 232

    sign                                      go to state 233
    variable_reference                        go to state 234
    variable_identifier                       go to state 174
    unsigned_constant                         go to state 235
    unsigned_number                           go to state 236
    factor                                    go to state 237
    term                                      go to state 238
    simple_expression                         go to state 239
    simple_expression_term_operator_iterable  go to state 240
    expression                                go to state 393
    function_call                             go to state 242
    function_identifier                       go to state 243
    set_constructor                           go to state 244
    final_value                               go to state 395


state 380

  116 expression_list: expression_list ',' expression .

    $default  reduce using rule 116 (expression_list)


state 381

  159 actual_parameter_iterable: actual_parameter_iterable ',' actual_parameter .

    $default  reduce using rule 159 (actual_parameter_iterable)


state 382

   93 variant_part: "case" IDENTIFIER ':' tag_field_type "of" variant_list .
   94 variant_list: variant_list . ';' variant

    ';'  shift, and go to state 366

    ';'       [reduce using rule 93 (variant_part)]
    $default  reduce using rule 93 (variant_part)


state 383

   94 variant_list: variant_list ';' variant .

    $default  reduce using rule 94 (variant_list)


state 384

   98 constant_list: constant_list ',' constant .

    $default  reduce using rule 98 (constant_list)


state 385

   96 variant: constant_list ':' '(' . ')'
   97        | constant_list ':' '(' . field_list ')'

    IDENTIFIER  shift, and go to state 21
    "case"      shift, and go to state 142
    ')'         shift, and go to state 396

    identifier_list    go to state 143
    field_list         go to state 397
    fixed_part         go to state 145
    field_declaration  go to state 146
    variant_part       go to state 147


state 386

  204 case: constant_list ':' statement .

    $default  reduce using rule 204 (case)


state 387

  201 case_statement: "case" expression "of" case_list ';' "end" .

    $default  reduce using rule 201 (case_statement)


state 388

  205 otherwise_clause: ';' "otherwise" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 160
    "begin"      shift, and go to state 130
    "case"       shift, and go to state 161
    "goto"       shift, and go to state 162
    "if"         shift, and go to state 163
    "repeat"     shift, and go to state 164
    "while"      shift, and go to state 165
    "for"        shift, and go to state 166
    "with"       shift, and go to state 167
    "read"       shift, and go to state 168
    "readln"     shift, and go to state 169
    "write"      shift, and go to state 170
    "writeln"    shift, and go to state 171

    $default  reduce using rule 173 (statement)

    label                  go to state 172
    variable_reference     go to state 173
    variable_identifier    go to state 174
    function_identifier    go to state 175
    procedure_identifier   go to state 176
    statement              go to state 398
    simple_statement       go to state 178
    assignment_statement   go to state 179
    procedure_statement    go to state 180
    goto_statement         go to state 181
    structured_statement   go to state 182
    compound_statement     go to state 183
    conditional_statement  go to state 185
    if_statement           go to state 186
    case_statement         go to state 187
    repetitive_statement   go to state 188
    repeat_statement       go to state 189
    while_statement        go to state 190
    for_statement          go to state 191
    with_statement         go to state 192


state 389

  202 case_list: case_list ',' case .

    $default  reduce using rule 202 (case_list)


state 390

  199 case_statement: "case" expression "of" case_list otherwise_clause "end" .

    $default  reduce using rule 199 (case_statement)


state 391

  200 case_statement: "case" expression "of" case_list otherwise_clause ';' . "end"

    "end"  shift, and go to state 399


state 392

  197 if_statement: "if" expression "then" statement "else" statement .

    $default  reduce using rule 197 (if_statement)


state 393

  215 final_value: expression .

    $default  reduce using rule 215 (final_value)


state 394

  211 for_statement: "for" control_variable ":=" initial_value "to" final_value . "do" statement

    "do"  shift, and go to state 400


state 395

  212 for_statement: "for" control_variable ":=" initial_value "downto" final_value . "do" statement

    "do"  shift, and go to state 401


state 396

   96 variant: constant_list ':' '(' ')' .

    $default  reduce using rule 96 (variant)


state 397

   97 variant: constant_list ':' '(' field_list . ')'

    ')'  shift, and go to state 402


state 398

  205 otherwise_clause: ';' "otherwise" statement .

    $default  reduce using rule 205 (otherwise_clause)


state 399

  200 case_statement: "case" expression "of" case_list otherwise_clause ';' "end" .

    $default  reduce using rule 200 (case_statement)


state 400

  211 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 160
    "begin"      shift, and go to state 130
    "case"       shift, and go to state 161
    "goto"       shift, and go to state 162
    "if"         shift, and go to state 163
    "repeat"     shift, and go to state 164
    "while"      shift, and go to state 165
    "for"        shift, and go to state 166
    "with"       shift, and go to state 167
    "read"       shift, and go to state 168
    "readln"     shift, and go to state 169
    "write"      shift, and go to state 170
    "writeln"    shift, and go to state 171

    $default  reduce using rule 173 (statement)

    label                  go to state 172
    variable_reference     go to state 173
    variable_identifier    go to state 174
    function_identifier    go to state 175
    procedure_identifier   go to state 176
    statement              go to state 403
    simple_statement       go to state 178
    assignment_statement   go to state 179
    procedure_statement    go to state 180
    goto_statement         go to state 181
    structured_statement   go to state 182
    compound_statement     go to state 183
    conditional_statement  go to state 185
    if_statement           go to state 186
    case_statement         go to state 187
    repetitive_statement   go to state 188
    repeat_statement       go to state 189
    while_statement        go to state 190
    for_statement          go to state 191
    with_statement         go to state 192


state 401

  212 for_statement: "for" control_variable ":=" initial_value "downto" final_value "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 160
    "begin"      shift, and go to state 130
    "case"       shift, and go to state 161
    "goto"       shift, and go to state 162
    "if"         shift, and go to state 163
    "repeat"     shift, and go to state 164
    "while"      shift, and go to state 165
    "for"        shift, and go to state 166
    "with"       shift, and go to state 167
    "read"       shift, and go to state 168
    "readln"     shift, and go to state 169
    "write"      shift, and go to state 170
    "writeln"    shift, and go to state 171

    $default  reduce using rule 173 (statement)

    label                  go to state 172
    variable_reference     go to state 173
    variable_identifier    go to state 174
    function_identifier    go to state 175
    procedure_identifier   go to state 176
    statement              go to state 404
    simple_statement       go to state 178
    assignment_statement   go to state 179
    procedure_statement    go to state 180
    goto_statement         go to state 181
    structured_statement   go to state 182
    compound_statement     go to state 183
    conditional_statement  go to state 185
    if_statement           go to state 186
    case_statement         go to state 187
    repetitive_statement   go to state 188
    repeat_statement       go to state 189
    while_statement        go to state 190
    for_statement          go to state 191
    with_statement         go to state 192


state 402

   97 variant: constant_list ':' '(' field_list ')' .

    $default  reduce using rule 97 (variant)


state 403

  211 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" statement .

    $default  reduce using rule 211 (for_statement)


state 404

  212 for_statement: "for" control_variable ":=" initial_value "downto" final_value "do" statement .

    $default  reduce using rule 212 (for_statement)
