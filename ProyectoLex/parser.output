Nonterminals useless in grammar

   file_buffer_symbol
   pointer_object_symbol
   result_type


Terminals unused in grammar

   "word"
   "true"
   "false"
   "read"
   "readln"
   "write"
   "writeln"
   ASSIGNMENT_PRECEDENCE
   "<>"
   "<="
   ">="
   POSITIVE
   NEGATIVE


Rules useless in grammar

  238 file_buffer_symbol: '^'

  239 pointer_object_symbol: '^'

  240 result_type: ordinal_type_identifier
  241            | real_type_identifier
  242            | pointer_type_identifier


State 327 conflicts: 1 shift/reduce
State 345 conflicts: 1 shift/reduce
State 374 conflicts: 1 shift/reduce


Grammar

    0 $accept: pascal $end

    1 pascal: program
    2       | regular_unit

    3 program: program_heading ';' block
    4        | program_heading ';' uses_clause ';' block

    5 program_heading: "program" IDENTIFIER
    6                | "program" IDENTIFIER '(' program_parameters ')'

    7 program_parameters: identifier_list

    8 uses_clause: "uses" identifier_list

    9 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part

   10 label_declaration_part: "label" label_list ';'
   11                       | /* empty */

   12 label_list: label_list ',' label
   13           | label

   14 label: DECIMAL_INT

   15 constant_declaration_part: "const" constant_declaration_list
   16                          | /* empty */

   17 constant_declaration_list: constant_declaration_list constant_declaration
   18                          | constant_declaration

   19 constant_declaration: IDENTIFIER '=' constant ';'

   20 constant: constant_identifier
   21         | sign constant_identifier
   22         | DECIMAL_INT
   23         | HEXADECIMAL
   24         | REAL_DECIMAL
   25         | QUOTED_STRING
   26         | QUOTED_CHAR

   27 constant_identifier: IDENTIFIER

   28 type_declaration_part: "type" type_declaration_list
   29                      | /* empty */

   30 type_declaration_list: type_declaration_list type_declaration
   31                      | type_declaration

   32 type_declaration: IDENTIFIER '=' type ';'

   33 variable_declaration_part: "var" variable_declaration_list
   34                          | /* empty */

   35 variable_declaration_list: variable_declaration_list variable_declaration
   36                          | variable_declaration

   37 variable_declaration: identifier_list ':' type ';'

   38 procedure_and_function_declaration_part: procedure_and_function_declaration_list
   39                                        | /* empty */

   40 procedure_and_function_declaration_list: procedure_and_function_declaration_list procedure_and_function_declaration
   41                                        | procedure_and_function_declaration

   42 procedure_and_function_declaration: procedure_declaration
   43                                   | function_declaration

   44 statement_part: compound_statement

   45 sign: '+'
   46     | '-'

   47 identifier_list: identifier_list ',' IDENTIFIER
   48                | IDENTIFIER

   49 type: simple_type
   50     | structured_type
   51     | pointer_type
   52     | IDENTIFIER

   53 simple_type: ordinal_type
   54            | real_type
   55            | string_type

   56 ordinal_type: subrange_type
   57             | enumerated_type
   58             | ordinal_type_identifier

   59 ordinal_type_identifier: "integer"
   60                        | "longint"
   61                        | "char"
   62                        | "boolean"

   63 enumerated_type: '(' identifier_list ')'

   64 subrange_type: constant ".." constant

   65 real_type: real_type_identifier

   66 real_type_identifier: "real"

   67 string_type: "string" '[' DECIMAL_INT ']'

   68 structured_type: "packed" type_list
   69                | type_list

   70 type_list: array_type
   71          | set_type
   72          | file_type
   73          | record_type

   74 array_type: "array" '[' index_type_list ']' "of" type

   75 index_type_list: index_type_list ',' ordinal_type
   76                | ordinal_type

   77 record_type: "record" "end"
   78            | "record" field_list "end"

   79 field_list: fixed_part
   80           | fixed_part ';'
   81           | fixed_part ';' variant_part
   82           | fixed_part ';' variant_part ';'
   83           | variant_part
   84           | variant_part ';'

   85 fixed_part: fixed_part ';' field_declaration
   86           | field_declaration

   87 field_declaration: identifier_list ':' type

   88 variant_part: "case" tag_field_type "of" variant_list
   89             | "case" IDENTIFIER ':' tag_field_type "of" variant_list

   90 variant_list: variant_list ';' variant
   91             | variant

   92 variant: constant_list ':' '(' ')'
   93        | constant_list ':' '(' field_list ')'

   94 constant_list: constant_list ',' constant
   95              | constant

   96 tag_field_type: IDENTIFIER

   97 set_type: "set" "of" ordinal_type

   98 file_type: "file"
   99          | "of" type

  100 pointer_type: '^' base_type
  101             | pointer_type_identifier

  102 pointer_type_identifier: "nil"

  103 base_type: IDENTIFIER

  104 variable_reference: variable_identifier qualifier_list

  105 variable_identifier: IDENTIFIER

  106 qualifier_list: qualifier_list qualifier
  107               | qualifier

  108 qualifier: index
  109          | field_designator
  110          | '^'

  111 index: '[' expression_list ']'

  112 expression_list: expression_list ',' expression
  113                | expression

  114 field_designator: '.' IDENTIFIER

  115 unsigned_constant: unsigned_number
  116                  | QUOTED_STRING
  117                  | "nil"

  118 unsigned_number: DECIMAL_INT
  119                | HEXADECIMAL
  120                | REAL_DECIMAL

  121 factor: variable_reference
  122       | '@' variable_reference
  123       | unsigned_constant
  124       | function_call
  125       | set_constructor
  126       | '(' expression ')'
  127       | "not" factor
  128       | IDENTIFIER

  129 term: term term_operator_list factor
  130     | factor

  131 term_operator_list: '*'
  132                   | '/'
  133                   | "div"
  134                   | "mod"
  135                   | "and"

  136 simple_expression: sign simple_expression_term_operator_iterable
  137                  | simple_expression_term_operator_iterable

  138 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list term
  139                                         | term

  140 simple_expression_term_operator_list: '+'
  141                                     | '-'
  142                                     | "or"

  143 expression: simple_expression
  144           | simple_expression relational_operator simple_expression

  145 relational_operator: '='
  146                    | '<'
  147                    | '>'
  148                    | LE
  149                    | RE
  150                    | NOTEQUAL
  151                    | "in"

  152 function_call: function_identifier actual_parameter_list

  153 function_identifier: IDENTIFIER

  154 actual_parameter_list: '(' actual_parameter_iterable ')'

  155 actual_parameter_iterable: actual_parameter_iterable ',' actual_parameter
  156                          | actual_parameter

  157 actual_parameter: expression

  158 procedure_identifier: IDENTIFIER

  159 set_constructor: '[' ']'
  160                | '[' member_group_list ']'

  161 member_group_list: member_group_list ',' member_group
  162                  | member_group

  163 member_group: expression
  164             | expression ".." expression

  165 statement: /* empty */
  166          | label ':'
  167          | label ':' simple_statement
  168          | label ':' structured_statement
  169          | simple_statement
  170          | structured_statement

  171 simple_statement: assignment_statement
  172                 | procedure_statement
  173                 | goto_statement

  174 assignment_statement: variable_reference ":=" expression
  175                     | function_identifier ":=" expression

  176 procedure_statement: procedure_identifier
  177                    | procedure_identifier actual_parameter_list

  178 goto_statement: "goto" label

  179 structured_statement: compound_statement
  180                     | conditional_statement
  181                     | repetitive_statement
  182                     | with_statement

  183 compound_statement: "begin" statement_list "end"

  184 statement_list: statement_list ';' statement
  185               | statement

  186 conditional_statement: if_statement
  187                      | case_statement

  188 if_statement: "if" expression "then" statement
  189             | "if" expression "then" statement "else" statement

  190 case_statement: "case" expression "of" case_list "end"
  191               | "case" expression "of" case_list otherwise_clause "end"
  192               | "case" expression "of" case_list otherwise_clause ';' "end"
  193               | "case" expression "of" case_list ';' "end"

  194 case_list: case_list ',' case
  195          | case

  196 case: constant_list ':' statement

  197 otherwise_clause: ';' "otherwise" statement

  198 repetitive_statement: repeat_statement
  199                     | while_statement
  200                     | for_statement

  201 repeat_statement: "repeat" statement_list "until" expression

  202 while_statement: "while" expression "do" statement

  203 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" statement
  204              | "for" control_variable ":=" initial_value "downto" final_value "do" statement

  205 control_variable: IDENTIFIER

  206 initial_value: expression

  207 final_value: expression

  208 with_statement: "with" record_variable_reference_list "do" statement

  209 record_variable_reference_list: record_variable_reference_list ',' variable_reference
  210                               | variable_reference

  211 procedure_declaration: procedure_heading ';' procedure_body ';'

  212 procedure_body: block
  213               | "forward"
  214               | "external"

  215 procedure_heading: "procedure" IDENTIFIER
  216                  | "procedure" IDENTIFIER formal_parameter_list

  217 function_declaration: function_heading ';' function_body ';'

  218 function_body: block
  219              | "forward"
  220              | "external"

  221 function_heading: "function" IDENTIFIER ':' IDENTIFIER
  222                 | "function" IDENTIFIER formal_parameter_list ':' IDENTIFIER

  223 formal_parameter_list: '(' formal_parameter_list_iterable ')'

  224 formal_parameter_list_iterable: formal_parameter_list_iterable ';' formal_parameter_list_iterable_list
  225                               | formal_parameter_list_iterable_list

  226 formal_parameter_list_iterable_list: parameter_declaration
  227                                    | procedure_heading
  228                                    | function_heading

  229 parameter_declaration: "var" identifier_list ':' type_identifier
  230                      | identifier_list ':' type_identifier

  231 type_identifier: IDENTIFIER

  232 regular_unit: unit_heading ';' interface_part implementation_part "end" '.'

  233 unit_heading: "unit" IDENTIFIER

  234 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

  235 uses_clause_empty: uses_clause
  236                  | /* empty */

  237 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 63 92 93 126 154 223
')' (41) 6 63 92 93 126 154 223
'*' (42) 131
'+' (43) 45 140
',' (44) 12 47 75 94 112 155 161 194 209
'-' (45) 46 141
'.' (46) 114 232
'/' (47) 132
':' (58) 37 87 89 92 93 166 167 168 196 221 222 229 230
';' (59) 3 4 10 19 32 37 80 81 82 84 85 90 184 192 193 197 211 217
    224 232
'<' (60) 146
'=' (61) 19 32 145
'>' (62) 147
'@' (64) 122
'[' (91) 67 74 111 159 160
']' (93) 67 74 111 159 160
'^' (94) 100 110
error (256)
DECIMAL_INT (258) 14 22 67 118
HEXADECIMAL (259) 23 119
REAL_DECIMAL (260) 24 120
IDENTIFIER (261) 5 6 19 27 32 47 48 52 89 96 103 105 114 128 153 158
    205 215 216 221 222 231 233
QUOTED_STRING (262) 25 116
QUOTED_CHAR (263) 26
"program" (264) 5 6
"begin" (265) 183
"uses" (266) 8
"unit" (267) 233
"interface" (268) 234
"implementation" (269) 237
"label" (270) 10
"const" (271) 15
"type" (272) 28
"real" (273) 66
"integer" (274) 59
"longint" (275) 60
"word" (276)
"char" (277) 61
"boolean" (278) 62
"true" (279)
"false" (280)
"string" (281) 67
"packed" (282) 68
"array" (283) 74
"record" (284) 77 78
"end" (285) 77 78 183 190 191 192 193 232
"case" (286) 88 89 190 191 192 193
"otherwise" (287) 197
"of" (288) 74 88 89 97 99 190 191 192 193
"set" (289) 97
"var" (290) 33 229
"forward" (291) 213 219
"external" (292) 214 220
"function" (293) 221 222
"procedure" (294) 215 216
"file" (295) 98
"goto" (296) 178
"if" (297) 188 189
"then" (298) 188 189
"else" (299) 189
"repeat" (300) 201
"until" (301) 201
"while" (302) 202
"do" (303) 202 203 204 208
"for" (304) 203 204
"to" (305) 203
"downto" (306) 204
"with" (307) 208
"nil" (308) 102 117
"read" (309)
"readln" (310)
"write" (311)
"writeln" (312)
"in" (313) 151
"or" (314) 142
"div" (315) 133
"mod" (316) 134
"and" (317) 135
"not" (318) 127
ASSIGNMENT_PRECEDENCE (319)
":=" (320) 174 175 203 204
".." (321) 64 164
"<>" (322)
"<=" (323)
">=" (324)
RE (325) 149
LE (326) 148
NOTEQUAL (327) 150
POSITIVE (328)
NEGATIVE (329)


Nonterminals, with rules where they appear

$accept (92)
    on left: 0
pascal (93)
    on left: 1 2, on right: 0
program (94)
    on left: 3 4, on right: 1
program_heading (95)
    on left: 5 6, on right: 3 4
program_parameters (96)
    on left: 7, on right: 6
uses_clause (97)
    on left: 8, on right: 4 235
block (98)
    on left: 9, on right: 3 4 212 218
label_declaration_part (99)
    on left: 10 11, on right: 9
label_list (100)
    on left: 12 13, on right: 10 12
label (101)
    on left: 14, on right: 12 13 166 167 168 178
constant_declaration_part (102)
    on left: 15 16, on right: 9 234 237
constant_declaration_list (103)
    on left: 17 18, on right: 15 17
constant_declaration (104)
    on left: 19, on right: 17 18
constant (105)
    on left: 20 21 22 23 24 25 26, on right: 19 64 94 95
constant_identifier (106)
    on left: 27, on right: 20 21
type_declaration_part (107)
    on left: 28 29, on right: 9 234 237
type_declaration_list (108)
    on left: 30 31, on right: 28 30
type_declaration (109)
    on left: 32, on right: 30 31
variable_declaration_part (110)
    on left: 33 34, on right: 9 234 237
variable_declaration_list (111)
    on left: 35 36, on right: 33 35
variable_declaration (112)
    on left: 37, on right: 35 36
procedure_and_function_declaration_part (113)
    on left: 38 39, on right: 9 234 237
procedure_and_function_declaration_list (114)
    on left: 40 41, on right: 38 40
procedure_and_function_declaration (115)
    on left: 42 43, on right: 40 41
statement_part (116)
    on left: 44, on right: 9
sign (117)
    on left: 45 46, on right: 21 136
identifier_list (118)
    on left: 47 48, on right: 7 8 37 47 63 87 229 230
type (119)
    on left: 49 50 51 52, on right: 32 37 74 87 99
simple_type (120)
    on left: 53 54 55, on right: 49
ordinal_type (121)
    on left: 56 57 58, on right: 53 75 76 97
ordinal_type_identifier (122)
    on left: 59 60 61 62, on right: 58
enumerated_type (123)
    on left: 63, on right: 57
subrange_type (124)
    on left: 64, on right: 56
real_type (125)
    on left: 65, on right: 54
real_type_identifier (126)
    on left: 66, on right: 65
string_type (127)
    on left: 67, on right: 55
structured_type (128)
    on left: 68 69, on right: 50
type_list (129)
    on left: 70 71 72 73, on right: 68 69
array_type (130)
    on left: 74, on right: 70
index_type_list (131)
    on left: 75 76, on right: 74 75
record_type (132)
    on left: 77 78, on right: 73
field_list (133)
    on left: 79 80 81 82 83 84, on right: 78 93
fixed_part (134)
    on left: 85 86, on right: 79 80 81 82 85
field_declaration (135)
    on left: 87, on right: 85 86
variant_part (136)
    on left: 88 89, on right: 81 82 83 84
variant_list (137)
    on left: 90 91, on right: 88 89 90
variant (138)
    on left: 92 93, on right: 90 91
constant_list (139)
    on left: 94 95, on right: 92 93 94 196
tag_field_type (140)
    on left: 96, on right: 88 89
set_type (141)
    on left: 97, on right: 71
file_type (142)
    on left: 98 99, on right: 72
pointer_type (143)
    on left: 100 101, on right: 51
pointer_type_identifier (144)
    on left: 102, on right: 101
base_type (145)
    on left: 103, on right: 100
variable_reference (146)
    on left: 104, on right: 121 122 174 209 210
variable_identifier (147)
    on left: 105, on right: 104
qualifier_list (148)
    on left: 106 107, on right: 104 106
qualifier (149)
    on left: 108 109 110, on right: 106 107
index (150)
    on left: 111, on right: 108
expression_list (151)
    on left: 112 113, on right: 111 112
field_designator (152)
    on left: 114, on right: 109
unsigned_constant (153)
    on left: 115 116 117, on right: 123
unsigned_number (154)
    on left: 118 119 120, on right: 115
factor (155)
    on left: 121 122 123 124 125 126 127 128, on right: 127 129 130
term (156)
    on left: 129 130, on right: 129 138 139
term_operator_list (157)
    on left: 131 132 133 134 135, on right: 129
simple_expression (158)
    on left: 136 137, on right: 143 144
simple_expression_term_operator_iterable (159)
    on left: 138 139, on right: 136 137 138
simple_expression_term_operator_list (160)
    on left: 140 141 142, on right: 138
expression (161)
    on left: 143 144, on right: 112 113 126 157 163 164 174 175 188
    189 190 191 192 193 201 202 206 207
relational_operator (162)
    on left: 145 146 147 148 149 150 151, on right: 144
function_call (163)
    on left: 152, on right: 124
function_identifier (164)
    on left: 153, on right: 152 175
actual_parameter_list (165)
    on left: 154, on right: 152 177
actual_parameter_iterable (166)
    on left: 155 156, on right: 154 155
actual_parameter (167)
    on left: 157, on right: 155 156
procedure_identifier (168)
    on left: 158, on right: 176 177
set_constructor (169)
    on left: 159 160, on right: 125
member_group_list (170)
    on left: 161 162, on right: 160 161
member_group (171)
    on left: 163 164, on right: 161 162
statement (172)
    on left: 165 166 167 168 169 170, on right: 184 185 188 189 196
    197 202 203 204 208
simple_statement (173)
    on left: 171 172 173, on right: 167 169
assignment_statement (174)
    on left: 174 175, on right: 171
procedure_statement (175)
    on left: 176 177, on right: 172
goto_statement (176)
    on left: 178, on right: 173
structured_statement (177)
    on left: 179 180 181 182, on right: 168 170
compound_statement (178)
    on left: 183, on right: 44 179
statement_list (179)
    on left: 184 185, on right: 183 184 201
conditional_statement (180)
    on left: 186 187, on right: 180
if_statement (181)
    on left: 188 189, on right: 186
case_statement (182)
    on left: 190 191 192 193, on right: 187
case_list (183)
    on left: 194 195, on right: 190 191 192 193 194
case (184)
    on left: 196, on right: 194 195
otherwise_clause (185)
    on left: 197, on right: 191 192
repetitive_statement (186)
    on left: 198 199 200, on right: 181
repeat_statement (187)
    on left: 201, on right: 198
while_statement (188)
    on left: 202, on right: 199
for_statement (189)
    on left: 203 204, on right: 200
control_variable (190)
    on left: 205, on right: 203 204
initial_value (191)
    on left: 206, on right: 203 204
final_value (192)
    on left: 207, on right: 203 204
with_statement (193)
    on left: 208, on right: 182
record_variable_reference_list (194)
    on left: 209 210, on right: 208 209
procedure_declaration (195)
    on left: 211, on right: 42
procedure_body (196)
    on left: 212 213 214, on right: 211
procedure_heading (197)
    on left: 215 216, on right: 211 227
function_declaration (198)
    on left: 217, on right: 43
function_body (199)
    on left: 218 219 220, on right: 217
function_heading (200)
    on left: 221 222, on right: 217 228
formal_parameter_list (201)
    on left: 223, on right: 216 222
formal_parameter_list_iterable (202)
    on left: 224 225, on right: 223 224
formal_parameter_list_iterable_list (203)
    on left: 226 227 228, on right: 224 225
parameter_declaration (204)
    on left: 229 230, on right: 226
type_identifier (205)
    on left: 231, on right: 229 230
regular_unit (206)
    on left: 232, on right: 2
unit_heading (207)
    on left: 233, on right: 232
interface_part (208)
    on left: 234, on right: 232
uses_clause_empty (209)
    on left: 235 236, on right: 234
implementation_part (210)
    on left: 237, on right: 232


state 0

    0 $accept: . pascal $end

    "program"  shift, and go to state 1
    "unit"     shift, and go to state 2

    pascal           go to state 3
    program          go to state 4
    program_heading  go to state 5
    regular_unit     go to state 6
    unit_heading     go to state 7


state 1

    5 program_heading: "program" . IDENTIFIER
    6                | "program" . IDENTIFIER '(' program_parameters ')'

    IDENTIFIER  shift, and go to state 8


state 2

  233 unit_heading: "unit" . IDENTIFIER

    IDENTIFIER  shift, and go to state 9


state 3

    0 $accept: pascal . $end

    $end  shift, and go to state 10


state 4

    1 pascal: program .

    $default  reduce using rule 1 (pascal)


state 5

    3 program: program_heading . ';' block
    4        | program_heading . ';' uses_clause ';' block

    ';'  shift, and go to state 11


state 6

    2 pascal: regular_unit .

    $default  reduce using rule 2 (pascal)


state 7

  232 regular_unit: unit_heading . ';' interface_part implementation_part "end" '.'

    ';'  shift, and go to state 12


state 8

    5 program_heading: "program" IDENTIFIER .
    6                | "program" IDENTIFIER . '(' program_parameters ')'

    '('  shift, and go to state 13

    $default  reduce using rule 5 (program_heading)


state 9

  233 unit_heading: "unit" IDENTIFIER .

    $default  reduce using rule 233 (unit_heading)


state 10

    0 $accept: pascal $end .

    $default  accept


state 11

    3 program: program_heading ';' . block
    4        | program_heading ';' . uses_clause ';' block

    "uses"   shift, and go to state 14
    "label"  shift, and go to state 15

    $default  reduce using rule 11 (label_declaration_part)

    uses_clause             go to state 16
    block                   go to state 17
    label_declaration_part  go to state 18


state 12

  232 regular_unit: unit_heading ';' . interface_part implementation_part "end" '.'

    "interface"  shift, and go to state 19

    interface_part  go to state 20


state 13

    6 program_heading: "program" IDENTIFIER '(' . program_parameters ')'

    IDENTIFIER  shift, and go to state 21

    program_parameters  go to state 22
    identifier_list     go to state 23


state 14

    8 uses_clause: "uses" . identifier_list

    IDENTIFIER  shift, and go to state 21

    identifier_list  go to state 24


state 15

   10 label_declaration_part: "label" . label_list ';'

    DECIMAL_INT  shift, and go to state 25

    label_list  go to state 26
    label       go to state 27


state 16

    4 program: program_heading ';' uses_clause . ';' block

    ';'  shift, and go to state 28


state 17

    3 program: program_heading ';' block .

    $default  reduce using rule 3 (program)


state 18

    9 block: label_declaration_part . constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part

    "const"  shift, and go to state 29

    $default  reduce using rule 16 (constant_declaration_part)

    constant_declaration_part  go to state 30


state 19

  234 interface_part: "interface" . uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "uses"  shift, and go to state 14

    $default  reduce using rule 236 (uses_clause_empty)

    uses_clause        go to state 31
    uses_clause_empty  go to state 32


state 20

  232 regular_unit: unit_heading ';' interface_part . implementation_part "end" '.'

    "implementation"  shift, and go to state 33

    implementation_part  go to state 34


state 21

   48 identifier_list: IDENTIFIER .

    $default  reduce using rule 48 (identifier_list)


state 22

    6 program_heading: "program" IDENTIFIER '(' program_parameters . ')'

    ')'  shift, and go to state 35


state 23

    7 program_parameters: identifier_list .
   47 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 36

    $default  reduce using rule 7 (program_parameters)


state 24

    8 uses_clause: "uses" identifier_list .
   47 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 36

    $default  reduce using rule 8 (uses_clause)


state 25

   14 label: DECIMAL_INT .

    $default  reduce using rule 14 (label)


state 26

   10 label_declaration_part: "label" label_list . ';'
   12 label_list: label_list . ',' label

    ';'  shift, and go to state 37
    ','  shift, and go to state 38


state 27

   13 label_list: label .

    $default  reduce using rule 13 (label_list)


state 28

    4 program: program_heading ';' uses_clause ';' . block

    "label"  shift, and go to state 15

    $default  reduce using rule 11 (label_declaration_part)

    block                   go to state 39
    label_declaration_part  go to state 18


state 29

   15 constant_declaration_part: "const" . constant_declaration_list

    IDENTIFIER  shift, and go to state 40

    constant_declaration_list  go to state 41
    constant_declaration       go to state 42


state 30

    9 block: label_declaration_part constant_declaration_part . type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part

    "type"  shift, and go to state 43

    $default  reduce using rule 29 (type_declaration_part)

    type_declaration_part  go to state 44


state 31

  235 uses_clause_empty: uses_clause .

    $default  reduce using rule 235 (uses_clause_empty)


state 32

  234 interface_part: "interface" uses_clause_empty . constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "const"  shift, and go to state 29

    $default  reduce using rule 16 (constant_declaration_part)

    constant_declaration_part  go to state 45


state 33

  237 implementation_part: "implementation" . constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "const"  shift, and go to state 29

    $default  reduce using rule 16 (constant_declaration_part)

    constant_declaration_part  go to state 46


state 34

  232 regular_unit: unit_heading ';' interface_part implementation_part . "end" '.'

    "end"  shift, and go to state 47


state 35

    6 program_heading: "program" IDENTIFIER '(' program_parameters ')' .

    $default  reduce using rule 6 (program_heading)


state 36

   47 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 48


state 37

   10 label_declaration_part: "label" label_list ';' .

    $default  reduce using rule 10 (label_declaration_part)


state 38

   12 label_list: label_list ',' . label

    DECIMAL_INT  shift, and go to state 25

    label  go to state 49


state 39

    4 program: program_heading ';' uses_clause ';' block .

    $default  reduce using rule 4 (program)


state 40

   19 constant_declaration: IDENTIFIER . '=' constant ';'

    '='  shift, and go to state 50


state 41

   15 constant_declaration_part: "const" constant_declaration_list .
   17 constant_declaration_list: constant_declaration_list . constant_declaration

    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 15 (constant_declaration_part)

    constant_declaration  go to state 51


state 42

   18 constant_declaration_list: constant_declaration .

    $default  reduce using rule 18 (constant_declaration_list)


state 43

   28 type_declaration_part: "type" . type_declaration_list

    IDENTIFIER  shift, and go to state 52

    type_declaration_list  go to state 53
    type_declaration       go to state 54


state 44

    9 block: label_declaration_part constant_declaration_part type_declaration_part . variable_declaration_part procedure_and_function_declaration_part statement_part

    "var"  shift, and go to state 55

    $default  reduce using rule 34 (variable_declaration_part)

    variable_declaration_part  go to state 56


state 45

  234 interface_part: "interface" uses_clause_empty constant_declaration_part . type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "type"  shift, and go to state 43

    $default  reduce using rule 29 (type_declaration_part)

    type_declaration_part  go to state 57


state 46

  237 implementation_part: "implementation" constant_declaration_part . type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "type"  shift, and go to state 43

    $default  reduce using rule 29 (type_declaration_part)

    type_declaration_part  go to state 58


state 47

  232 regular_unit: unit_heading ';' interface_part implementation_part "end" . '.'

    '.'  shift, and go to state 59


state 48

   47 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 47 (identifier_list)


state 49

   12 label_list: label_list ',' label .

    $default  reduce using rule 12 (label_list)


state 50

   19 constant_declaration: IDENTIFIER '=' . constant ';'

    DECIMAL_INT    shift, and go to state 60
    HEXADECIMAL    shift, and go to state 61
    REAL_DECIMAL   shift, and go to state 62
    IDENTIFIER     shift, and go to state 63
    QUOTED_STRING  shift, and go to state 64
    QUOTED_CHAR    shift, and go to state 65
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67

    constant             go to state 68
    constant_identifier  go to state 69
    sign                 go to state 70


state 51

   17 constant_declaration_list: constant_declaration_list constant_declaration .

    $default  reduce using rule 17 (constant_declaration_list)


state 52

   32 type_declaration: IDENTIFIER . '=' type ';'

    '='  shift, and go to state 71


state 53

   28 type_declaration_part: "type" type_declaration_list .
   30 type_declaration_list: type_declaration_list . type_declaration

    IDENTIFIER  shift, and go to state 52

    $default  reduce using rule 28 (type_declaration_part)

    type_declaration  go to state 72


state 54

   31 type_declaration_list: type_declaration .

    $default  reduce using rule 31 (type_declaration_list)


state 55

   33 variable_declaration_part: "var" . variable_declaration_list

    IDENTIFIER  shift, and go to state 21

    variable_declaration_list  go to state 73
    variable_declaration       go to state 74
    identifier_list            go to state 75


state 56

    9 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part . procedure_and_function_declaration_part statement_part

    "function"   shift, and go to state 76
    "procedure"  shift, and go to state 77

    $default  reduce using rule 39 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 78
    procedure_and_function_declaration_list  go to state 79
    procedure_and_function_declaration       go to state 80
    procedure_declaration                    go to state 81
    procedure_heading                        go to state 82
    function_declaration                     go to state 83
    function_heading                         go to state 84


state 57

  234 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part . variable_declaration_part procedure_and_function_declaration_part

    "var"  shift, and go to state 55

    $default  reduce using rule 34 (variable_declaration_part)

    variable_declaration_part  go to state 85


state 58

  237 implementation_part: "implementation" constant_declaration_part type_declaration_part . variable_declaration_part procedure_and_function_declaration_part

    "var"  shift, and go to state 55

    $default  reduce using rule 34 (variable_declaration_part)

    variable_declaration_part  go to state 86


state 59

  232 regular_unit: unit_heading ';' interface_part implementation_part "end" '.' .

    $default  reduce using rule 232 (regular_unit)


state 60

   22 constant: DECIMAL_INT .

    $default  reduce using rule 22 (constant)


state 61

   23 constant: HEXADECIMAL .

    $default  reduce using rule 23 (constant)


state 62

   24 constant: REAL_DECIMAL .

    $default  reduce using rule 24 (constant)


state 63

   27 constant_identifier: IDENTIFIER .

    $default  reduce using rule 27 (constant_identifier)


state 64

   25 constant: QUOTED_STRING .

    $default  reduce using rule 25 (constant)


state 65

   26 constant: QUOTED_CHAR .

    $default  reduce using rule 26 (constant)


state 66

   45 sign: '+' .

    $default  reduce using rule 45 (sign)


state 67

   46 sign: '-' .

    $default  reduce using rule 46 (sign)


state 68

   19 constant_declaration: IDENTIFIER '=' constant . ';'

    ';'  shift, and go to state 87


state 69

   20 constant: constant_identifier .

    $default  reduce using rule 20 (constant)


state 70

   21 constant: sign . constant_identifier

    IDENTIFIER  shift, and go to state 63

    constant_identifier  go to state 88


state 71

   32 type_declaration: IDENTIFIER '=' . type ';'

    DECIMAL_INT    shift, and go to state 60
    HEXADECIMAL    shift, and go to state 61
    REAL_DECIMAL   shift, and go to state 62
    IDENTIFIER     shift, and go to state 89
    QUOTED_STRING  shift, and go to state 64
    QUOTED_CHAR    shift, and go to state 65
    "real"         shift, and go to state 90
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "string"       shift, and go to state 95
    "packed"       shift, and go to state 96
    "array"        shift, and go to state 97
    "record"       shift, and go to state 98
    "of"           shift, and go to state 99
    "set"          shift, and go to state 100
    "file"         shift, and go to state 101
    "nil"          shift, and go to state 102
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '('            shift, and go to state 103
    '^'            shift, and go to state 104

    constant                 go to state 105
    constant_identifier      go to state 69
    sign                     go to state 70
    type                     go to state 106
    simple_type              go to state 107
    ordinal_type             go to state 108
    ordinal_type_identifier  go to state 109
    enumerated_type          go to state 110
    subrange_type            go to state 111
    real_type                go to state 112
    real_type_identifier     go to state 113
    string_type              go to state 114
    structured_type          go to state 115
    type_list                go to state 116
    array_type               go to state 117
    record_type              go to state 118
    set_type                 go to state 119
    file_type                go to state 120
    pointer_type             go to state 121
    pointer_type_identifier  go to state 122


state 72

   30 type_declaration_list: type_declaration_list type_declaration .

    $default  reduce using rule 30 (type_declaration_list)


state 73

   33 variable_declaration_part: "var" variable_declaration_list .
   35 variable_declaration_list: variable_declaration_list . variable_declaration

    IDENTIFIER  shift, and go to state 21

    $default  reduce using rule 33 (variable_declaration_part)

    variable_declaration  go to state 123
    identifier_list       go to state 75


state 74

   36 variable_declaration_list: variable_declaration .

    $default  reduce using rule 36 (variable_declaration_list)


state 75

   37 variable_declaration: identifier_list . ':' type ';'
   47 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 36
    ':'  shift, and go to state 124


state 76

  221 function_heading: "function" . IDENTIFIER ':' IDENTIFIER
  222                 | "function" . IDENTIFIER formal_parameter_list ':' IDENTIFIER

    IDENTIFIER  shift, and go to state 125


state 77

  215 procedure_heading: "procedure" . IDENTIFIER
  216                  | "procedure" . IDENTIFIER formal_parameter_list

    IDENTIFIER  shift, and go to state 126


state 78

    9 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part . statement_part

    "begin"  shift, and go to state 127

    statement_part      go to state 128
    compound_statement  go to state 129


state 79

   38 procedure_and_function_declaration_part: procedure_and_function_declaration_list .
   40 procedure_and_function_declaration_list: procedure_and_function_declaration_list . procedure_and_function_declaration

    "function"   shift, and go to state 76
    "procedure"  shift, and go to state 77

    $default  reduce using rule 38 (procedure_and_function_declaration_part)

    procedure_and_function_declaration  go to state 130
    procedure_declaration               go to state 81
    procedure_heading                   go to state 82
    function_declaration                go to state 83
    function_heading                    go to state 84


state 80

   41 procedure_and_function_declaration_list: procedure_and_function_declaration .

    $default  reduce using rule 41 (procedure_and_function_declaration_list)


state 81

   42 procedure_and_function_declaration: procedure_declaration .

    $default  reduce using rule 42 (procedure_and_function_declaration)


state 82

  211 procedure_declaration: procedure_heading . ';' procedure_body ';'

    ';'  shift, and go to state 131


state 83

   43 procedure_and_function_declaration: function_declaration .

    $default  reduce using rule 43 (procedure_and_function_declaration)


state 84

  217 function_declaration: function_heading . ';' function_body ';'

    ';'  shift, and go to state 132


state 85

  234 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part . procedure_and_function_declaration_part

    "function"   shift, and go to state 76
    "procedure"  shift, and go to state 77

    $default  reduce using rule 39 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 133
    procedure_and_function_declaration_list  go to state 79
    procedure_and_function_declaration       go to state 80
    procedure_declaration                    go to state 81
    procedure_heading                        go to state 82
    function_declaration                     go to state 83
    function_heading                         go to state 84


state 86

  237 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part . procedure_and_function_declaration_part

    "function"   shift, and go to state 76
    "procedure"  shift, and go to state 77

    $default  reduce using rule 39 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 134
    procedure_and_function_declaration_list  go to state 79
    procedure_and_function_declaration       go to state 80
    procedure_declaration                    go to state 81
    procedure_heading                        go to state 82
    function_declaration                     go to state 83
    function_heading                         go to state 84


state 87

   19 constant_declaration: IDENTIFIER '=' constant ';' .

    $default  reduce using rule 19 (constant_declaration)


state 88

   21 constant: sign constant_identifier .

    $default  reduce using rule 21 (constant)


state 89

   27 constant_identifier: IDENTIFIER .
   52 type: IDENTIFIER .

    ".."      reduce using rule 27 (constant_identifier)
    $default  reduce using rule 52 (type)


state 90

   66 real_type_identifier: "real" .

    $default  reduce using rule 66 (real_type_identifier)


state 91

   59 ordinal_type_identifier: "integer" .

    $default  reduce using rule 59 (ordinal_type_identifier)


state 92

   60 ordinal_type_identifier: "longint" .

    $default  reduce using rule 60 (ordinal_type_identifier)


state 93

   61 ordinal_type_identifier: "char" .

    $default  reduce using rule 61 (ordinal_type_identifier)


state 94

   62 ordinal_type_identifier: "boolean" .

    $default  reduce using rule 62 (ordinal_type_identifier)


state 95

   67 string_type: "string" . '[' DECIMAL_INT ']'

    '['  shift, and go to state 135


state 96

   68 structured_type: "packed" . type_list

    "array"   shift, and go to state 97
    "record"  shift, and go to state 98
    "of"      shift, and go to state 99
    "set"     shift, and go to state 100
    "file"    shift, and go to state 101

    type_list    go to state 136
    array_type   go to state 117
    record_type  go to state 118
    set_type     go to state 119
    file_type    go to state 120


state 97

   74 array_type: "array" . '[' index_type_list ']' "of" type

    '['  shift, and go to state 137


state 98

   77 record_type: "record" . "end"
   78            | "record" . field_list "end"

    IDENTIFIER  shift, and go to state 21
    "end"       shift, and go to state 138
    "case"      shift, and go to state 139

    identifier_list    go to state 140
    field_list         go to state 141
    fixed_part         go to state 142
    field_declaration  go to state 143
    variant_part       go to state 144


state 99

   99 file_type: "of" . type

    DECIMAL_INT    shift, and go to state 60
    HEXADECIMAL    shift, and go to state 61
    REAL_DECIMAL   shift, and go to state 62
    IDENTIFIER     shift, and go to state 89
    QUOTED_STRING  shift, and go to state 64
    QUOTED_CHAR    shift, and go to state 65
    "real"         shift, and go to state 90
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "string"       shift, and go to state 95
    "packed"       shift, and go to state 96
    "array"        shift, and go to state 97
    "record"       shift, and go to state 98
    "of"           shift, and go to state 99
    "set"          shift, and go to state 100
    "file"         shift, and go to state 101
    "nil"          shift, and go to state 102
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '('            shift, and go to state 103
    '^'            shift, and go to state 104

    constant                 go to state 105
    constant_identifier      go to state 69
    sign                     go to state 70
    type                     go to state 145
    simple_type              go to state 107
    ordinal_type             go to state 108
    ordinal_type_identifier  go to state 109
    enumerated_type          go to state 110
    subrange_type            go to state 111
    real_type                go to state 112
    real_type_identifier     go to state 113
    string_type              go to state 114
    structured_type          go to state 115
    type_list                go to state 116
    array_type               go to state 117
    record_type              go to state 118
    set_type                 go to state 119
    file_type                go to state 120
    pointer_type             go to state 121
    pointer_type_identifier  go to state 122


state 100

   97 set_type: "set" . "of" ordinal_type

    "of"  shift, and go to state 146


state 101

   98 file_type: "file" .

    $default  reduce using rule 98 (file_type)


state 102

  102 pointer_type_identifier: "nil" .

    $default  reduce using rule 102 (pointer_type_identifier)


state 103

   63 enumerated_type: '(' . identifier_list ')'

    IDENTIFIER  shift, and go to state 21

    identifier_list  go to state 147


state 104

  100 pointer_type: '^' . base_type

    IDENTIFIER  shift, and go to state 148

    base_type  go to state 149


state 105

   64 subrange_type: constant . ".." constant

    ".."  shift, and go to state 150


state 106

   32 type_declaration: IDENTIFIER '=' type . ';'

    ';'  shift, and go to state 151


state 107

   49 type: simple_type .

    $default  reduce using rule 49 (type)


state 108

   53 simple_type: ordinal_type .

    $default  reduce using rule 53 (simple_type)


state 109

   58 ordinal_type: ordinal_type_identifier .

    $default  reduce using rule 58 (ordinal_type)


state 110

   57 ordinal_type: enumerated_type .

    $default  reduce using rule 57 (ordinal_type)


state 111

   56 ordinal_type: subrange_type .

    $default  reduce using rule 56 (ordinal_type)


state 112

   54 simple_type: real_type .

    $default  reduce using rule 54 (simple_type)


state 113

   65 real_type: real_type_identifier .

    $default  reduce using rule 65 (real_type)


state 114

   55 simple_type: string_type .

    $default  reduce using rule 55 (simple_type)


state 115

   50 type: structured_type .

    $default  reduce using rule 50 (type)


state 116

   69 structured_type: type_list .

    $default  reduce using rule 69 (structured_type)


state 117

   70 type_list: array_type .

    $default  reduce using rule 70 (type_list)


state 118

   73 type_list: record_type .

    $default  reduce using rule 73 (type_list)


state 119

   71 type_list: set_type .

    $default  reduce using rule 71 (type_list)


state 120

   72 type_list: file_type .

    $default  reduce using rule 72 (type_list)


state 121

   51 type: pointer_type .

    $default  reduce using rule 51 (type)


state 122

  101 pointer_type: pointer_type_identifier .

    $default  reduce using rule 101 (pointer_type)


state 123

   35 variable_declaration_list: variable_declaration_list variable_declaration .

    $default  reduce using rule 35 (variable_declaration_list)


state 124

   37 variable_declaration: identifier_list ':' . type ';'

    DECIMAL_INT    shift, and go to state 60
    HEXADECIMAL    shift, and go to state 61
    REAL_DECIMAL   shift, and go to state 62
    IDENTIFIER     shift, and go to state 89
    QUOTED_STRING  shift, and go to state 64
    QUOTED_CHAR    shift, and go to state 65
    "real"         shift, and go to state 90
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "string"       shift, and go to state 95
    "packed"       shift, and go to state 96
    "array"        shift, and go to state 97
    "record"       shift, and go to state 98
    "of"           shift, and go to state 99
    "set"          shift, and go to state 100
    "file"         shift, and go to state 101
    "nil"          shift, and go to state 102
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '('            shift, and go to state 103
    '^'            shift, and go to state 104

    constant                 go to state 105
    constant_identifier      go to state 69
    sign                     go to state 70
    type                     go to state 152
    simple_type              go to state 107
    ordinal_type             go to state 108
    ordinal_type_identifier  go to state 109
    enumerated_type          go to state 110
    subrange_type            go to state 111
    real_type                go to state 112
    real_type_identifier     go to state 113
    string_type              go to state 114
    structured_type          go to state 115
    type_list                go to state 116
    array_type               go to state 117
    record_type              go to state 118
    set_type                 go to state 119
    file_type                go to state 120
    pointer_type             go to state 121
    pointer_type_identifier  go to state 122


state 125

  221 function_heading: "function" IDENTIFIER . ':' IDENTIFIER
  222                 | "function" IDENTIFIER . formal_parameter_list ':' IDENTIFIER

    '('  shift, and go to state 153
    ':'  shift, and go to state 154

    formal_parameter_list  go to state 155


state 126

  215 procedure_heading: "procedure" IDENTIFIER .
  216                  | "procedure" IDENTIFIER . formal_parameter_list

    '('  shift, and go to state 153

    $default  reduce using rule 215 (procedure_heading)

    formal_parameter_list  go to state 156


state 127

  183 compound_statement: "begin" . statement_list "end"

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 157
    "begin"      shift, and go to state 127
    "case"       shift, and go to state 158
    "goto"       shift, and go to state 159
    "if"         shift, and go to state 160
    "repeat"     shift, and go to state 161
    "while"      shift, and go to state 162
    "for"        shift, and go to state 163
    "with"       shift, and go to state 164

    $default  reduce using rule 165 (statement)

    label                  go to state 165
    variable_reference     go to state 166
    variable_identifier    go to state 167
    function_identifier    go to state 168
    procedure_identifier   go to state 169
    statement              go to state 170
    simple_statement       go to state 171
    assignment_statement   go to state 172
    procedure_statement    go to state 173
    goto_statement         go to state 174
    structured_statement   go to state 175
    compound_statement     go to state 176
    statement_list         go to state 177
    conditional_statement  go to state 178
    if_statement           go to state 179
    case_statement         go to state 180
    repetitive_statement   go to state 181
    repeat_statement       go to state 182
    while_statement        go to state 183
    for_statement          go to state 184
    with_statement         go to state 185


state 128

    9 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part .

    $default  reduce using rule 9 (block)


state 129

   44 statement_part: compound_statement .

    $default  reduce using rule 44 (statement_part)


state 130

   40 procedure_and_function_declaration_list: procedure_and_function_declaration_list procedure_and_function_declaration .

    $default  reduce using rule 40 (procedure_and_function_declaration_list)


state 131

  211 procedure_declaration: procedure_heading ';' . procedure_body ';'

    "label"     shift, and go to state 15
    "forward"   shift, and go to state 186
    "external"  shift, and go to state 187

    $default  reduce using rule 11 (label_declaration_part)

    block                   go to state 188
    label_declaration_part  go to state 18
    procedure_body          go to state 189


state 132

  217 function_declaration: function_heading ';' . function_body ';'

    "label"     shift, and go to state 15
    "forward"   shift, and go to state 190
    "external"  shift, and go to state 191

    $default  reduce using rule 11 (label_declaration_part)

    block                   go to state 192
    label_declaration_part  go to state 18
    function_body           go to state 193


state 133

  234 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part .

    $default  reduce using rule 234 (interface_part)


state 134

  237 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part .

    $default  reduce using rule 237 (implementation_part)


state 135

   67 string_type: "string" '[' . DECIMAL_INT ']'

    DECIMAL_INT  shift, and go to state 194


state 136

   68 structured_type: "packed" type_list .

    $default  reduce using rule 68 (structured_type)


state 137

   74 array_type: "array" '[' . index_type_list ']' "of" type

    DECIMAL_INT    shift, and go to state 60
    HEXADECIMAL    shift, and go to state 61
    REAL_DECIMAL   shift, and go to state 62
    IDENTIFIER     shift, and go to state 63
    QUOTED_STRING  shift, and go to state 64
    QUOTED_CHAR    shift, and go to state 65
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '('            shift, and go to state 103

    constant                 go to state 105
    constant_identifier      go to state 69
    sign                     go to state 70
    ordinal_type             go to state 195
    ordinal_type_identifier  go to state 109
    enumerated_type          go to state 110
    subrange_type            go to state 111
    index_type_list          go to state 196


state 138

   77 record_type: "record" "end" .

    $default  reduce using rule 77 (record_type)


state 139

   88 variant_part: "case" . tag_field_type "of" variant_list
   89             | "case" . IDENTIFIER ':' tag_field_type "of" variant_list

    IDENTIFIER  shift, and go to state 197

    tag_field_type  go to state 198


state 140

   47 identifier_list: identifier_list . ',' IDENTIFIER
   87 field_declaration: identifier_list . ':' type

    ','  shift, and go to state 36
    ':'  shift, and go to state 199


state 141

   78 record_type: "record" field_list . "end"

    "end"  shift, and go to state 200


state 142

   79 field_list: fixed_part .
   80           | fixed_part . ';'
   81           | fixed_part . ';' variant_part
   82           | fixed_part . ';' variant_part ';'
   85 fixed_part: fixed_part . ';' field_declaration

    ';'  shift, and go to state 201

    $default  reduce using rule 79 (field_list)


state 143

   86 fixed_part: field_declaration .

    $default  reduce using rule 86 (fixed_part)


state 144

   83 field_list: variant_part .
   84           | variant_part . ';'

    ';'  shift, and go to state 202

    $default  reduce using rule 83 (field_list)


state 145

   99 file_type: "of" type .

    $default  reduce using rule 99 (file_type)


state 146

   97 set_type: "set" "of" . ordinal_type

    DECIMAL_INT    shift, and go to state 60
    HEXADECIMAL    shift, and go to state 61
    REAL_DECIMAL   shift, and go to state 62
    IDENTIFIER     shift, and go to state 63
    QUOTED_STRING  shift, and go to state 64
    QUOTED_CHAR    shift, and go to state 65
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '('            shift, and go to state 103

    constant                 go to state 105
    constant_identifier      go to state 69
    sign                     go to state 70
    ordinal_type             go to state 203
    ordinal_type_identifier  go to state 109
    enumerated_type          go to state 110
    subrange_type            go to state 111


state 147

   47 identifier_list: identifier_list . ',' IDENTIFIER
   63 enumerated_type: '(' identifier_list . ')'

    ')'  shift, and go to state 204
    ','  shift, and go to state 36


state 148

  103 base_type: IDENTIFIER .

    $default  reduce using rule 103 (base_type)


state 149

  100 pointer_type: '^' base_type .

    $default  reduce using rule 100 (pointer_type)


state 150

   64 subrange_type: constant ".." . constant

    DECIMAL_INT    shift, and go to state 60
    HEXADECIMAL    shift, and go to state 61
    REAL_DECIMAL   shift, and go to state 62
    IDENTIFIER     shift, and go to state 63
    QUOTED_STRING  shift, and go to state 64
    QUOTED_CHAR    shift, and go to state 65
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67

    constant             go to state 205
    constant_identifier  go to state 69
    sign                 go to state 70


state 151

   32 type_declaration: IDENTIFIER '=' type ';' .

    $default  reduce using rule 32 (type_declaration)


state 152

   37 variable_declaration: identifier_list ':' type . ';'

    ';'  shift, and go to state 206


state 153

  223 formal_parameter_list: '(' . formal_parameter_list_iterable ')'

    IDENTIFIER   shift, and go to state 21
    "var"        shift, and go to state 207
    "function"   shift, and go to state 76
    "procedure"  shift, and go to state 77

    identifier_list                      go to state 208
    procedure_heading                    go to state 209
    function_heading                     go to state 210
    formal_parameter_list_iterable       go to state 211
    formal_parameter_list_iterable_list  go to state 212
    parameter_declaration                go to state 213


state 154

  221 function_heading: "function" IDENTIFIER ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 214


state 155

  222 function_heading: "function" IDENTIFIER formal_parameter_list . ':' IDENTIFIER

    ':'  shift, and go to state 215


state 156

  216 procedure_heading: "procedure" IDENTIFIER formal_parameter_list .

    $default  reduce using rule 216 (procedure_heading)


state 157

  105 variable_identifier: IDENTIFIER .
  153 function_identifier: IDENTIFIER .
  158 procedure_identifier: IDENTIFIER .

    ":="      reduce using rule 153 (function_identifier)
    '['       reduce using rule 105 (variable_identifier)
    '^'       reduce using rule 105 (variable_identifier)
    '.'       reduce using rule 105 (variable_identifier)
    $default  reduce using rule 158 (procedure_identifier)


state 158

  190 case_statement: "case" . expression "of" case_list "end"
  191               | "case" . expression "of" case_list otherwise_clause "end"
  192               | "case" . expression "of" case_list otherwise_clause ';' "end"
  193               | "case" . expression "of" case_list ';' "end"

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 232
    simple_expression_term_operator_iterable  go to state 233
    expression                                go to state 234
    function_call                             go to state 235
    function_identifier                       go to state 236
    set_constructor                           go to state 237


state 159

  178 goto_statement: "goto" . label

    DECIMAL_INT  shift, and go to state 25

    label  go to state 238


state 160

  188 if_statement: "if" . expression "then" statement
  189             | "if" . expression "then" statement "else" statement

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 232
    simple_expression_term_operator_iterable  go to state 233
    expression                                go to state 239
    function_call                             go to state 235
    function_identifier                       go to state 236
    set_constructor                           go to state 237


state 161

  201 repeat_statement: "repeat" . statement_list "until" expression

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 157
    "begin"      shift, and go to state 127
    "case"       shift, and go to state 158
    "goto"       shift, and go to state 159
    "if"         shift, and go to state 160
    "repeat"     shift, and go to state 161
    "while"      shift, and go to state 162
    "for"        shift, and go to state 163
    "with"       shift, and go to state 164

    $default  reduce using rule 165 (statement)

    label                  go to state 165
    variable_reference     go to state 166
    variable_identifier    go to state 167
    function_identifier    go to state 168
    procedure_identifier   go to state 169
    statement              go to state 170
    simple_statement       go to state 171
    assignment_statement   go to state 172
    procedure_statement    go to state 173
    goto_statement         go to state 174
    structured_statement   go to state 175
    compound_statement     go to state 176
    statement_list         go to state 240
    conditional_statement  go to state 178
    if_statement           go to state 179
    case_statement         go to state 180
    repetitive_statement   go to state 181
    repeat_statement       go to state 182
    while_statement        go to state 183
    for_statement          go to state 184
    with_statement         go to state 185


state 162

  202 while_statement: "while" . expression "do" statement

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 232
    simple_expression_term_operator_iterable  go to state 233
    expression                                go to state 241
    function_call                             go to state 235
    function_identifier                       go to state 236
    set_constructor                           go to state 237


state 163

  203 for_statement: "for" . control_variable ":=" initial_value "to" final_value "do" statement
  204              | "for" . control_variable ":=" initial_value "downto" final_value "do" statement

    IDENTIFIER  shift, and go to state 242

    control_variable  go to state 243


state 164

  208 with_statement: "with" . record_variable_reference_list "do" statement

    IDENTIFIER  shift, and go to state 244

    variable_reference              go to state 245
    variable_identifier             go to state 167
    record_variable_reference_list  go to state 246


state 165

  166 statement: label . ':'
  167          | label . ':' simple_statement
  168          | label . ':' structured_statement

    ':'  shift, and go to state 247


state 166

  174 assignment_statement: variable_reference . ":=" expression

    ":="  shift, and go to state 248


state 167

  104 variable_reference: variable_identifier . qualifier_list

    '['  shift, and go to state 249
    '^'  shift, and go to state 250
    '.'  shift, and go to state 251

    qualifier_list    go to state 252
    qualifier         go to state 253
    index             go to state 254
    field_designator  go to state 255


state 168

  175 assignment_statement: function_identifier . ":=" expression

    ":="  shift, and go to state 256


state 169

  176 procedure_statement: procedure_identifier .
  177                    | procedure_identifier . actual_parameter_list

    '('  shift, and go to state 257

    $default  reduce using rule 176 (procedure_statement)

    actual_parameter_list  go to state 258


state 170

  185 statement_list: statement .

    $default  reduce using rule 185 (statement_list)


state 171

  169 statement: simple_statement .

    $default  reduce using rule 169 (statement)


state 172

  171 simple_statement: assignment_statement .

    $default  reduce using rule 171 (simple_statement)


state 173

  172 simple_statement: procedure_statement .

    $default  reduce using rule 172 (simple_statement)


state 174

  173 simple_statement: goto_statement .

    $default  reduce using rule 173 (simple_statement)


state 175

  170 statement: structured_statement .

    $default  reduce using rule 170 (statement)


state 176

  179 structured_statement: compound_statement .

    $default  reduce using rule 179 (structured_statement)


state 177

  183 compound_statement: "begin" statement_list . "end"
  184 statement_list: statement_list . ';' statement

    "end"  shift, and go to state 259
    ';'    shift, and go to state 260


state 178

  180 structured_statement: conditional_statement .

    $default  reduce using rule 180 (structured_statement)


state 179

  186 conditional_statement: if_statement .

    $default  reduce using rule 186 (conditional_statement)


state 180

  187 conditional_statement: case_statement .

    $default  reduce using rule 187 (conditional_statement)


state 181

  181 structured_statement: repetitive_statement .

    $default  reduce using rule 181 (structured_statement)


state 182

  198 repetitive_statement: repeat_statement .

    $default  reduce using rule 198 (repetitive_statement)


state 183

  199 repetitive_statement: while_statement .

    $default  reduce using rule 199 (repetitive_statement)


state 184

  200 repetitive_statement: for_statement .

    $default  reduce using rule 200 (repetitive_statement)


state 185

  182 structured_statement: with_statement .

    $default  reduce using rule 182 (structured_statement)


state 186

  213 procedure_body: "forward" .

    $default  reduce using rule 213 (procedure_body)


state 187

  214 procedure_body: "external" .

    $default  reduce using rule 214 (procedure_body)


state 188

  212 procedure_body: block .

    $default  reduce using rule 212 (procedure_body)


state 189

  211 procedure_declaration: procedure_heading ';' procedure_body . ';'

    ';'  shift, and go to state 261


state 190

  219 function_body: "forward" .

    $default  reduce using rule 219 (function_body)


state 191

  220 function_body: "external" .

    $default  reduce using rule 220 (function_body)


state 192

  218 function_body: block .

    $default  reduce using rule 218 (function_body)


state 193

  217 function_declaration: function_heading ';' function_body . ';'

    ';'  shift, and go to state 262


state 194

   67 string_type: "string" '[' DECIMAL_INT . ']'

    ']'  shift, and go to state 263


state 195

   76 index_type_list: ordinal_type .

    $default  reduce using rule 76 (index_type_list)


state 196

   74 array_type: "array" '[' index_type_list . ']' "of" type
   75 index_type_list: index_type_list . ',' ordinal_type

    ','  shift, and go to state 264
    ']'  shift, and go to state 265


state 197

   89 variant_part: "case" IDENTIFIER . ':' tag_field_type "of" variant_list
   96 tag_field_type: IDENTIFIER .

    ':'  shift, and go to state 266

    $default  reduce using rule 96 (tag_field_type)


state 198

   88 variant_part: "case" tag_field_type . "of" variant_list

    "of"  shift, and go to state 267


state 199

   87 field_declaration: identifier_list ':' . type

    DECIMAL_INT    shift, and go to state 60
    HEXADECIMAL    shift, and go to state 61
    REAL_DECIMAL   shift, and go to state 62
    IDENTIFIER     shift, and go to state 89
    QUOTED_STRING  shift, and go to state 64
    QUOTED_CHAR    shift, and go to state 65
    "real"         shift, and go to state 90
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "string"       shift, and go to state 95
    "packed"       shift, and go to state 96
    "array"        shift, and go to state 97
    "record"       shift, and go to state 98
    "of"           shift, and go to state 99
    "set"          shift, and go to state 100
    "file"         shift, and go to state 101
    "nil"          shift, and go to state 102
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '('            shift, and go to state 103
    '^'            shift, and go to state 104

    constant                 go to state 105
    constant_identifier      go to state 69
    sign                     go to state 70
    type                     go to state 268
    simple_type              go to state 107
    ordinal_type             go to state 108
    ordinal_type_identifier  go to state 109
    enumerated_type          go to state 110
    subrange_type            go to state 111
    real_type                go to state 112
    real_type_identifier     go to state 113
    string_type              go to state 114
    structured_type          go to state 115
    type_list                go to state 116
    array_type               go to state 117
    record_type              go to state 118
    set_type                 go to state 119
    file_type                go to state 120
    pointer_type             go to state 121
    pointer_type_identifier  go to state 122


state 200

   78 record_type: "record" field_list "end" .

    $default  reduce using rule 78 (record_type)


state 201

   80 field_list: fixed_part ';' .
   81           | fixed_part ';' . variant_part
   82           | fixed_part ';' . variant_part ';'
   85 fixed_part: fixed_part ';' . field_declaration

    IDENTIFIER  shift, and go to state 21
    "case"      shift, and go to state 139

    $default  reduce using rule 80 (field_list)

    identifier_list    go to state 140
    field_declaration  go to state 269
    variant_part       go to state 270


state 202

   84 field_list: variant_part ';' .

    $default  reduce using rule 84 (field_list)


state 203

   97 set_type: "set" "of" ordinal_type .

    $default  reduce using rule 97 (set_type)


state 204

   63 enumerated_type: '(' identifier_list ')' .

    $default  reduce using rule 63 (enumerated_type)


state 205

   64 subrange_type: constant ".." constant .

    $default  reduce using rule 64 (subrange_type)


state 206

   37 variable_declaration: identifier_list ':' type ';' .

    $default  reduce using rule 37 (variable_declaration)


state 207

  229 parameter_declaration: "var" . identifier_list ':' type_identifier

    IDENTIFIER  shift, and go to state 21

    identifier_list  go to state 271


state 208

   47 identifier_list: identifier_list . ',' IDENTIFIER
  230 parameter_declaration: identifier_list . ':' type_identifier

    ','  shift, and go to state 36
    ':'  shift, and go to state 272


state 209

  227 formal_parameter_list_iterable_list: procedure_heading .

    $default  reduce using rule 227 (formal_parameter_list_iterable_list)


state 210

  228 formal_parameter_list_iterable_list: function_heading .

    $default  reduce using rule 228 (formal_parameter_list_iterable_list)


state 211

  223 formal_parameter_list: '(' formal_parameter_list_iterable . ')'
  224 formal_parameter_list_iterable: formal_parameter_list_iterable . ';' formal_parameter_list_iterable_list

    ';'  shift, and go to state 273
    ')'  shift, and go to state 274


state 212

  225 formal_parameter_list_iterable: formal_parameter_list_iterable_list .

    $default  reduce using rule 225 (formal_parameter_list_iterable)


state 213

  226 formal_parameter_list_iterable_list: parameter_declaration .

    $default  reduce using rule 226 (formal_parameter_list_iterable_list)


state 214

  221 function_heading: "function" IDENTIFIER ':' IDENTIFIER .

    $default  reduce using rule 221 (function_heading)


state 215

  222 function_heading: "function" IDENTIFIER formal_parameter_list ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 275


state 216

  118 unsigned_number: DECIMAL_INT .

    $default  reduce using rule 118 (unsigned_number)


state 217

  119 unsigned_number: HEXADECIMAL .

    $default  reduce using rule 119 (unsigned_number)


state 218

  120 unsigned_number: REAL_DECIMAL .

    $default  reduce using rule 120 (unsigned_number)


state 219

  105 variable_identifier: IDENTIFIER .
  128 factor: IDENTIFIER .
  153 function_identifier: IDENTIFIER .

    '('       reduce using rule 153 (function_identifier)
    '['       reduce using rule 105 (variable_identifier)
    '^'       reduce using rule 105 (variable_identifier)
    '.'       reduce using rule 105 (variable_identifier)
    $default  reduce using rule 128 (factor)


state 220

  116 unsigned_constant: QUOTED_STRING .

    $default  reduce using rule 116 (unsigned_constant)


state 221

  117 unsigned_constant: "nil" .

    $default  reduce using rule 117 (unsigned_constant)


state 222

  127 factor: "not" . factor

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    variable_reference   go to state 227
    variable_identifier  go to state 167
    unsigned_constant    go to state 228
    unsigned_number      go to state 229
    factor               go to state 276
    function_call        go to state 235
    function_identifier  go to state 236
    set_constructor      go to state 237


state 223

  122 factor: '@' . variable_reference

    IDENTIFIER  shift, and go to state 244

    variable_reference   go to state 277
    variable_identifier  go to state 167


state 224

  126 factor: '(' . expression ')'

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 232
    simple_expression_term_operator_iterable  go to state 233
    expression                                go to state 278
    function_call                             go to state 235
    function_identifier                       go to state 236
    set_constructor                           go to state 237


state 225

  159 set_constructor: '[' . ']'
  160                | '[' . member_group_list ']'

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225
    ']'            shift, and go to state 279

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 232
    simple_expression_term_operator_iterable  go to state 233
    expression                                go to state 280
    function_call                             go to state 235
    function_identifier                       go to state 236
    set_constructor                           go to state 237
    member_group_list                         go to state 281
    member_group                              go to state 282


state 226

  136 simple_expression: sign . simple_expression_term_operator_iterable

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression_term_operator_iterable  go to state 283
    function_call                             go to state 235
    function_identifier                       go to state 236
    set_constructor                           go to state 237


state 227

  121 factor: variable_reference .

    $default  reduce using rule 121 (factor)


state 228

  123 factor: unsigned_constant .

    $default  reduce using rule 123 (factor)


state 229

  115 unsigned_constant: unsigned_number .

    $default  reduce using rule 115 (unsigned_constant)


state 230

  130 term: factor .

    $default  reduce using rule 130 (term)


state 231

  129 term: term . term_operator_list factor
  139 simple_expression_term_operator_iterable: term .

    "div"  shift, and go to state 284
    "mod"  shift, and go to state 285
    "and"  shift, and go to state 286
    '*'    shift, and go to state 287
    '/'    shift, and go to state 288

    $default  reduce using rule 139 (simple_expression_term_operator_iterable)

    term_operator_list  go to state 289


state 232

  143 expression: simple_expression .
  144           | simple_expression . relational_operator simple_expression

    "in"      shift, and go to state 290
    '='       shift, and go to state 291
    '<'       shift, and go to state 292
    '>'       shift, and go to state 293
    RE        shift, and go to state 294
    LE        shift, and go to state 295
    NOTEQUAL  shift, and go to state 296

    $default  reduce using rule 143 (expression)

    relational_operator  go to state 297


state 233

  137 simple_expression: simple_expression_term_operator_iterable .
  138 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable . simple_expression_term_operator_list term

    "or"  shift, and go to state 298
    '+'   shift, and go to state 299
    '-'   shift, and go to state 300

    $default  reduce using rule 137 (simple_expression)

    simple_expression_term_operator_list  go to state 301


state 234

  190 case_statement: "case" expression . "of" case_list "end"
  191               | "case" expression . "of" case_list otherwise_clause "end"
  192               | "case" expression . "of" case_list otherwise_clause ';' "end"
  193               | "case" expression . "of" case_list ';' "end"

    "of"  shift, and go to state 302


state 235

  124 factor: function_call .

    $default  reduce using rule 124 (factor)


state 236

  152 function_call: function_identifier . actual_parameter_list

    '('  shift, and go to state 257

    actual_parameter_list  go to state 303


state 237

  125 factor: set_constructor .

    $default  reduce using rule 125 (factor)


state 238

  178 goto_statement: "goto" label .

    $default  reduce using rule 178 (goto_statement)


state 239

  188 if_statement: "if" expression . "then" statement
  189             | "if" expression . "then" statement "else" statement

    "then"  shift, and go to state 304


state 240

  184 statement_list: statement_list . ';' statement
  201 repeat_statement: "repeat" statement_list . "until" expression

    "until"  shift, and go to state 305
    ';'      shift, and go to state 260


state 241

  202 while_statement: "while" expression . "do" statement

    "do"  shift, and go to state 306


state 242

  205 control_variable: IDENTIFIER .

    $default  reduce using rule 205 (control_variable)


state 243

  203 for_statement: "for" control_variable . ":=" initial_value "to" final_value "do" statement
  204              | "for" control_variable . ":=" initial_value "downto" final_value "do" statement

    ":="  shift, and go to state 307


state 244

  105 variable_identifier: IDENTIFIER .

    $default  reduce using rule 105 (variable_identifier)


state 245

  210 record_variable_reference_list: variable_reference .

    $default  reduce using rule 210 (record_variable_reference_list)


state 246

  208 with_statement: "with" record_variable_reference_list . "do" statement
  209 record_variable_reference_list: record_variable_reference_list . ',' variable_reference

    "do"  shift, and go to state 308
    ','   shift, and go to state 309


state 247

  166 statement: label ':' .
  167          | label ':' . simple_statement
  168          | label ':' . structured_statement

    IDENTIFIER  shift, and go to state 157
    "begin"     shift, and go to state 127
    "case"      shift, and go to state 158
    "goto"      shift, and go to state 159
    "if"        shift, and go to state 160
    "repeat"    shift, and go to state 161
    "while"     shift, and go to state 162
    "for"       shift, and go to state 163
    "with"      shift, and go to state 164

    $default  reduce using rule 166 (statement)

    variable_reference     go to state 166
    variable_identifier    go to state 167
    function_identifier    go to state 168
    procedure_identifier   go to state 169
    simple_statement       go to state 310
    assignment_statement   go to state 172
    procedure_statement    go to state 173
    goto_statement         go to state 174
    structured_statement   go to state 311
    compound_statement     go to state 176
    conditional_statement  go to state 178
    if_statement           go to state 179
    case_statement         go to state 180
    repetitive_statement   go to state 181
    repeat_statement       go to state 182
    while_statement        go to state 183
    for_statement          go to state 184
    with_statement         go to state 185


state 248

  174 assignment_statement: variable_reference ":=" . expression

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 232
    simple_expression_term_operator_iterable  go to state 233
    expression                                go to state 312
    function_call                             go to state 235
    function_identifier                       go to state 236
    set_constructor                           go to state 237


state 249

  111 index: '[' . expression_list ']'

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    expression_list                           go to state 313
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 232
    simple_expression_term_operator_iterable  go to state 233
    expression                                go to state 314
    function_call                             go to state 235
    function_identifier                       go to state 236
    set_constructor                           go to state 237


state 250

  110 qualifier: '^' .

    $default  reduce using rule 110 (qualifier)


state 251

  114 field_designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 315


state 252

  104 variable_reference: variable_identifier qualifier_list .
  106 qualifier_list: qualifier_list . qualifier

    '['  shift, and go to state 249
    '^'  shift, and go to state 250
    '.'  shift, and go to state 251

    $default  reduce using rule 104 (variable_reference)

    qualifier         go to state 316
    index             go to state 254
    field_designator  go to state 255


state 253

  107 qualifier_list: qualifier .

    $default  reduce using rule 107 (qualifier_list)


state 254

  108 qualifier: index .

    $default  reduce using rule 108 (qualifier)


state 255

  109 qualifier: field_designator .

    $default  reduce using rule 109 (qualifier)


state 256

  175 assignment_statement: function_identifier ":=" . expression

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 232
    simple_expression_term_operator_iterable  go to state 233
    expression                                go to state 317
    function_call                             go to state 235
    function_identifier                       go to state 236
    set_constructor                           go to state 237


state 257

  154 actual_parameter_list: '(' . actual_parameter_iterable ')'

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 232
    simple_expression_term_operator_iterable  go to state 233
    expression                                go to state 318
    function_call                             go to state 235
    function_identifier                       go to state 236
    actual_parameter_iterable                 go to state 319
    actual_parameter                          go to state 320
    set_constructor                           go to state 237


state 258

  177 procedure_statement: procedure_identifier actual_parameter_list .

    $default  reduce using rule 177 (procedure_statement)


state 259

  183 compound_statement: "begin" statement_list "end" .

    $default  reduce using rule 183 (compound_statement)


state 260

  184 statement_list: statement_list ';' . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 157
    "begin"      shift, and go to state 127
    "case"       shift, and go to state 158
    "goto"       shift, and go to state 159
    "if"         shift, and go to state 160
    "repeat"     shift, and go to state 161
    "while"      shift, and go to state 162
    "for"        shift, and go to state 163
    "with"       shift, and go to state 164

    $default  reduce using rule 165 (statement)

    label                  go to state 165
    variable_reference     go to state 166
    variable_identifier    go to state 167
    function_identifier    go to state 168
    procedure_identifier   go to state 169
    statement              go to state 321
    simple_statement       go to state 171
    assignment_statement   go to state 172
    procedure_statement    go to state 173
    goto_statement         go to state 174
    structured_statement   go to state 175
    compound_statement     go to state 176
    conditional_statement  go to state 178
    if_statement           go to state 179
    case_statement         go to state 180
    repetitive_statement   go to state 181
    repeat_statement       go to state 182
    while_statement        go to state 183
    for_statement          go to state 184
    with_statement         go to state 185


state 261

  211 procedure_declaration: procedure_heading ';' procedure_body ';' .

    $default  reduce using rule 211 (procedure_declaration)


state 262

  217 function_declaration: function_heading ';' function_body ';' .

    $default  reduce using rule 217 (function_declaration)


state 263

   67 string_type: "string" '[' DECIMAL_INT ']' .

    $default  reduce using rule 67 (string_type)


state 264

   75 index_type_list: index_type_list ',' . ordinal_type

    DECIMAL_INT    shift, and go to state 60
    HEXADECIMAL    shift, and go to state 61
    REAL_DECIMAL   shift, and go to state 62
    IDENTIFIER     shift, and go to state 63
    QUOTED_STRING  shift, and go to state 64
    QUOTED_CHAR    shift, and go to state 65
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '('            shift, and go to state 103

    constant                 go to state 105
    constant_identifier      go to state 69
    sign                     go to state 70
    ordinal_type             go to state 322
    ordinal_type_identifier  go to state 109
    enumerated_type          go to state 110
    subrange_type            go to state 111


state 265

   74 array_type: "array" '[' index_type_list ']' . "of" type

    "of"  shift, and go to state 323


state 266

   89 variant_part: "case" IDENTIFIER ':' . tag_field_type "of" variant_list

    IDENTIFIER  shift, and go to state 324

    tag_field_type  go to state 325


state 267

   88 variant_part: "case" tag_field_type "of" . variant_list

    DECIMAL_INT    shift, and go to state 60
    HEXADECIMAL    shift, and go to state 61
    REAL_DECIMAL   shift, and go to state 62
    IDENTIFIER     shift, and go to state 63
    QUOTED_STRING  shift, and go to state 64
    QUOTED_CHAR    shift, and go to state 65
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67

    constant             go to state 326
    constant_identifier  go to state 69
    sign                 go to state 70
    variant_list         go to state 327
    variant              go to state 328
    constant_list        go to state 329


state 268

   87 field_declaration: identifier_list ':' type .

    $default  reduce using rule 87 (field_declaration)


state 269

   85 fixed_part: fixed_part ';' field_declaration .

    $default  reduce using rule 85 (fixed_part)


state 270

   81 field_list: fixed_part ';' variant_part .
   82           | fixed_part ';' variant_part . ';'

    ';'  shift, and go to state 330

    $default  reduce using rule 81 (field_list)


state 271

   47 identifier_list: identifier_list . ',' IDENTIFIER
  229 parameter_declaration: "var" identifier_list . ':' type_identifier

    ','  shift, and go to state 36
    ':'  shift, and go to state 331


state 272

  230 parameter_declaration: identifier_list ':' . type_identifier

    IDENTIFIER  shift, and go to state 332

    type_identifier  go to state 333


state 273

  224 formal_parameter_list_iterable: formal_parameter_list_iterable ';' . formal_parameter_list_iterable_list

    IDENTIFIER   shift, and go to state 21
    "var"        shift, and go to state 207
    "function"   shift, and go to state 76
    "procedure"  shift, and go to state 77

    identifier_list                      go to state 208
    procedure_heading                    go to state 209
    function_heading                     go to state 210
    formal_parameter_list_iterable_list  go to state 334
    parameter_declaration                go to state 213


state 274

  223 formal_parameter_list: '(' formal_parameter_list_iterable ')' .

    $default  reduce using rule 223 (formal_parameter_list)


state 275

  222 function_heading: "function" IDENTIFIER formal_parameter_list ':' IDENTIFIER .

    $default  reduce using rule 222 (function_heading)


state 276

  127 factor: "not" factor .

    $default  reduce using rule 127 (factor)


state 277

  122 factor: '@' variable_reference .

    $default  reduce using rule 122 (factor)


state 278

  126 factor: '(' expression . ')'

    ')'  shift, and go to state 335


state 279

  159 set_constructor: '[' ']' .

    $default  reduce using rule 159 (set_constructor)


state 280

  163 member_group: expression .
  164             | expression . ".." expression

    ".."  shift, and go to state 336

    $default  reduce using rule 163 (member_group)


state 281

  160 set_constructor: '[' member_group_list . ']'
  161 member_group_list: member_group_list . ',' member_group

    ','  shift, and go to state 337
    ']'  shift, and go to state 338


state 282

  162 member_group_list: member_group .

    $default  reduce using rule 162 (member_group_list)


state 283

  136 simple_expression: sign simple_expression_term_operator_iterable .
  138 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable . simple_expression_term_operator_list term

    "or"  shift, and go to state 298
    '+'   shift, and go to state 299
    '-'   shift, and go to state 300

    $default  reduce using rule 136 (simple_expression)

    simple_expression_term_operator_list  go to state 301


state 284

  133 term_operator_list: "div" .

    $default  reduce using rule 133 (term_operator_list)


state 285

  134 term_operator_list: "mod" .

    $default  reduce using rule 134 (term_operator_list)


state 286

  135 term_operator_list: "and" .

    $default  reduce using rule 135 (term_operator_list)


state 287

  131 term_operator_list: '*' .

    $default  reduce using rule 131 (term_operator_list)


state 288

  132 term_operator_list: '/' .

    $default  reduce using rule 132 (term_operator_list)


state 289

  129 term: term term_operator_list . factor

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    variable_reference   go to state 227
    variable_identifier  go to state 167
    unsigned_constant    go to state 228
    unsigned_number      go to state 229
    factor               go to state 339
    function_call        go to state 235
    function_identifier  go to state 236
    set_constructor      go to state 237


state 290

  151 relational_operator: "in" .

    $default  reduce using rule 151 (relational_operator)


state 291

  145 relational_operator: '=' .

    $default  reduce using rule 145 (relational_operator)


state 292

  146 relational_operator: '<' .

    $default  reduce using rule 146 (relational_operator)


state 293

  147 relational_operator: '>' .

    $default  reduce using rule 147 (relational_operator)


state 294

  149 relational_operator: RE .

    $default  reduce using rule 149 (relational_operator)


state 295

  148 relational_operator: LE .

    $default  reduce using rule 148 (relational_operator)


state 296

  150 relational_operator: NOTEQUAL .

    $default  reduce using rule 150 (relational_operator)


state 297

  144 expression: simple_expression relational_operator . simple_expression

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 340
    simple_expression_term_operator_iterable  go to state 233
    function_call                             go to state 235
    function_identifier                       go to state 236
    set_constructor                           go to state 237


state 298

  142 simple_expression_term_operator_list: "or" .

    $default  reduce using rule 142 (simple_expression_term_operator_list)


state 299

  140 simple_expression_term_operator_list: '+' .

    $default  reduce using rule 140 (simple_expression_term_operator_list)


state 300

  141 simple_expression_term_operator_list: '-' .

    $default  reduce using rule 141 (simple_expression_term_operator_list)


state 301

  138 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list . term

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    variable_reference   go to state 227
    variable_identifier  go to state 167
    unsigned_constant    go to state 228
    unsigned_number      go to state 229
    factor               go to state 230
    term                 go to state 341
    function_call        go to state 235
    function_identifier  go to state 236
    set_constructor      go to state 237


state 302

  190 case_statement: "case" expression "of" . case_list "end"
  191               | "case" expression "of" . case_list otherwise_clause "end"
  192               | "case" expression "of" . case_list otherwise_clause ';' "end"
  193               | "case" expression "of" . case_list ';' "end"

    DECIMAL_INT    shift, and go to state 60
    HEXADECIMAL    shift, and go to state 61
    REAL_DECIMAL   shift, and go to state 62
    IDENTIFIER     shift, and go to state 63
    QUOTED_STRING  shift, and go to state 64
    QUOTED_CHAR    shift, and go to state 65
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67

    constant             go to state 326
    constant_identifier  go to state 69
    sign                 go to state 70
    constant_list        go to state 342
    case_list            go to state 343
    case                 go to state 344


state 303

  152 function_call: function_identifier actual_parameter_list .

    $default  reduce using rule 152 (function_call)


state 304

  188 if_statement: "if" expression "then" . statement
  189             | "if" expression "then" . statement "else" statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 157
    "begin"      shift, and go to state 127
    "case"       shift, and go to state 158
    "goto"       shift, and go to state 159
    "if"         shift, and go to state 160
    "repeat"     shift, and go to state 161
    "while"      shift, and go to state 162
    "for"        shift, and go to state 163
    "with"       shift, and go to state 164

    $default  reduce using rule 165 (statement)

    label                  go to state 165
    variable_reference     go to state 166
    variable_identifier    go to state 167
    function_identifier    go to state 168
    procedure_identifier   go to state 169
    statement              go to state 345
    simple_statement       go to state 171
    assignment_statement   go to state 172
    procedure_statement    go to state 173
    goto_statement         go to state 174
    structured_statement   go to state 175
    compound_statement     go to state 176
    conditional_statement  go to state 178
    if_statement           go to state 179
    case_statement         go to state 180
    repetitive_statement   go to state 181
    repeat_statement       go to state 182
    while_statement        go to state 183
    for_statement          go to state 184
    with_statement         go to state 185


state 305

  201 repeat_statement: "repeat" statement_list "until" . expression

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 232
    simple_expression_term_operator_iterable  go to state 233
    expression                                go to state 346
    function_call                             go to state 235
    function_identifier                       go to state 236
    set_constructor                           go to state 237


state 306

  202 while_statement: "while" expression "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 157
    "begin"      shift, and go to state 127
    "case"       shift, and go to state 158
    "goto"       shift, and go to state 159
    "if"         shift, and go to state 160
    "repeat"     shift, and go to state 161
    "while"      shift, and go to state 162
    "for"        shift, and go to state 163
    "with"       shift, and go to state 164

    $default  reduce using rule 165 (statement)

    label                  go to state 165
    variable_reference     go to state 166
    variable_identifier    go to state 167
    function_identifier    go to state 168
    procedure_identifier   go to state 169
    statement              go to state 347
    simple_statement       go to state 171
    assignment_statement   go to state 172
    procedure_statement    go to state 173
    goto_statement         go to state 174
    structured_statement   go to state 175
    compound_statement     go to state 176
    conditional_statement  go to state 178
    if_statement           go to state 179
    case_statement         go to state 180
    repetitive_statement   go to state 181
    repeat_statement       go to state 182
    while_statement        go to state 183
    for_statement          go to state 184
    with_statement         go to state 185


state 307

  203 for_statement: "for" control_variable ":=" . initial_value "to" final_value "do" statement
  204              | "for" control_variable ":=" . initial_value "downto" final_value "do" statement

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 232
    simple_expression_term_operator_iterable  go to state 233
    expression                                go to state 348
    function_call                             go to state 235
    function_identifier                       go to state 236
    set_constructor                           go to state 237
    initial_value                             go to state 349


state 308

  208 with_statement: "with" record_variable_reference_list "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 157
    "begin"      shift, and go to state 127
    "case"       shift, and go to state 158
    "goto"       shift, and go to state 159
    "if"         shift, and go to state 160
    "repeat"     shift, and go to state 161
    "while"      shift, and go to state 162
    "for"        shift, and go to state 163
    "with"       shift, and go to state 164

    $default  reduce using rule 165 (statement)

    label                  go to state 165
    variable_reference     go to state 166
    variable_identifier    go to state 167
    function_identifier    go to state 168
    procedure_identifier   go to state 169
    statement              go to state 350
    simple_statement       go to state 171
    assignment_statement   go to state 172
    procedure_statement    go to state 173
    goto_statement         go to state 174
    structured_statement   go to state 175
    compound_statement     go to state 176
    conditional_statement  go to state 178
    if_statement           go to state 179
    case_statement         go to state 180
    repetitive_statement   go to state 181
    repeat_statement       go to state 182
    while_statement        go to state 183
    for_statement          go to state 184
    with_statement         go to state 185


state 309

  209 record_variable_reference_list: record_variable_reference_list ',' . variable_reference

    IDENTIFIER  shift, and go to state 244

    variable_reference   go to state 351
    variable_identifier  go to state 167


state 310

  167 statement: label ':' simple_statement .

    $default  reduce using rule 167 (statement)


state 311

  168 statement: label ':' structured_statement .

    $default  reduce using rule 168 (statement)


state 312

  174 assignment_statement: variable_reference ":=" expression .

    $default  reduce using rule 174 (assignment_statement)


state 313

  111 index: '[' expression_list . ']'
  112 expression_list: expression_list . ',' expression

    ','  shift, and go to state 352
    ']'  shift, and go to state 353


state 314

  113 expression_list: expression .

    $default  reduce using rule 113 (expression_list)


state 315

  114 field_designator: '.' IDENTIFIER .

    $default  reduce using rule 114 (field_designator)


state 316

  106 qualifier_list: qualifier_list qualifier .

    $default  reduce using rule 106 (qualifier_list)


state 317

  175 assignment_statement: function_identifier ":=" expression .

    $default  reduce using rule 175 (assignment_statement)


state 318

  157 actual_parameter: expression .

    $default  reduce using rule 157 (actual_parameter)


state 319

  154 actual_parameter_list: '(' actual_parameter_iterable . ')'
  155 actual_parameter_iterable: actual_parameter_iterable . ',' actual_parameter

    ')'  shift, and go to state 354
    ','  shift, and go to state 355


state 320

  156 actual_parameter_iterable: actual_parameter .

    $default  reduce using rule 156 (actual_parameter_iterable)


state 321

  184 statement_list: statement_list ';' statement .

    $default  reduce using rule 184 (statement_list)


state 322

   75 index_type_list: index_type_list ',' ordinal_type .

    $default  reduce using rule 75 (index_type_list)


state 323

   74 array_type: "array" '[' index_type_list ']' "of" . type

    DECIMAL_INT    shift, and go to state 60
    HEXADECIMAL    shift, and go to state 61
    REAL_DECIMAL   shift, and go to state 62
    IDENTIFIER     shift, and go to state 89
    QUOTED_STRING  shift, and go to state 64
    QUOTED_CHAR    shift, and go to state 65
    "real"         shift, and go to state 90
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "string"       shift, and go to state 95
    "packed"       shift, and go to state 96
    "array"        shift, and go to state 97
    "record"       shift, and go to state 98
    "of"           shift, and go to state 99
    "set"          shift, and go to state 100
    "file"         shift, and go to state 101
    "nil"          shift, and go to state 102
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '('            shift, and go to state 103
    '^'            shift, and go to state 104

    constant                 go to state 105
    constant_identifier      go to state 69
    sign                     go to state 70
    type                     go to state 356
    simple_type              go to state 107
    ordinal_type             go to state 108
    ordinal_type_identifier  go to state 109
    enumerated_type          go to state 110
    subrange_type            go to state 111
    real_type                go to state 112
    real_type_identifier     go to state 113
    string_type              go to state 114
    structured_type          go to state 115
    type_list                go to state 116
    array_type               go to state 117
    record_type              go to state 118
    set_type                 go to state 119
    file_type                go to state 120
    pointer_type             go to state 121
    pointer_type_identifier  go to state 122


state 324

   96 tag_field_type: IDENTIFIER .

    $default  reduce using rule 96 (tag_field_type)


state 325

   89 variant_part: "case" IDENTIFIER ':' tag_field_type . "of" variant_list

    "of"  shift, and go to state 357


state 326

   95 constant_list: constant .

    $default  reduce using rule 95 (constant_list)


state 327

   88 variant_part: "case" tag_field_type "of" variant_list .
   90 variant_list: variant_list . ';' variant

    ';'  shift, and go to state 358

    ';'       [reduce using rule 88 (variant_part)]
    $default  reduce using rule 88 (variant_part)


state 328

   91 variant_list: variant .

    $default  reduce using rule 91 (variant_list)


state 329

   92 variant: constant_list . ':' '(' ')'
   93        | constant_list . ':' '(' field_list ')'
   94 constant_list: constant_list . ',' constant

    ','  shift, and go to state 359
    ':'  shift, and go to state 360


state 330

   82 field_list: fixed_part ';' variant_part ';' .

    $default  reduce using rule 82 (field_list)


state 331

  229 parameter_declaration: "var" identifier_list ':' . type_identifier

    IDENTIFIER  shift, and go to state 332

    type_identifier  go to state 361


state 332

  231 type_identifier: IDENTIFIER .

    $default  reduce using rule 231 (type_identifier)


state 333

  230 parameter_declaration: identifier_list ':' type_identifier .

    $default  reduce using rule 230 (parameter_declaration)


state 334

  224 formal_parameter_list_iterable: formal_parameter_list_iterable ';' formal_parameter_list_iterable_list .

    $default  reduce using rule 224 (formal_parameter_list_iterable)


state 335

  126 factor: '(' expression ')' .

    $default  reduce using rule 126 (factor)


state 336

  164 member_group: expression ".." . expression

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 232
    simple_expression_term_operator_iterable  go to state 233
    expression                                go to state 362
    function_call                             go to state 235
    function_identifier                       go to state 236
    set_constructor                           go to state 237


state 337

  161 member_group_list: member_group_list ',' . member_group

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 232
    simple_expression_term_operator_iterable  go to state 233
    expression                                go to state 280
    function_call                             go to state 235
    function_identifier                       go to state 236
    set_constructor                           go to state 237
    member_group                              go to state 363


state 338

  160 set_constructor: '[' member_group_list ']' .

    $default  reduce using rule 160 (set_constructor)


state 339

  129 term: term term_operator_list factor .

    $default  reduce using rule 129 (term)


state 340

  144 expression: simple_expression relational_operator simple_expression .

    $default  reduce using rule 144 (expression)


state 341

  129 term: term . term_operator_list factor
  138 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list term .

    "div"  shift, and go to state 284
    "mod"  shift, and go to state 285
    "and"  shift, and go to state 286
    '*'    shift, and go to state 287
    '/'    shift, and go to state 288

    $default  reduce using rule 138 (simple_expression_term_operator_iterable)

    term_operator_list  go to state 289


state 342

   94 constant_list: constant_list . ',' constant
  196 case: constant_list . ':' statement

    ','  shift, and go to state 359
    ':'  shift, and go to state 364


state 343

  190 case_statement: "case" expression "of" case_list . "end"
  191               | "case" expression "of" case_list . otherwise_clause "end"
  192               | "case" expression "of" case_list . otherwise_clause ';' "end"
  193               | "case" expression "of" case_list . ';' "end"
  194 case_list: case_list . ',' case

    "end"  shift, and go to state 365
    ';'    shift, and go to state 366
    ','    shift, and go to state 367

    otherwise_clause  go to state 368


state 344

  195 case_list: case .

    $default  reduce using rule 195 (case_list)


state 345

  188 if_statement: "if" expression "then" statement .
  189             | "if" expression "then" statement . "else" statement

    "else"  shift, and go to state 369

    "else"    [reduce using rule 188 (if_statement)]
    $default  reduce using rule 188 (if_statement)


state 346

  201 repeat_statement: "repeat" statement_list "until" expression .

    $default  reduce using rule 201 (repeat_statement)


state 347

  202 while_statement: "while" expression "do" statement .

    $default  reduce using rule 202 (while_statement)


state 348

  206 initial_value: expression .

    $default  reduce using rule 206 (initial_value)


state 349

  203 for_statement: "for" control_variable ":=" initial_value . "to" final_value "do" statement
  204              | "for" control_variable ":=" initial_value . "downto" final_value "do" statement

    "to"      shift, and go to state 370
    "downto"  shift, and go to state 371


state 350

  208 with_statement: "with" record_variable_reference_list "do" statement .

    $default  reduce using rule 208 (with_statement)


state 351

  209 record_variable_reference_list: record_variable_reference_list ',' variable_reference .

    $default  reduce using rule 209 (record_variable_reference_list)


state 352

  112 expression_list: expression_list ',' . expression

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 232
    simple_expression_term_operator_iterable  go to state 233
    expression                                go to state 372
    function_call                             go to state 235
    function_identifier                       go to state 236
    set_constructor                           go to state 237


state 353

  111 index: '[' expression_list ']' .

    $default  reduce using rule 111 (index)


state 354

  154 actual_parameter_list: '(' actual_parameter_iterable ')' .

    $default  reduce using rule 154 (actual_parameter_list)


state 355

  155 actual_parameter_iterable: actual_parameter_iterable ',' . actual_parameter

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 232
    simple_expression_term_operator_iterable  go to state 233
    expression                                go to state 318
    function_call                             go to state 235
    function_identifier                       go to state 236
    actual_parameter                          go to state 373
    set_constructor                           go to state 237


state 356

   74 array_type: "array" '[' index_type_list ']' "of" type .

    $default  reduce using rule 74 (array_type)


state 357

   89 variant_part: "case" IDENTIFIER ':' tag_field_type "of" . variant_list

    DECIMAL_INT    shift, and go to state 60
    HEXADECIMAL    shift, and go to state 61
    REAL_DECIMAL   shift, and go to state 62
    IDENTIFIER     shift, and go to state 63
    QUOTED_STRING  shift, and go to state 64
    QUOTED_CHAR    shift, and go to state 65
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67

    constant             go to state 326
    constant_identifier  go to state 69
    sign                 go to state 70
    variant_list         go to state 374
    variant              go to state 328
    constant_list        go to state 329


state 358

   90 variant_list: variant_list ';' . variant

    DECIMAL_INT    shift, and go to state 60
    HEXADECIMAL    shift, and go to state 61
    REAL_DECIMAL   shift, and go to state 62
    IDENTIFIER     shift, and go to state 63
    QUOTED_STRING  shift, and go to state 64
    QUOTED_CHAR    shift, and go to state 65
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67

    constant             go to state 326
    constant_identifier  go to state 69
    sign                 go to state 70
    variant              go to state 375
    constant_list        go to state 329


state 359

   94 constant_list: constant_list ',' . constant

    DECIMAL_INT    shift, and go to state 60
    HEXADECIMAL    shift, and go to state 61
    REAL_DECIMAL   shift, and go to state 62
    IDENTIFIER     shift, and go to state 63
    QUOTED_STRING  shift, and go to state 64
    QUOTED_CHAR    shift, and go to state 65
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67

    constant             go to state 376
    constant_identifier  go to state 69
    sign                 go to state 70


state 360

   92 variant: constant_list ':' . '(' ')'
   93        | constant_list ':' . '(' field_list ')'

    '('  shift, and go to state 377


state 361

  229 parameter_declaration: "var" identifier_list ':' type_identifier .

    $default  reduce using rule 229 (parameter_declaration)


state 362

  164 member_group: expression ".." expression .

    $default  reduce using rule 164 (member_group)


state 363

  161 member_group_list: member_group_list ',' member_group .

    $default  reduce using rule 161 (member_group_list)


state 364

  196 case: constant_list ':' . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 157
    "begin"      shift, and go to state 127
    "case"       shift, and go to state 158
    "goto"       shift, and go to state 159
    "if"         shift, and go to state 160
    "repeat"     shift, and go to state 161
    "while"      shift, and go to state 162
    "for"        shift, and go to state 163
    "with"       shift, and go to state 164

    $default  reduce using rule 165 (statement)

    label                  go to state 165
    variable_reference     go to state 166
    variable_identifier    go to state 167
    function_identifier    go to state 168
    procedure_identifier   go to state 169
    statement              go to state 378
    simple_statement       go to state 171
    assignment_statement   go to state 172
    procedure_statement    go to state 173
    goto_statement         go to state 174
    structured_statement   go to state 175
    compound_statement     go to state 176
    conditional_statement  go to state 178
    if_statement           go to state 179
    case_statement         go to state 180
    repetitive_statement   go to state 181
    repeat_statement       go to state 182
    while_statement        go to state 183
    for_statement          go to state 184
    with_statement         go to state 185


state 365

  190 case_statement: "case" expression "of" case_list "end" .

    $default  reduce using rule 190 (case_statement)


state 366

  193 case_statement: "case" expression "of" case_list ';' . "end"
  197 otherwise_clause: ';' . "otherwise" statement

    "end"        shift, and go to state 379
    "otherwise"  shift, and go to state 380


state 367

  194 case_list: case_list ',' . case

    DECIMAL_INT    shift, and go to state 60
    HEXADECIMAL    shift, and go to state 61
    REAL_DECIMAL   shift, and go to state 62
    IDENTIFIER     shift, and go to state 63
    QUOTED_STRING  shift, and go to state 64
    QUOTED_CHAR    shift, and go to state 65
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67

    constant             go to state 326
    constant_identifier  go to state 69
    sign                 go to state 70
    constant_list        go to state 342
    case                 go to state 381


state 368

  191 case_statement: "case" expression "of" case_list otherwise_clause . "end"
  192               | "case" expression "of" case_list otherwise_clause . ';' "end"

    "end"  shift, and go to state 382
    ';'    shift, and go to state 383


state 369

  189 if_statement: "if" expression "then" statement "else" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 157
    "begin"      shift, and go to state 127
    "case"       shift, and go to state 158
    "goto"       shift, and go to state 159
    "if"         shift, and go to state 160
    "repeat"     shift, and go to state 161
    "while"      shift, and go to state 162
    "for"        shift, and go to state 163
    "with"       shift, and go to state 164

    $default  reduce using rule 165 (statement)

    label                  go to state 165
    variable_reference     go to state 166
    variable_identifier    go to state 167
    function_identifier    go to state 168
    procedure_identifier   go to state 169
    statement              go to state 384
    simple_statement       go to state 171
    assignment_statement   go to state 172
    procedure_statement    go to state 173
    goto_statement         go to state 174
    structured_statement   go to state 175
    compound_statement     go to state 176
    conditional_statement  go to state 178
    if_statement           go to state 179
    case_statement         go to state 180
    repetitive_statement   go to state 181
    repeat_statement       go to state 182
    while_statement        go to state 183
    for_statement          go to state 184
    with_statement         go to state 185


state 370

  203 for_statement: "for" control_variable ":=" initial_value "to" . final_value "do" statement

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 232
    simple_expression_term_operator_iterable  go to state 233
    expression                                go to state 385
    function_call                             go to state 235
    function_identifier                       go to state 236
    set_constructor                           go to state 237
    final_value                               go to state 386


state 371

  204 for_statement: "for" control_variable ":=" initial_value "downto" . final_value "do" statement

    DECIMAL_INT    shift, and go to state 216
    HEXADECIMAL    shift, and go to state 217
    REAL_DECIMAL   shift, and go to state 218
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 220
    "nil"          shift, and go to state 221
    "not"          shift, and go to state 222
    '+'            shift, and go to state 66
    '-'            shift, and go to state 67
    '@'            shift, and go to state 223
    '('            shift, and go to state 224
    '['            shift, and go to state 225

    sign                                      go to state 226
    variable_reference                        go to state 227
    variable_identifier                       go to state 167
    unsigned_constant                         go to state 228
    unsigned_number                           go to state 229
    factor                                    go to state 230
    term                                      go to state 231
    simple_expression                         go to state 232
    simple_expression_term_operator_iterable  go to state 233
    expression                                go to state 385
    function_call                             go to state 235
    function_identifier                       go to state 236
    set_constructor                           go to state 237
    final_value                               go to state 387


state 372

  112 expression_list: expression_list ',' expression .

    $default  reduce using rule 112 (expression_list)


state 373

  155 actual_parameter_iterable: actual_parameter_iterable ',' actual_parameter .

    $default  reduce using rule 155 (actual_parameter_iterable)


state 374

   89 variant_part: "case" IDENTIFIER ':' tag_field_type "of" variant_list .
   90 variant_list: variant_list . ';' variant

    ';'  shift, and go to state 358

    ';'       [reduce using rule 89 (variant_part)]
    $default  reduce using rule 89 (variant_part)


state 375

   90 variant_list: variant_list ';' variant .

    $default  reduce using rule 90 (variant_list)


state 376

   94 constant_list: constant_list ',' constant .

    $default  reduce using rule 94 (constant_list)


state 377

   92 variant: constant_list ':' '(' . ')'
   93        | constant_list ':' '(' . field_list ')'

    IDENTIFIER  shift, and go to state 21
    "case"      shift, and go to state 139
    ')'         shift, and go to state 388

    identifier_list    go to state 140
    field_list         go to state 389
    fixed_part         go to state 142
    field_declaration  go to state 143
    variant_part       go to state 144


state 378

  196 case: constant_list ':' statement .

    $default  reduce using rule 196 (case)


state 379

  193 case_statement: "case" expression "of" case_list ';' "end" .

    $default  reduce using rule 193 (case_statement)


state 380

  197 otherwise_clause: ';' "otherwise" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 157
    "begin"      shift, and go to state 127
    "case"       shift, and go to state 158
    "goto"       shift, and go to state 159
    "if"         shift, and go to state 160
    "repeat"     shift, and go to state 161
    "while"      shift, and go to state 162
    "for"        shift, and go to state 163
    "with"       shift, and go to state 164

    $default  reduce using rule 165 (statement)

    label                  go to state 165
    variable_reference     go to state 166
    variable_identifier    go to state 167
    function_identifier    go to state 168
    procedure_identifier   go to state 169
    statement              go to state 390
    simple_statement       go to state 171
    assignment_statement   go to state 172
    procedure_statement    go to state 173
    goto_statement         go to state 174
    structured_statement   go to state 175
    compound_statement     go to state 176
    conditional_statement  go to state 178
    if_statement           go to state 179
    case_statement         go to state 180
    repetitive_statement   go to state 181
    repeat_statement       go to state 182
    while_statement        go to state 183
    for_statement          go to state 184
    with_statement         go to state 185


state 381

  194 case_list: case_list ',' case .

    $default  reduce using rule 194 (case_list)


state 382

  191 case_statement: "case" expression "of" case_list otherwise_clause "end" .

    $default  reduce using rule 191 (case_statement)


state 383

  192 case_statement: "case" expression "of" case_list otherwise_clause ';' . "end"

    "end"  shift, and go to state 391


state 384

  189 if_statement: "if" expression "then" statement "else" statement .

    $default  reduce using rule 189 (if_statement)


state 385

  207 final_value: expression .

    $default  reduce using rule 207 (final_value)


state 386

  203 for_statement: "for" control_variable ":=" initial_value "to" final_value . "do" statement

    "do"  shift, and go to state 392


state 387

  204 for_statement: "for" control_variable ":=" initial_value "downto" final_value . "do" statement

    "do"  shift, and go to state 393


state 388

   92 variant: constant_list ':' '(' ')' .

    $default  reduce using rule 92 (variant)


state 389

   93 variant: constant_list ':' '(' field_list . ')'

    ')'  shift, and go to state 394


state 390

  197 otherwise_clause: ';' "otherwise" statement .

    $default  reduce using rule 197 (otherwise_clause)


state 391

  192 case_statement: "case" expression "of" case_list otherwise_clause ';' "end" .

    $default  reduce using rule 192 (case_statement)


state 392

  203 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 157
    "begin"      shift, and go to state 127
    "case"       shift, and go to state 158
    "goto"       shift, and go to state 159
    "if"         shift, and go to state 160
    "repeat"     shift, and go to state 161
    "while"      shift, and go to state 162
    "for"        shift, and go to state 163
    "with"       shift, and go to state 164

    $default  reduce using rule 165 (statement)

    label                  go to state 165
    variable_reference     go to state 166
    variable_identifier    go to state 167
    function_identifier    go to state 168
    procedure_identifier   go to state 169
    statement              go to state 395
    simple_statement       go to state 171
    assignment_statement   go to state 172
    procedure_statement    go to state 173
    goto_statement         go to state 174
    structured_statement   go to state 175
    compound_statement     go to state 176
    conditional_statement  go to state 178
    if_statement           go to state 179
    case_statement         go to state 180
    repetitive_statement   go to state 181
    repeat_statement       go to state 182
    while_statement        go to state 183
    for_statement          go to state 184
    with_statement         go to state 185


state 393

  204 for_statement: "for" control_variable ":=" initial_value "downto" final_value "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 157
    "begin"      shift, and go to state 127
    "case"       shift, and go to state 158
    "goto"       shift, and go to state 159
    "if"         shift, and go to state 160
    "repeat"     shift, and go to state 161
    "while"      shift, and go to state 162
    "for"        shift, and go to state 163
    "with"       shift, and go to state 164

    $default  reduce using rule 165 (statement)

    label                  go to state 165
    variable_reference     go to state 166
    variable_identifier    go to state 167
    function_identifier    go to state 168
    procedure_identifier   go to state 169
    statement              go to state 396
    simple_statement       go to state 171
    assignment_statement   go to state 172
    procedure_statement    go to state 173
    goto_statement         go to state 174
    structured_statement   go to state 175
    compound_statement     go to state 176
    conditional_statement  go to state 178
    if_statement           go to state 179
    case_statement         go to state 180
    repetitive_statement   go to state 181
    repeat_statement       go to state 182
    while_statement        go to state 183
    for_statement          go to state 184
    with_statement         go to state 185


state 394

   93 variant: constant_list ':' '(' field_list ')' .

    $default  reduce using rule 93 (variant)


state 395

  203 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" statement .

    $default  reduce using rule 203 (for_statement)


state 396

  204 for_statement: "for" control_variable ":=" initial_value "downto" final_value "do" statement .

    $default  reduce using rule 204 (for_statement)
