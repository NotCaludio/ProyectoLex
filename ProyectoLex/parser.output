Nonterminals useless in grammar

   file_buffer_symbol
   pointer_object_symbol
   result_type


Terminals unused in grammar

   ASSIGNMENT_PRECEDENCE
   "<>"
   "<="
   ">="
   POSITIVE
   NEGATIVE


Rules useless in grammar

  268 file_buffer_symbol: '^'

  269 pointer_object_symbol: '^'

  270 result_type: ordinal_type_identifier
  271            | real_type_identifier
  272            | pointer_type_identifier


State 324 conflicts: 1 shift/reduce
State 389 conflicts: 1 shift/reduce
State 398 conflicts: 1 shift/reduce


Grammar

    0 $accept: pascal $end

    1 pascal: program
    2       | regular_unit

    3 program: program_heading ';' block '.'
    4        | program_heading ';' uses_clause ';' block '.'

    5 program_heading: "program" IDENTIFIER
    6                | "program" IDENTIFIER '(' program_parameters ')'

    7 program_parameters: identifier_list

    8 uses_clause: "uses" identifier_list

    9 $@1: /* empty */

   10 $@2: /* empty */

   11 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part $@1 procedure_and_function_declaration_part $@2 statement_part

   12 label_declaration_part: "label" label_list ';'
   13                       | /* empty */

   14 label_list: label_list ',' label
   15           | label

   16 $@3: /* empty */

   17 label: DECIMAL_INT $@3

   18 constant_declaration_part: "const" constant_declaration_list
   19                          | /* empty */

   20 constant_declaration_list: constant_declaration_list constant_declaration
   21                          | constant_declaration

   22 constant_declaration: IDENTIFIER '=' constant ';'

   23 $@4: /* empty */

   24 constant: constant_identifier $@4
   25         | sign constant_identifier
   26         | signed_number
   27         | QUOTED_STRING
   28         | QUOTED_CHAR

   29 constant_identifier: IDENTIFIER

   30 type_declaration_part: "type" type_declaration_list
   31                      | /* empty */

   32 type_declaration_list: type_declaration_list type_declaration
   33                      | type_declaration

   34 type_declaration: IDENTIFIER '=' type ';'

   35 variable_declaration_part: "var" variable_declaration_list
   36                          | /* empty */

   37 variable_declaration_list: variable_declaration_list variable_declaration
   38                          | variable_declaration

   39 variable_declaration: identifier_list ':' type ';'

   40 procedure_and_function_declaration_part: procedure_and_function_declaration_list
   41                                        | /* empty */

   42 procedure_and_function_declaration_list: procedure_and_function_declaration_list procedure_and_function_declaration
   43                                        | procedure_and_function_declaration

   44 procedure_and_function_declaration: procedure_declaration
   45                                   | function_declaration

   46 statement_part: compound_statement
   47               | /* empty */

   48 sign: '+'
   49     | '-'

   50 identifier_list: identifier_list ',' IDENTIFIER
   51                | IDENTIFIER

   52 type: simple_type
   53     | structured_type
   54     | pointer_type
   55     | IDENTIFIER

   56 simple_type: ordinal_type
   57            | real_type
   58            | string_type

   59 ordinal_type: subrange_type
   60             | enumerated_type
   61             | ordinal_type_identifier

   62 ordinal_type_identifier: "integer"
   63                        | "longint"
   64                        | "char"
   65                        | "boolean"
   66                        | function_call
   67                        | "word"

   68 type_boolean: "true"
   69             | "false"

   70 enumerated_type: '(' identifier_list ')'

   71 subrange_type: constant ".." constant

   72 real_type: real_type_identifier

   73 real_type_identifier: "real"

   74 string_type: "string" '[' DECIMAL_INT ']'

   75 structured_type: "packed" type_list
   76                | type_list

   77 type_list: array_type
   78          | set_type
   79          | file_type
   80          | record_type

   81 array_type: "array" '[' index_type_list ']' "of" type

   82 index_type_list: index_type_list ',' ordinal_type
   83                | ordinal_type

   84 record_type: "record" "end"
   85            | "record" field_list "end"

   86 field_list: fixed_part
   87           | fixed_part ';'
   88           | fixed_part ';' variant_part
   89           | fixed_part ';' variant_part ';'
   90           | variant_part
   91           | variant_part ';'

   92 fixed_part: fixed_part ';' field_declaration
   93           | field_declaration

   94 field_declaration: identifier_list ':' type

   95 variant_part: "case" tag_field_type "of" variant_list
   96             | "case" IDENTIFIER ':' tag_field_type "of" variant_list

   97 variant_list: variant_list ';' variant
   98             | variant

   99 variant: constant_list ':' '(' ')'
  100        | constant_list ':' '(' field_list ')'

  101 constant_list: constant_list ',' constant
  102              | constant

  103 tag_field_type: IDENTIFIER

  104 set_type: "set" "of" ordinal_type

  105 file_type: "file"
  106          | "of" type

  107 pointer_type: '^' base_type
  108             | pointer_type_identifier

  109 pointer_type_identifier: "nil"

  110 base_type: "integer"
  111          | "longint"
  112          | "char"
  113          | "boolean"
  114          | "string"
  115          | "record"
  116          | "file"
  117          | "array"
  118          | IDENTIFIER
  119          | "function"

  120 variable_reference: variable_identifier qualifier_list

  121 variable_identifier: IDENTIFIER

  122 qualifier_list: qualifier_list qualifier
  123               | qualifier

  124 qualifier: index
  125          | field_designator
  126          | '^'

  127 index: '[' expression_list ']'

  128 expression_list: expression_list ',' expression
  129                | expression

  130 field_designator: '.' IDENTIFIER

  131 unsigned_constant: unsigned_number
  132                  | QUOTED_STRING
  133                  | QUOTED_CHAR
  134                  | "nil"

  135 unsigned_number: DECIMAL_INT
  136                | HEXADECIMAL
  137                | REAL_DECIMAL

  138 signed_number: sign unsigned_number
  139              | unsigned_number

  140 factor: variable_reference
  141       | '@' variable_reference
  142       | unsigned_constant
  143       | function_call
  144       | set_constructor
  145       | '(' expression ')'
  146       | "not" factor
  147       | IDENTIFIER
  148       | type_boolean

  149 term: term term_operator_list factor
  150     | factor

  151 term_operator_list: '*'
  152                   | '/'
  153                   | "div"
  154                   | "mod"
  155                   | "and"

  156 simple_expression: sign simple_expression_term_operator_iterable
  157                  | simple_expression_term_operator_iterable

  158 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list term
  159                                         | term

  160 simple_expression_term_operator_list: '+'
  161                                     | '-'
  162                                     | "or"

  163 expression: simple_expression
  164           | simple_expression relational_operator simple_expression

  165 relational_operator: '='
  166                    | '<'
  167                    | '>'
  168                    | LE
  169                    | RE
  170                    | NOTEQUAL
  171                    | "in"

  172 function_call: function_identifier actual_parameter_list

  173 function_identifier: "function"
  174                    | IDENTIFIER

  175 actual_parameter_list: '(' actual_parameter_iterable ')'
  176                      | '(' ')'
  177                      | '(' actual_parameter_iterable ':' type ')'

  178 actual_parameter_iterable: actual_parameter_iterable ',' actual_parameter
  179                          | actual_parameter

  180 actual_parameter: expression
  181                 | procedure_identifier

  182 procedure_identifier: "write"
  183                     | "writeln"
  184                     | "read"
  185                     | "readln"

  186 set_constructor: '[' ']'
  187                | '[' member_group_list ']'

  188 member_group_list: member_group_list ',' member_group
  189                  | member_group

  190 member_group: expression
  191             | expression ".." expression

  192 statement: /* empty */
  193          | label ':'
  194          | label ':' simple_statement
  195          | label ':' structured_statement
  196          | simple_statement
  197          | structured_statement
  198          | IDENTIFIER

  199 simple_statement: assignment_statement
  200                 | procedure_statement
  201                 | goto_statement

  202 assignment_statement: variable_reference ":=" expression
  203                     | function_identifier ":=" expression

  204 procedure_statement: procedure_identifier
  205                    | procedure_identifier actual_parameter_list
  206                    | IDENTIFIER actual_parameter_list

  207 goto_statement: "goto" label

  208 structured_statement: compound_statement
  209                     | conditional_statement
  210                     | repetitive_statement
  211                     | with_statement

  212 compound_statement: "begin" statement_list "end"

  213 statement_list: statement_list ';' statement
  214               | statement

  215 conditional_statement: if_statement
  216                      | case_statement

  217 if_statement: "if" expression "then" statement
  218             | "if" expression "then" statement "else" statement

  219 case_statement: "case" expression "of" case_list "end"
  220               | "case" expression "of" case_list otherwise_clause "end"
  221               | "case" expression "of" case_list otherwise_clause ';' "end"
  222               | "case" expression "of" case_list ';' "end"

  223 case_list: case_list ';' case
  224          | case

  225 case: constant_list ':' statement

  226 otherwise_clause: ';' "otherwise" statement

  227 repetitive_statement: repeat_statement
  228                     | while_statement
  229                     | for_statement

  230 repeat_statement: "repeat" statement_list "until" expression

  231 while_statement: "while" expression "do" statement

  232 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" statement
  233              | "for" control_variable ":=" initial_value "downto" final_value "do" statement

  234 control_variable: IDENTIFIER

  235 initial_value: expression

  236 final_value: expression

  237 with_statement: "with" record_variable_reference_list "do" statement

  238 record_variable_reference_list: record_variable_reference_list ',' variable_reference
  239                               | variable_reference

  240 procedure_declaration: procedure_heading ';' procedure_body ';'

  241 procedure_body: block
  242               | "forward"
  243               | "external"

  244 procedure_heading: "procedure" IDENTIFIER
  245                  | "procedure" IDENTIFIER formal_parameter_list

  246 function_declaration: function_heading ';' function_body ';'

  247 function_body: block
  248              | "forward"
  249              | "external"

  250 function_heading: "function" IDENTIFIER ':' type
  251                 | "function" IDENTIFIER formal_parameter_list ':' type

  252 formal_parameter_list: '(' formal_parameter_list_iterable ')'
  253                      | '(' ')'

  254 formal_parameter_list_iterable: formal_parameter_list_iterable ';' formal_parameter_list_iterable_list
  255                               | formal_parameter_list_iterable_list

  256 formal_parameter_list_iterable_list: parameter_declaration
  257                                    | procedure_heading
  258                                    | function_heading

  259 parameter_declaration: "var" identifier_list ':' type_identifier
  260                      | identifier_list ':' type_identifier

  261 type_identifier: type

  262 regular_unit: unit_heading ';' interface_part implementation_part "end" '.'

  263 unit_heading: "unit" IDENTIFIER

  264 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

  265 uses_clause_empty: uses_clause
  266                  | /* empty */

  267 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 70 99 100 145 175 176 177 252 253
')' (41) 6 70 99 100 145 175 176 177 252 253
'*' (42) 151
'+' (43) 48 160
',' (44) 14 50 82 101 128 178 188 238
'-' (45) 49 161
'.' (46) 3 4 130 262
'/' (47) 152
':' (58) 39 94 96 99 100 177 193 194 195 225 250 251 259 260
';' (59) 3 4 12 22 34 39 87 88 89 91 92 97 213 221 222 223 226 240
    246 254 262
'<' (60) 166
'=' (61) 22 34 165
'>' (62) 167
'@' (64) 141
'[' (91) 74 81 127 186 187
']' (93) 74 81 127 186 187
'^' (94) 107 126
error (256)
DECIMAL_INT (258) 17 74 135
HEXADECIMAL (259) 136
REAL_DECIMAL (260) 137
IDENTIFIER (261) 5 6 22 29 34 50 51 55 96 103 118 121 130 147 174 198
    206 234 244 245 250 251 263
QUOTED_STRING (262) 27 132
QUOTED_CHAR (263) 28 133
"program" (264) 5 6
"begin" (265) 212
"uses" (266) 8
"unit" (267) 263
"interface" (268) 264
"implementation" (269) 267
"label" (270) 12
"const" (271) 18
"type" (272) 30
"real" (273) 73
"integer" (274) 62 110
"longint" (275) 63 111
"word" (276) 67
"char" (277) 64 112
"boolean" (278) 65 113
"true" (279) 68
"false" (280) 69
"string" (281) 74 114
"packed" (282) 75
"array" (283) 81 117
"record" (284) 84 85 115
"end" (285) 84 85 212 219 220 221 222 262
"case" (286) 95 96 219 220 221 222
"otherwise" (287) 226
"of" (288) 81 95 96 104 106 219 220 221 222
"set" (289) 104
"var" (290) 35 259
"forward" (291) 242 248
"external" (292) 243 249
"function" (293) 119 173 250 251
"procedure" (294) 244 245
"file" (295) 105 116
"goto" (296) 207
"if" (297) 217 218
"then" (298) 217 218
"else" (299) 218
"repeat" (300) 230
"until" (301) 230
"while" (302) 231
"do" (303) 231 232 233 237
"for" (304) 232 233
"to" (305) 232
"downto" (306) 233
"with" (307) 237
"nil" (308) 109 134
"read" (309) 184
"readln" (310) 185
"write" (311) 182
"writeln" (312) 183
"in" (313) 171
"or" (314) 162
"div" (315) 153
"mod" (316) 154
"and" (317) 155
"not" (318) 146
ASSIGNMENT_PRECEDENCE (319)
":=" (320) 202 203 232 233
".." (321) 71 191
"<>" (322)
"<=" (323)
">=" (324)
RE (325) 169
LE (326) 168
NOTEQUAL (327) 170
POSITIVE (328)
NEGATIVE (329)


Nonterminals, with rules where they appear

$accept (92)
    on left: 0
pascal (93)
    on left: 1 2, on right: 0
program (94)
    on left: 3 4, on right: 1
program_heading (95)
    on left: 5 6, on right: 3 4
program_parameters (96)
    on left: 7, on right: 6
uses_clause (97)
    on left: 8, on right: 4 265
block (98)
    on left: 11, on right: 3 4 241 247
$@1 (99)
    on left: 9, on right: 11
$@2 (100)
    on left: 10, on right: 11
label_declaration_part (101)
    on left: 12 13, on right: 11
label_list (102)
    on left: 14 15, on right: 12 14
label (103)
    on left: 17, on right: 14 15 193 194 195 207
$@3 (104)
    on left: 16, on right: 17
constant_declaration_part (105)
    on left: 18 19, on right: 11 264 267
constant_declaration_list (106)
    on left: 20 21, on right: 18 20
constant_declaration (107)
    on left: 22, on right: 20 21
constant (108)
    on left: 24 25 26 27 28, on right: 22 71 101 102
$@4 (109)
    on left: 23, on right: 24
constant_identifier (110)
    on left: 29, on right: 24 25
type_declaration_part (111)
    on left: 30 31, on right: 11 264 267
type_declaration_list (112)
    on left: 32 33, on right: 30 32
type_declaration (113)
    on left: 34, on right: 32 33
variable_declaration_part (114)
    on left: 35 36, on right: 11 264 267
variable_declaration_list (115)
    on left: 37 38, on right: 35 37
variable_declaration (116)
    on left: 39, on right: 37 38
procedure_and_function_declaration_part (117)
    on left: 40 41, on right: 11 264 267
procedure_and_function_declaration_list (118)
    on left: 42 43, on right: 40 42
procedure_and_function_declaration (119)
    on left: 44 45, on right: 42 43
statement_part (120)
    on left: 46 47, on right: 11
sign (121)
    on left: 48 49, on right: 25 138 156
identifier_list (122)
    on left: 50 51, on right: 7 8 39 50 70 94 259 260
type (123)
    on left: 52 53 54 55, on right: 34 39 81 94 106 177 250 251 261
simple_type (124)
    on left: 56 57 58, on right: 52
ordinal_type (125)
    on left: 59 60 61, on right: 56 82 83 104
ordinal_type_identifier (126)
    on left: 62 63 64 65 66 67, on right: 61
type_boolean (127)
    on left: 68 69, on right: 148
enumerated_type (128)
    on left: 70, on right: 60
subrange_type (129)
    on left: 71, on right: 59
real_type (130)
    on left: 72, on right: 57
real_type_identifier (131)
    on left: 73, on right: 72
string_type (132)
    on left: 74, on right: 58
structured_type (133)
    on left: 75 76, on right: 53
type_list (134)
    on left: 77 78 79 80, on right: 75 76
array_type (135)
    on left: 81, on right: 77
index_type_list (136)
    on left: 82 83, on right: 81 82
record_type (137)
    on left: 84 85, on right: 80
field_list (138)
    on left: 86 87 88 89 90 91, on right: 85 100
fixed_part (139)
    on left: 92 93, on right: 86 87 88 89 92
field_declaration (140)
    on left: 94, on right: 92 93
variant_part (141)
    on left: 95 96, on right: 88 89 90 91
variant_list (142)
    on left: 97 98, on right: 95 96 97
variant (143)
    on left: 99 100, on right: 97 98
constant_list (144)
    on left: 101 102, on right: 99 100 101 225
tag_field_type (145)
    on left: 103, on right: 95 96
set_type (146)
    on left: 104, on right: 78
file_type (147)
    on left: 105 106, on right: 79
pointer_type (148)
    on left: 107 108, on right: 54
pointer_type_identifier (149)
    on left: 109, on right: 108
base_type (150)
    on left: 110 111 112 113 114 115 116 117 118 119, on right: 107
variable_reference (151)
    on left: 120, on right: 140 141 202 238 239
variable_identifier (152)
    on left: 121, on right: 120
qualifier_list (153)
    on left: 122 123, on right: 120 122
qualifier (154)
    on left: 124 125 126, on right: 122 123
index (155)
    on left: 127, on right: 124
expression_list (156)
    on left: 128 129, on right: 127 128
field_designator (157)
    on left: 130, on right: 125
unsigned_constant (158)
    on left: 131 132 133 134, on right: 142
unsigned_number (159)
    on left: 135 136 137, on right: 131 138 139
signed_number (160)
    on left: 138 139, on right: 26
factor (161)
    on left: 140 141 142 143 144 145 146 147 148, on right: 146 149
    150
term (162)
    on left: 149 150, on right: 149 158 159
term_operator_list (163)
    on left: 151 152 153 154 155, on right: 149
simple_expression (164)
    on left: 156 157, on right: 163 164
simple_expression_term_operator_iterable (165)
    on left: 158 159, on right: 156 157 158
simple_expression_term_operator_list (166)
    on left: 160 161 162, on right: 158
expression (167)
    on left: 163 164, on right: 128 129 145 180 190 191 202 203 217
    218 219 220 221 222 230 231 235 236
relational_operator (168)
    on left: 165 166 167 168 169 170 171, on right: 164
function_call (169)
    on left: 172, on right: 66 143
function_identifier (170)
    on left: 173 174, on right: 172 203
actual_parameter_list (171)
    on left: 175 176 177, on right: 172 205 206
actual_parameter_iterable (172)
    on left: 178 179, on right: 175 177 178
actual_parameter (173)
    on left: 180 181, on right: 178 179
procedure_identifier (174)
    on left: 182 183 184 185, on right: 181 204 205
set_constructor (175)
    on left: 186 187, on right: 144
member_group_list (176)
    on left: 188 189, on right: 187 188
member_group (177)
    on left: 190 191, on right: 188 189
statement (178)
    on left: 192 193 194 195 196 197 198, on right: 213 214 217 218
    225 226 231 232 233 237
simple_statement (179)
    on left: 199 200 201, on right: 194 196
assignment_statement (180)
    on left: 202 203, on right: 199
procedure_statement (181)
    on left: 204 205 206, on right: 200
goto_statement (182)
    on left: 207, on right: 201
structured_statement (183)
    on left: 208 209 210 211, on right: 195 197
compound_statement (184)
    on left: 212, on right: 46 208
statement_list (185)
    on left: 213 214, on right: 212 213 230
conditional_statement (186)
    on left: 215 216, on right: 209
if_statement (187)
    on left: 217 218, on right: 215
case_statement (188)
    on left: 219 220 221 222, on right: 216
case_list (189)
    on left: 223 224, on right: 219 220 221 222 223
case (190)
    on left: 225, on right: 223 224
otherwise_clause (191)
    on left: 226, on right: 220 221
repetitive_statement (192)
    on left: 227 228 229, on right: 210
repeat_statement (193)
    on left: 230, on right: 227
while_statement (194)
    on left: 231, on right: 228
for_statement (195)
    on left: 232 233, on right: 229
control_variable (196)
    on left: 234, on right: 232 233
initial_value (197)
    on left: 235, on right: 232 233
final_value (198)
    on left: 236, on right: 232 233
with_statement (199)
    on left: 237, on right: 211
record_variable_reference_list (200)
    on left: 238 239, on right: 237 238
procedure_declaration (201)
    on left: 240, on right: 44
procedure_body (202)
    on left: 241 242 243, on right: 240
procedure_heading (203)
    on left: 244 245, on right: 240 257
function_declaration (204)
    on left: 246, on right: 45
function_body (205)
    on left: 247 248 249, on right: 246
function_heading (206)
    on left: 250 251, on right: 246 258
formal_parameter_list (207)
    on left: 252 253, on right: 245 251
formal_parameter_list_iterable (208)
    on left: 254 255, on right: 252 254
formal_parameter_list_iterable_list (209)
    on left: 256 257 258, on right: 254 255
parameter_declaration (210)
    on left: 259 260, on right: 256
type_identifier (211)
    on left: 261, on right: 259 260
regular_unit (212)
    on left: 262, on right: 2
unit_heading (213)
    on left: 263, on right: 262
interface_part (214)
    on left: 264, on right: 262
uses_clause_empty (215)
    on left: 265 266, on right: 264
implementation_part (216)
    on left: 267, on right: 262


state 0

    0 $accept: . pascal $end

    "program"  shift, and go to state 1
    "unit"     shift, and go to state 2

    pascal           go to state 3
    program          go to state 4
    program_heading  go to state 5
    regular_unit     go to state 6
    unit_heading     go to state 7


state 1

    5 program_heading: "program" . IDENTIFIER
    6                | "program" . IDENTIFIER '(' program_parameters ')'

    IDENTIFIER  shift, and go to state 8


state 2

  263 unit_heading: "unit" . IDENTIFIER

    IDENTIFIER  shift, and go to state 9


state 3

    0 $accept: pascal . $end

    $end  shift, and go to state 10


state 4

    1 pascal: program .

    $default  reduce using rule 1 (pascal)


state 5

    3 program: program_heading . ';' block '.'
    4        | program_heading . ';' uses_clause ';' block '.'

    ';'  shift, and go to state 11


state 6

    2 pascal: regular_unit .

    $default  reduce using rule 2 (pascal)


state 7

  262 regular_unit: unit_heading . ';' interface_part implementation_part "end" '.'

    ';'  shift, and go to state 12


state 8

    5 program_heading: "program" IDENTIFIER .
    6                | "program" IDENTIFIER . '(' program_parameters ')'

    '('  shift, and go to state 13

    $default  reduce using rule 5 (program_heading)


state 9

  263 unit_heading: "unit" IDENTIFIER .

    $default  reduce using rule 263 (unit_heading)


state 10

    0 $accept: pascal $end .

    $default  accept


state 11

    3 program: program_heading ';' . block '.'
    4        | program_heading ';' . uses_clause ';' block '.'

    "uses"   shift, and go to state 14
    "label"  shift, and go to state 15

    $default  reduce using rule 13 (label_declaration_part)

    uses_clause             go to state 16
    block                   go to state 17
    label_declaration_part  go to state 18


state 12

  262 regular_unit: unit_heading ';' . interface_part implementation_part "end" '.'

    "interface"  shift, and go to state 19

    interface_part  go to state 20


state 13

    6 program_heading: "program" IDENTIFIER '(' . program_parameters ')'

    IDENTIFIER  shift, and go to state 21

    program_parameters  go to state 22
    identifier_list     go to state 23


state 14

    8 uses_clause: "uses" . identifier_list

    IDENTIFIER  shift, and go to state 21

    identifier_list  go to state 24


state 15

   12 label_declaration_part: "label" . label_list ';'

    DECIMAL_INT  shift, and go to state 25

    label_list  go to state 26
    label       go to state 27


state 16

    4 program: program_heading ';' uses_clause . ';' block '.'

    ';'  shift, and go to state 28


state 17

    3 program: program_heading ';' block . '.'

    '.'  shift, and go to state 29


state 18

   11 block: label_declaration_part . constant_declaration_part type_declaration_part variable_declaration_part $@1 procedure_and_function_declaration_part $@2 statement_part

    "const"  shift, and go to state 30

    $default  reduce using rule 19 (constant_declaration_part)

    constant_declaration_part  go to state 31


state 19

  264 interface_part: "interface" . uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "uses"  shift, and go to state 14

    $default  reduce using rule 266 (uses_clause_empty)

    uses_clause        go to state 32
    uses_clause_empty  go to state 33


state 20

  262 regular_unit: unit_heading ';' interface_part . implementation_part "end" '.'

    "implementation"  shift, and go to state 34

    implementation_part  go to state 35


state 21

   51 identifier_list: IDENTIFIER .

    $default  reduce using rule 51 (identifier_list)


state 22

    6 program_heading: "program" IDENTIFIER '(' program_parameters . ')'

    ')'  shift, and go to state 36


state 23

    7 program_parameters: identifier_list .
   50 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 37

    $default  reduce using rule 7 (program_parameters)


state 24

    8 uses_clause: "uses" identifier_list .
   50 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 37

    $default  reduce using rule 8 (uses_clause)


state 25

   17 label: DECIMAL_INT . $@3

    $default  reduce using rule 16 ($@3)

    $@3  go to state 38


state 26

   12 label_declaration_part: "label" label_list . ';'
   14 label_list: label_list . ',' label

    ';'  shift, and go to state 39
    ','  shift, and go to state 40


state 27

   15 label_list: label .

    $default  reduce using rule 15 (label_list)


state 28

    4 program: program_heading ';' uses_clause ';' . block '.'

    "label"  shift, and go to state 15

    $default  reduce using rule 13 (label_declaration_part)

    block                   go to state 41
    label_declaration_part  go to state 18


state 29

    3 program: program_heading ';' block '.' .

    $default  reduce using rule 3 (program)


state 30

   18 constant_declaration_part: "const" . constant_declaration_list

    IDENTIFIER  shift, and go to state 42

    constant_declaration_list  go to state 43
    constant_declaration       go to state 44


state 31

   11 block: label_declaration_part constant_declaration_part . type_declaration_part variable_declaration_part $@1 procedure_and_function_declaration_part $@2 statement_part

    "type"  shift, and go to state 45

    $default  reduce using rule 31 (type_declaration_part)

    type_declaration_part  go to state 46


state 32

  265 uses_clause_empty: uses_clause .

    $default  reduce using rule 265 (uses_clause_empty)


state 33

  264 interface_part: "interface" uses_clause_empty . constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "const"  shift, and go to state 30

    $default  reduce using rule 19 (constant_declaration_part)

    constant_declaration_part  go to state 47


state 34

  267 implementation_part: "implementation" . constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "const"  shift, and go to state 30

    $default  reduce using rule 19 (constant_declaration_part)

    constant_declaration_part  go to state 48


state 35

  262 regular_unit: unit_heading ';' interface_part implementation_part . "end" '.'

    "end"  shift, and go to state 49


state 36

    6 program_heading: "program" IDENTIFIER '(' program_parameters ')' .

    $default  reduce using rule 6 (program_heading)


state 37

   50 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 50


state 38

   17 label: DECIMAL_INT $@3 .

    $default  reduce using rule 17 (label)


state 39

   12 label_declaration_part: "label" label_list ';' .

    $default  reduce using rule 12 (label_declaration_part)


state 40

   14 label_list: label_list ',' . label

    DECIMAL_INT  shift, and go to state 25

    label  go to state 51


state 41

    4 program: program_heading ';' uses_clause ';' block . '.'

    '.'  shift, and go to state 52


state 42

   22 constant_declaration: IDENTIFIER . '=' constant ';'

    '='  shift, and go to state 53


state 43

   18 constant_declaration_part: "const" constant_declaration_list .
   20 constant_declaration_list: constant_declaration_list . constant_declaration

    IDENTIFIER  shift, and go to state 42

    $default  reduce using rule 18 (constant_declaration_part)

    constant_declaration  go to state 54


state 44

   21 constant_declaration_list: constant_declaration .

    $default  reduce using rule 21 (constant_declaration_list)


state 45

   30 type_declaration_part: "type" . type_declaration_list

    IDENTIFIER  shift, and go to state 55

    type_declaration_list  go to state 56
    type_declaration       go to state 57


state 46

   11 block: label_declaration_part constant_declaration_part type_declaration_part . variable_declaration_part $@1 procedure_and_function_declaration_part $@2 statement_part

    "var"  shift, and go to state 58

    $default  reduce using rule 36 (variable_declaration_part)

    variable_declaration_part  go to state 59


state 47

  264 interface_part: "interface" uses_clause_empty constant_declaration_part . type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "type"  shift, and go to state 45

    $default  reduce using rule 31 (type_declaration_part)

    type_declaration_part  go to state 60


state 48

  267 implementation_part: "implementation" constant_declaration_part . type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "type"  shift, and go to state 45

    $default  reduce using rule 31 (type_declaration_part)

    type_declaration_part  go to state 61


state 49

  262 regular_unit: unit_heading ';' interface_part implementation_part "end" . '.'

    '.'  shift, and go to state 62


state 50

   50 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 50 (identifier_list)


state 51

   14 label_list: label_list ',' label .

    $default  reduce using rule 14 (label_list)


state 52

    4 program: program_heading ';' uses_clause ';' block '.' .

    $default  reduce using rule 4 (program)


state 53

   22 constant_declaration: IDENTIFIER '=' . constant ';'

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 66
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70

    constant             go to state 71
    constant_identifier  go to state 72
    sign                 go to state 73
    unsigned_number      go to state 74
    signed_number        go to state 75


state 54

   20 constant_declaration_list: constant_declaration_list constant_declaration .

    $default  reduce using rule 20 (constant_declaration_list)


state 55

   34 type_declaration: IDENTIFIER . '=' type ';'

    '='  shift, and go to state 76


state 56

   30 type_declaration_part: "type" type_declaration_list .
   32 type_declaration_list: type_declaration_list . type_declaration

    IDENTIFIER  shift, and go to state 55

    $default  reduce using rule 30 (type_declaration_part)

    type_declaration  go to state 77


state 57

   33 type_declaration_list: type_declaration .

    $default  reduce using rule 33 (type_declaration_list)


state 58

   35 variable_declaration_part: "var" . variable_declaration_list

    IDENTIFIER  shift, and go to state 21

    variable_declaration_list  go to state 78
    variable_declaration       go to state 79
    identifier_list            go to state 80


state 59

   11 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part . $@1 procedure_and_function_declaration_part $@2 statement_part

    $default  reduce using rule 9 ($@1)

    $@1  go to state 81


state 60

  264 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part . variable_declaration_part procedure_and_function_declaration_part

    "var"  shift, and go to state 58

    $default  reduce using rule 36 (variable_declaration_part)

    variable_declaration_part  go to state 82


state 61

  267 implementation_part: "implementation" constant_declaration_part type_declaration_part . variable_declaration_part procedure_and_function_declaration_part

    "var"  shift, and go to state 58

    $default  reduce using rule 36 (variable_declaration_part)

    variable_declaration_part  go to state 83


state 62

  262 regular_unit: unit_heading ';' interface_part implementation_part "end" '.' .

    $default  reduce using rule 262 (regular_unit)


state 63

  135 unsigned_number: DECIMAL_INT .

    $default  reduce using rule 135 (unsigned_number)


state 64

  136 unsigned_number: HEXADECIMAL .

    $default  reduce using rule 136 (unsigned_number)


state 65

  137 unsigned_number: REAL_DECIMAL .

    $default  reduce using rule 137 (unsigned_number)


state 66

   29 constant_identifier: IDENTIFIER .

    $default  reduce using rule 29 (constant_identifier)


state 67

   27 constant: QUOTED_STRING .

    $default  reduce using rule 27 (constant)


state 68

   28 constant: QUOTED_CHAR .

    $default  reduce using rule 28 (constant)


state 69

   48 sign: '+' .

    $default  reduce using rule 48 (sign)


state 70

   49 sign: '-' .

    $default  reduce using rule 49 (sign)


state 71

   22 constant_declaration: IDENTIFIER '=' constant . ';'

    ';'  shift, and go to state 84


state 72

   24 constant: constant_identifier . $@4

    $default  reduce using rule 23 ($@4)

    $@4  go to state 85


state 73

   25 constant: sign . constant_identifier
  138 signed_number: sign . unsigned_number

    DECIMAL_INT   shift, and go to state 63
    HEXADECIMAL   shift, and go to state 64
    REAL_DECIMAL  shift, and go to state 65
    IDENTIFIER    shift, and go to state 66

    constant_identifier  go to state 86
    unsigned_number      go to state 87


state 74

  139 signed_number: unsigned_number .

    $default  reduce using rule 139 (signed_number)


state 75

   26 constant: signed_number .

    $default  reduce using rule 26 (constant)


state 76

   34 type_declaration: IDENTIFIER '=' . type ';'

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 88
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "real"         shift, and go to state 89
    "integer"      shift, and go to state 90
    "longint"      shift, and go to state 91
    "word"         shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "string"       shift, and go to state 95
    "packed"       shift, and go to state 96
    "array"        shift, and go to state 97
    "record"       shift, and go to state 98
    "of"           shift, and go to state 99
    "set"          shift, and go to state 100
    "function"     shift, and go to state 101
    "file"         shift, and go to state 102
    "nil"          shift, and go to state 103
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 104
    '^'            shift, and go to state 105

    constant                 go to state 106
    constant_identifier      go to state 72
    sign                     go to state 73
    type                     go to state 107
    simple_type              go to state 108
    ordinal_type             go to state 109
    ordinal_type_identifier  go to state 110
    enumerated_type          go to state 111
    subrange_type            go to state 112
    real_type                go to state 113
    real_type_identifier     go to state 114
    string_type              go to state 115
    structured_type          go to state 116
    type_list                go to state 117
    array_type               go to state 118
    record_type              go to state 119
    set_type                 go to state 120
    file_type                go to state 121
    pointer_type             go to state 122
    pointer_type_identifier  go to state 123
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 124
    function_identifier      go to state 125


state 77

   32 type_declaration_list: type_declaration_list type_declaration .

    $default  reduce using rule 32 (type_declaration_list)


state 78

   35 variable_declaration_part: "var" variable_declaration_list .
   37 variable_declaration_list: variable_declaration_list . variable_declaration

    IDENTIFIER  shift, and go to state 21

    $default  reduce using rule 35 (variable_declaration_part)

    variable_declaration  go to state 126
    identifier_list       go to state 80


state 79

   38 variable_declaration_list: variable_declaration .

    $default  reduce using rule 38 (variable_declaration_list)


state 80

   39 variable_declaration: identifier_list . ':' type ';'
   50 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 37
    ':'  shift, and go to state 127


state 81

   11 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part $@1 . procedure_and_function_declaration_part $@2 statement_part

    "function"   shift, and go to state 128
    "procedure"  shift, and go to state 129

    $default  reduce using rule 41 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 130
    procedure_and_function_declaration_list  go to state 131
    procedure_and_function_declaration       go to state 132
    procedure_declaration                    go to state 133
    procedure_heading                        go to state 134
    function_declaration                     go to state 135
    function_heading                         go to state 136


state 82

  264 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part . procedure_and_function_declaration_part

    "function"   shift, and go to state 128
    "procedure"  shift, and go to state 129

    $default  reduce using rule 41 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 137
    procedure_and_function_declaration_list  go to state 131
    procedure_and_function_declaration       go to state 132
    procedure_declaration                    go to state 133
    procedure_heading                        go to state 134
    function_declaration                     go to state 135
    function_heading                         go to state 136


state 83

  267 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part . procedure_and_function_declaration_part

    "function"   shift, and go to state 128
    "procedure"  shift, and go to state 129

    $default  reduce using rule 41 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 138
    procedure_and_function_declaration_list  go to state 131
    procedure_and_function_declaration       go to state 132
    procedure_declaration                    go to state 133
    procedure_heading                        go to state 134
    function_declaration                     go to state 135
    function_heading                         go to state 136


state 84

   22 constant_declaration: IDENTIFIER '=' constant ';' .

    $default  reduce using rule 22 (constant_declaration)


state 85

   24 constant: constant_identifier $@4 .

    $default  reduce using rule 24 (constant)


state 86

   25 constant: sign constant_identifier .

    $default  reduce using rule 25 (constant)


state 87

  138 signed_number: sign unsigned_number .

    $default  reduce using rule 138 (signed_number)


state 88

   29 constant_identifier: IDENTIFIER .
   55 type: IDENTIFIER .
  174 function_identifier: IDENTIFIER .

    ".."      reduce using rule 29 (constant_identifier)
    '('       reduce using rule 174 (function_identifier)
    $default  reduce using rule 55 (type)


state 89

   73 real_type_identifier: "real" .

    $default  reduce using rule 73 (real_type_identifier)


state 90

   62 ordinal_type_identifier: "integer" .

    $default  reduce using rule 62 (ordinal_type_identifier)


state 91

   63 ordinal_type_identifier: "longint" .

    $default  reduce using rule 63 (ordinal_type_identifier)


state 92

   67 ordinal_type_identifier: "word" .

    $default  reduce using rule 67 (ordinal_type_identifier)


state 93

   64 ordinal_type_identifier: "char" .

    $default  reduce using rule 64 (ordinal_type_identifier)


state 94

   65 ordinal_type_identifier: "boolean" .

    $default  reduce using rule 65 (ordinal_type_identifier)


state 95

   74 string_type: "string" . '[' DECIMAL_INT ']'

    '['  shift, and go to state 139


state 96

   75 structured_type: "packed" . type_list

    "array"   shift, and go to state 97
    "record"  shift, and go to state 98
    "of"      shift, and go to state 99
    "set"     shift, and go to state 100
    "file"    shift, and go to state 102

    type_list    go to state 140
    array_type   go to state 118
    record_type  go to state 119
    set_type     go to state 120
    file_type    go to state 121


state 97

   81 array_type: "array" . '[' index_type_list ']' "of" type

    '['  shift, and go to state 141


state 98

   84 record_type: "record" . "end"
   85            | "record" . field_list "end"

    IDENTIFIER  shift, and go to state 21
    "end"       shift, and go to state 142
    "case"      shift, and go to state 143

    identifier_list    go to state 144
    field_list         go to state 145
    fixed_part         go to state 146
    field_declaration  go to state 147
    variant_part       go to state 148


state 99

  106 file_type: "of" . type

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 88
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "real"         shift, and go to state 89
    "integer"      shift, and go to state 90
    "longint"      shift, and go to state 91
    "word"         shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "string"       shift, and go to state 95
    "packed"       shift, and go to state 96
    "array"        shift, and go to state 97
    "record"       shift, and go to state 98
    "of"           shift, and go to state 99
    "set"          shift, and go to state 100
    "function"     shift, and go to state 101
    "file"         shift, and go to state 102
    "nil"          shift, and go to state 103
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 104
    '^'            shift, and go to state 105

    constant                 go to state 106
    constant_identifier      go to state 72
    sign                     go to state 73
    type                     go to state 149
    simple_type              go to state 108
    ordinal_type             go to state 109
    ordinal_type_identifier  go to state 110
    enumerated_type          go to state 111
    subrange_type            go to state 112
    real_type                go to state 113
    real_type_identifier     go to state 114
    string_type              go to state 115
    structured_type          go to state 116
    type_list                go to state 117
    array_type               go to state 118
    record_type              go to state 119
    set_type                 go to state 120
    file_type                go to state 121
    pointer_type             go to state 122
    pointer_type_identifier  go to state 123
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 124
    function_identifier      go to state 125


state 100

  104 set_type: "set" . "of" ordinal_type

    "of"  shift, and go to state 150


state 101

  173 function_identifier: "function" .

    $default  reduce using rule 173 (function_identifier)


state 102

  105 file_type: "file" .

    $default  reduce using rule 105 (file_type)


state 103

  109 pointer_type_identifier: "nil" .

    $default  reduce using rule 109 (pointer_type_identifier)


state 104

   70 enumerated_type: '(' . identifier_list ')'

    IDENTIFIER  shift, and go to state 21

    identifier_list  go to state 151


state 105

  107 pointer_type: '^' . base_type

    IDENTIFIER  shift, and go to state 152
    "integer"   shift, and go to state 153
    "longint"   shift, and go to state 154
    "char"      shift, and go to state 155
    "boolean"   shift, and go to state 156
    "string"    shift, and go to state 157
    "array"     shift, and go to state 158
    "record"    shift, and go to state 159
    "function"  shift, and go to state 160
    "file"      shift, and go to state 161

    base_type  go to state 162


state 106

   71 subrange_type: constant . ".." constant

    ".."  shift, and go to state 163


state 107

   34 type_declaration: IDENTIFIER '=' type . ';'

    ';'  shift, and go to state 164


state 108

   52 type: simple_type .

    $default  reduce using rule 52 (type)


state 109

   56 simple_type: ordinal_type .

    $default  reduce using rule 56 (simple_type)


state 110

   61 ordinal_type: ordinal_type_identifier .

    $default  reduce using rule 61 (ordinal_type)


state 111

   60 ordinal_type: enumerated_type .

    $default  reduce using rule 60 (ordinal_type)


state 112

   59 ordinal_type: subrange_type .

    $default  reduce using rule 59 (ordinal_type)


state 113

   57 simple_type: real_type .

    $default  reduce using rule 57 (simple_type)


state 114

   72 real_type: real_type_identifier .

    $default  reduce using rule 72 (real_type)


state 115

   58 simple_type: string_type .

    $default  reduce using rule 58 (simple_type)


state 116

   53 type: structured_type .

    $default  reduce using rule 53 (type)


state 117

   76 structured_type: type_list .

    $default  reduce using rule 76 (structured_type)


state 118

   77 type_list: array_type .

    $default  reduce using rule 77 (type_list)


state 119

   80 type_list: record_type .

    $default  reduce using rule 80 (type_list)


state 120

   78 type_list: set_type .

    $default  reduce using rule 78 (type_list)


state 121

   79 type_list: file_type .

    $default  reduce using rule 79 (type_list)


state 122

   54 type: pointer_type .

    $default  reduce using rule 54 (type)


state 123

  108 pointer_type: pointer_type_identifier .

    $default  reduce using rule 108 (pointer_type)


state 124

   66 ordinal_type_identifier: function_call .

    $default  reduce using rule 66 (ordinal_type_identifier)


state 125

  172 function_call: function_identifier . actual_parameter_list

    '('  shift, and go to state 165

    actual_parameter_list  go to state 166


state 126

   37 variable_declaration_list: variable_declaration_list variable_declaration .

    $default  reduce using rule 37 (variable_declaration_list)


state 127

   39 variable_declaration: identifier_list ':' . type ';'

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 88
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "real"         shift, and go to state 89
    "integer"      shift, and go to state 90
    "longint"      shift, and go to state 91
    "word"         shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "string"       shift, and go to state 95
    "packed"       shift, and go to state 96
    "array"        shift, and go to state 97
    "record"       shift, and go to state 98
    "of"           shift, and go to state 99
    "set"          shift, and go to state 100
    "function"     shift, and go to state 101
    "file"         shift, and go to state 102
    "nil"          shift, and go to state 103
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 104
    '^'            shift, and go to state 105

    constant                 go to state 106
    constant_identifier      go to state 72
    sign                     go to state 73
    type                     go to state 167
    simple_type              go to state 108
    ordinal_type             go to state 109
    ordinal_type_identifier  go to state 110
    enumerated_type          go to state 111
    subrange_type            go to state 112
    real_type                go to state 113
    real_type_identifier     go to state 114
    string_type              go to state 115
    structured_type          go to state 116
    type_list                go to state 117
    array_type               go to state 118
    record_type              go to state 119
    set_type                 go to state 120
    file_type                go to state 121
    pointer_type             go to state 122
    pointer_type_identifier  go to state 123
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 124
    function_identifier      go to state 125


state 128

  250 function_heading: "function" . IDENTIFIER ':' type
  251                 | "function" . IDENTIFIER formal_parameter_list ':' type

    IDENTIFIER  shift, and go to state 168


state 129

  244 procedure_heading: "procedure" . IDENTIFIER
  245                  | "procedure" . IDENTIFIER formal_parameter_list

    IDENTIFIER  shift, and go to state 169


state 130

   11 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part $@1 procedure_and_function_declaration_part . $@2 statement_part

    $default  reduce using rule 10 ($@2)

    $@2  go to state 170


state 131

   40 procedure_and_function_declaration_part: procedure_and_function_declaration_list .
   42 procedure_and_function_declaration_list: procedure_and_function_declaration_list . procedure_and_function_declaration

    "function"   shift, and go to state 128
    "procedure"  shift, and go to state 129

    $default  reduce using rule 40 (procedure_and_function_declaration_part)

    procedure_and_function_declaration  go to state 171
    procedure_declaration               go to state 133
    procedure_heading                   go to state 134
    function_declaration                go to state 135
    function_heading                    go to state 136


state 132

   43 procedure_and_function_declaration_list: procedure_and_function_declaration .

    $default  reduce using rule 43 (procedure_and_function_declaration_list)


state 133

   44 procedure_and_function_declaration: procedure_declaration .

    $default  reduce using rule 44 (procedure_and_function_declaration)


state 134

  240 procedure_declaration: procedure_heading . ';' procedure_body ';'

    ';'  shift, and go to state 172


state 135

   45 procedure_and_function_declaration: function_declaration .

    $default  reduce using rule 45 (procedure_and_function_declaration)


state 136

  246 function_declaration: function_heading . ';' function_body ';'

    ';'  shift, and go to state 173


state 137

  264 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part .

    $default  reduce using rule 264 (interface_part)


state 138

  267 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part .

    $default  reduce using rule 267 (implementation_part)


state 139

   74 string_type: "string" '[' . DECIMAL_INT ']'

    DECIMAL_INT  shift, and go to state 174


state 140

   75 structured_type: "packed" type_list .

    $default  reduce using rule 75 (structured_type)


state 141

   81 array_type: "array" '[' . index_type_list ']' "of" type

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 175
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "integer"      shift, and go to state 90
    "longint"      shift, and go to state 91
    "word"         shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "function"     shift, and go to state 101
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 104

    constant                 go to state 106
    constant_identifier      go to state 72
    sign                     go to state 73
    ordinal_type             go to state 176
    ordinal_type_identifier  go to state 110
    enumerated_type          go to state 111
    subrange_type            go to state 112
    index_type_list          go to state 177
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 124
    function_identifier      go to state 125


state 142

   84 record_type: "record" "end" .

    $default  reduce using rule 84 (record_type)


state 143

   95 variant_part: "case" . tag_field_type "of" variant_list
   96             | "case" . IDENTIFIER ':' tag_field_type "of" variant_list

    IDENTIFIER  shift, and go to state 178

    tag_field_type  go to state 179


state 144

   50 identifier_list: identifier_list . ',' IDENTIFIER
   94 field_declaration: identifier_list . ':' type

    ','  shift, and go to state 37
    ':'  shift, and go to state 180


state 145

   85 record_type: "record" field_list . "end"

    "end"  shift, and go to state 181


state 146

   86 field_list: fixed_part .
   87           | fixed_part . ';'
   88           | fixed_part . ';' variant_part
   89           | fixed_part . ';' variant_part ';'
   92 fixed_part: fixed_part . ';' field_declaration

    ';'  shift, and go to state 182

    $default  reduce using rule 86 (field_list)


state 147

   93 fixed_part: field_declaration .

    $default  reduce using rule 93 (fixed_part)


state 148

   90 field_list: variant_part .
   91           | variant_part . ';'

    ';'  shift, and go to state 183

    $default  reduce using rule 90 (field_list)


state 149

  106 file_type: "of" type .

    $default  reduce using rule 106 (file_type)


state 150

  104 set_type: "set" "of" . ordinal_type

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 175
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "integer"      shift, and go to state 90
    "longint"      shift, and go to state 91
    "word"         shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "function"     shift, and go to state 101
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 104

    constant                 go to state 106
    constant_identifier      go to state 72
    sign                     go to state 73
    ordinal_type             go to state 184
    ordinal_type_identifier  go to state 110
    enumerated_type          go to state 111
    subrange_type            go to state 112
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 124
    function_identifier      go to state 125


state 151

   50 identifier_list: identifier_list . ',' IDENTIFIER
   70 enumerated_type: '(' identifier_list . ')'

    ')'  shift, and go to state 185
    ','  shift, and go to state 37


state 152

  118 base_type: IDENTIFIER .

    $default  reduce using rule 118 (base_type)


state 153

  110 base_type: "integer" .

    $default  reduce using rule 110 (base_type)


state 154

  111 base_type: "longint" .

    $default  reduce using rule 111 (base_type)


state 155

  112 base_type: "char" .

    $default  reduce using rule 112 (base_type)


state 156

  113 base_type: "boolean" .

    $default  reduce using rule 113 (base_type)


state 157

  114 base_type: "string" .

    $default  reduce using rule 114 (base_type)


state 158

  117 base_type: "array" .

    $default  reduce using rule 117 (base_type)


state 159

  115 base_type: "record" .

    $default  reduce using rule 115 (base_type)


state 160

  119 base_type: "function" .

    $default  reduce using rule 119 (base_type)


state 161

  116 base_type: "file" .

    $default  reduce using rule 116 (base_type)


state 162

  107 pointer_type: '^' base_type .

    $default  reduce using rule 107 (pointer_type)


state 163

   71 subrange_type: constant ".." . constant

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 66
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70

    constant             go to state 186
    constant_identifier  go to state 72
    sign                 go to state 73
    unsigned_number      go to state 74
    signed_number        go to state 75


state 164

   34 type_declaration: IDENTIFIER '=' type ';' .

    $default  reduce using rule 34 (type_declaration)


state 165

  175 actual_parameter_list: '(' . actual_parameter_iterable ')'
  176                      | '(' . ')'
  177                      | '(' . actual_parameter_iterable ':' type ')'

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "read"         shift, and go to state 193
    "readln"       shift, and go to state 194
    "write"        shift, and go to state 195
    "writeln"      shift, and go to state 196
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    ')'            shift, and go to state 200
    '['            shift, and go to state 201

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 210
    simple_expression_term_operator_iterable  go to state 211
    expression                                go to state 212
    function_call                             go to state 213
    function_identifier                       go to state 125
    actual_parameter_iterable                 go to state 214
    actual_parameter                          go to state 215
    procedure_identifier                      go to state 216
    set_constructor                           go to state 217


state 166

  172 function_call: function_identifier actual_parameter_list .

    $default  reduce using rule 172 (function_call)


state 167

   39 variable_declaration: identifier_list ':' type . ';'

    ';'  shift, and go to state 218


state 168

  250 function_heading: "function" IDENTIFIER . ':' type
  251                 | "function" IDENTIFIER . formal_parameter_list ':' type

    '('  shift, and go to state 219
    ':'  shift, and go to state 220

    formal_parameter_list  go to state 221


state 169

  244 procedure_heading: "procedure" IDENTIFIER .
  245                  | "procedure" IDENTIFIER . formal_parameter_list

    '('  shift, and go to state 219

    $default  reduce using rule 244 (procedure_heading)

    formal_parameter_list  go to state 222


state 170

   11 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part $@1 procedure_and_function_declaration_part $@2 . statement_part

    "begin"  shift, and go to state 223

    $default  reduce using rule 47 (statement_part)

    statement_part      go to state 224
    compound_statement  go to state 225


state 171

   42 procedure_and_function_declaration_list: procedure_and_function_declaration_list procedure_and_function_declaration .

    $default  reduce using rule 42 (procedure_and_function_declaration_list)


state 172

  240 procedure_declaration: procedure_heading ';' . procedure_body ';'

    "label"     shift, and go to state 15
    "forward"   shift, and go to state 226
    "external"  shift, and go to state 227

    $default  reduce using rule 13 (label_declaration_part)

    block                   go to state 228
    label_declaration_part  go to state 18
    procedure_body          go to state 229


state 173

  246 function_declaration: function_heading ';' . function_body ';'

    "label"     shift, and go to state 15
    "forward"   shift, and go to state 230
    "external"  shift, and go to state 231

    $default  reduce using rule 13 (label_declaration_part)

    block                   go to state 232
    label_declaration_part  go to state 18
    function_body           go to state 233


state 174

   74 string_type: "string" '[' DECIMAL_INT . ']'

    ']'  shift, and go to state 234


state 175

   29 constant_identifier: IDENTIFIER .
  174 function_identifier: IDENTIFIER .

    '('       reduce using rule 174 (function_identifier)
    $default  reduce using rule 29 (constant_identifier)


state 176

   83 index_type_list: ordinal_type .

    $default  reduce using rule 83 (index_type_list)


state 177

   81 array_type: "array" '[' index_type_list . ']' "of" type
   82 index_type_list: index_type_list . ',' ordinal_type

    ','  shift, and go to state 235
    ']'  shift, and go to state 236


state 178

   96 variant_part: "case" IDENTIFIER . ':' tag_field_type "of" variant_list
  103 tag_field_type: IDENTIFIER .

    ':'  shift, and go to state 237

    $default  reduce using rule 103 (tag_field_type)


state 179

   95 variant_part: "case" tag_field_type . "of" variant_list

    "of"  shift, and go to state 238


state 180

   94 field_declaration: identifier_list ':' . type

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 88
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "real"         shift, and go to state 89
    "integer"      shift, and go to state 90
    "longint"      shift, and go to state 91
    "word"         shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "string"       shift, and go to state 95
    "packed"       shift, and go to state 96
    "array"        shift, and go to state 97
    "record"       shift, and go to state 98
    "of"           shift, and go to state 99
    "set"          shift, and go to state 100
    "function"     shift, and go to state 101
    "file"         shift, and go to state 102
    "nil"          shift, and go to state 103
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 104
    '^'            shift, and go to state 105

    constant                 go to state 106
    constant_identifier      go to state 72
    sign                     go to state 73
    type                     go to state 239
    simple_type              go to state 108
    ordinal_type             go to state 109
    ordinal_type_identifier  go to state 110
    enumerated_type          go to state 111
    subrange_type            go to state 112
    real_type                go to state 113
    real_type_identifier     go to state 114
    string_type              go to state 115
    structured_type          go to state 116
    type_list                go to state 117
    array_type               go to state 118
    record_type              go to state 119
    set_type                 go to state 120
    file_type                go to state 121
    pointer_type             go to state 122
    pointer_type_identifier  go to state 123
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 124
    function_identifier      go to state 125


state 181

   85 record_type: "record" field_list "end" .

    $default  reduce using rule 85 (record_type)


state 182

   87 field_list: fixed_part ';' .
   88           | fixed_part ';' . variant_part
   89           | fixed_part ';' . variant_part ';'
   92 fixed_part: fixed_part ';' . field_declaration

    IDENTIFIER  shift, and go to state 21
    "case"      shift, and go to state 143

    $default  reduce using rule 87 (field_list)

    identifier_list    go to state 144
    field_declaration  go to state 240
    variant_part       go to state 241


state 183

   91 field_list: variant_part ';' .

    $default  reduce using rule 91 (field_list)


state 184

  104 set_type: "set" "of" ordinal_type .

    $default  reduce using rule 104 (set_type)


state 185

   70 enumerated_type: '(' identifier_list ')' .

    $default  reduce using rule 70 (enumerated_type)


state 186

   71 subrange_type: constant ".." constant .

    $default  reduce using rule 71 (subrange_type)


state 187

  121 variable_identifier: IDENTIFIER .
  147 factor: IDENTIFIER .
  174 function_identifier: IDENTIFIER .

    '.'       reduce using rule 121 (variable_identifier)
    '('       reduce using rule 174 (function_identifier)
    '['       reduce using rule 121 (variable_identifier)
    '^'       reduce using rule 121 (variable_identifier)
    $default  reduce using rule 147 (factor)


state 188

  132 unsigned_constant: QUOTED_STRING .

    $default  reduce using rule 132 (unsigned_constant)


state 189

  133 unsigned_constant: QUOTED_CHAR .

    $default  reduce using rule 133 (unsigned_constant)


state 190

   68 type_boolean: "true" .

    $default  reduce using rule 68 (type_boolean)


state 191

   69 type_boolean: "false" .

    $default  reduce using rule 69 (type_boolean)


state 192

  134 unsigned_constant: "nil" .

    $default  reduce using rule 134 (unsigned_constant)


state 193

  184 procedure_identifier: "read" .

    $default  reduce using rule 184 (procedure_identifier)


state 194

  185 procedure_identifier: "readln" .

    $default  reduce using rule 185 (procedure_identifier)


state 195

  182 procedure_identifier: "write" .

    $default  reduce using rule 182 (procedure_identifier)


state 196

  183 procedure_identifier: "writeln" .

    $default  reduce using rule 183 (procedure_identifier)


state 197

  146 factor: "not" . factor

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    type_boolean         go to state 203
    variable_reference   go to state 204
    variable_identifier  go to state 205
    unsigned_constant    go to state 206
    unsigned_number      go to state 207
    factor               go to state 242
    function_call        go to state 213
    function_identifier  go to state 125
    set_constructor      go to state 217


state 198

  141 factor: '@' . variable_reference

    IDENTIFIER  shift, and go to state 243

    variable_reference   go to state 244
    variable_identifier  go to state 205


state 199

  145 factor: '(' . expression ')'

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 210
    simple_expression_term_operator_iterable  go to state 211
    expression                                go to state 245
    function_call                             go to state 213
    function_identifier                       go to state 125
    set_constructor                           go to state 217


state 200

  176 actual_parameter_list: '(' ')' .

    $default  reduce using rule 176 (actual_parameter_list)


state 201

  186 set_constructor: '[' . ']'
  187                | '[' . member_group_list ']'

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201
    ']'            shift, and go to state 246

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 210
    simple_expression_term_operator_iterable  go to state 211
    expression                                go to state 247
    function_call                             go to state 213
    function_identifier                       go to state 125
    set_constructor                           go to state 217
    member_group_list                         go to state 248
    member_group                              go to state 249


state 202

  156 simple_expression: sign . simple_expression_term_operator_iterable

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression_term_operator_iterable  go to state 250
    function_call                             go to state 213
    function_identifier                       go to state 125
    set_constructor                           go to state 217


state 203

  148 factor: type_boolean .

    $default  reduce using rule 148 (factor)


state 204

  140 factor: variable_reference .

    $default  reduce using rule 140 (factor)


state 205

  120 variable_reference: variable_identifier . qualifier_list

    '.'  shift, and go to state 251
    '['  shift, and go to state 252
    '^'  shift, and go to state 253

    qualifier_list    go to state 254
    qualifier         go to state 255
    index             go to state 256
    field_designator  go to state 257


state 206

  142 factor: unsigned_constant .

    $default  reduce using rule 142 (factor)


state 207

  131 unsigned_constant: unsigned_number .

    $default  reduce using rule 131 (unsigned_constant)


state 208

  150 term: factor .

    $default  reduce using rule 150 (term)


state 209

  149 term: term . term_operator_list factor
  159 simple_expression_term_operator_iterable: term .

    "div"  shift, and go to state 258
    "mod"  shift, and go to state 259
    "and"  shift, and go to state 260
    '*'    shift, and go to state 261
    '/'    shift, and go to state 262

    $default  reduce using rule 159 (simple_expression_term_operator_iterable)

    term_operator_list  go to state 263


state 210

  163 expression: simple_expression .
  164           | simple_expression . relational_operator simple_expression

    "in"      shift, and go to state 264
    '='       shift, and go to state 265
    '<'       shift, and go to state 266
    '>'       shift, and go to state 267
    RE        shift, and go to state 268
    LE        shift, and go to state 269
    NOTEQUAL  shift, and go to state 270

    $default  reduce using rule 163 (expression)

    relational_operator  go to state 271


state 211

  157 simple_expression: simple_expression_term_operator_iterable .
  158 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable . simple_expression_term_operator_list term

    "or"  shift, and go to state 272
    '+'   shift, and go to state 273
    '-'   shift, and go to state 274

    $default  reduce using rule 157 (simple_expression)

    simple_expression_term_operator_list  go to state 275


state 212

  180 actual_parameter: expression .

    $default  reduce using rule 180 (actual_parameter)


state 213

  143 factor: function_call .

    $default  reduce using rule 143 (factor)


state 214

  175 actual_parameter_list: '(' actual_parameter_iterable . ')'
  177                      | '(' actual_parameter_iterable . ':' type ')'
  178 actual_parameter_iterable: actual_parameter_iterable . ',' actual_parameter

    ')'  shift, and go to state 276
    ','  shift, and go to state 277
    ':'  shift, and go to state 278


state 215

  179 actual_parameter_iterable: actual_parameter .

    $default  reduce using rule 179 (actual_parameter_iterable)


state 216

  181 actual_parameter: procedure_identifier .

    $default  reduce using rule 181 (actual_parameter)


state 217

  144 factor: set_constructor .

    $default  reduce using rule 144 (factor)


state 218

   39 variable_declaration: identifier_list ':' type ';' .

    $default  reduce using rule 39 (variable_declaration)


state 219

  252 formal_parameter_list: '(' . formal_parameter_list_iterable ')'
  253                      | '(' . ')'

    IDENTIFIER   shift, and go to state 21
    "var"        shift, and go to state 279
    "function"   shift, and go to state 128
    "procedure"  shift, and go to state 129
    ')'          shift, and go to state 280

    identifier_list                      go to state 281
    procedure_heading                    go to state 282
    function_heading                     go to state 283
    formal_parameter_list_iterable       go to state 284
    formal_parameter_list_iterable_list  go to state 285
    parameter_declaration                go to state 286


state 220

  250 function_heading: "function" IDENTIFIER ':' . type

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 88
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "real"         shift, and go to state 89
    "integer"      shift, and go to state 90
    "longint"      shift, and go to state 91
    "word"         shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "string"       shift, and go to state 95
    "packed"       shift, and go to state 96
    "array"        shift, and go to state 97
    "record"       shift, and go to state 98
    "of"           shift, and go to state 99
    "set"          shift, and go to state 100
    "function"     shift, and go to state 101
    "file"         shift, and go to state 102
    "nil"          shift, and go to state 103
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 104
    '^'            shift, and go to state 105

    constant                 go to state 106
    constant_identifier      go to state 72
    sign                     go to state 73
    type                     go to state 287
    simple_type              go to state 108
    ordinal_type             go to state 109
    ordinal_type_identifier  go to state 110
    enumerated_type          go to state 111
    subrange_type            go to state 112
    real_type                go to state 113
    real_type_identifier     go to state 114
    string_type              go to state 115
    structured_type          go to state 116
    type_list                go to state 117
    array_type               go to state 118
    record_type              go to state 119
    set_type                 go to state 120
    file_type                go to state 121
    pointer_type             go to state 122
    pointer_type_identifier  go to state 123
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 124
    function_identifier      go to state 125


state 221

  251 function_heading: "function" IDENTIFIER formal_parameter_list . ':' type

    ':'  shift, and go to state 288


state 222

  245 procedure_heading: "procedure" IDENTIFIER formal_parameter_list .

    $default  reduce using rule 245 (procedure_heading)


state 223

  212 compound_statement: "begin" . statement_list "end"

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 289
    "begin"      shift, and go to state 223
    "case"       shift, and go to state 290
    "function"   shift, and go to state 101
    "goto"       shift, and go to state 291
    "if"         shift, and go to state 292
    "repeat"     shift, and go to state 293
    "while"      shift, and go to state 294
    "for"        shift, and go to state 295
    "with"       shift, and go to state 296
    "read"       shift, and go to state 193
    "readln"     shift, and go to state 194
    "write"      shift, and go to state 195
    "writeln"    shift, and go to state 196

    $default  reduce using rule 192 (statement)

    label                  go to state 297
    variable_reference     go to state 298
    variable_identifier    go to state 205
    function_identifier    go to state 299
    procedure_identifier   go to state 300
    statement              go to state 301
    simple_statement       go to state 302
    assignment_statement   go to state 303
    procedure_statement    go to state 304
    goto_statement         go to state 305
    structured_statement   go to state 306
    compound_statement     go to state 307
    statement_list         go to state 308
    conditional_statement  go to state 309
    if_statement           go to state 310
    case_statement         go to state 311
    repetitive_statement   go to state 312
    repeat_statement       go to state 313
    while_statement        go to state 314
    for_statement          go to state 315
    with_statement         go to state 316


state 224

   11 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part $@1 procedure_and_function_declaration_part $@2 statement_part .

    $default  reduce using rule 11 (block)


state 225

   46 statement_part: compound_statement .

    $default  reduce using rule 46 (statement_part)


state 226

  242 procedure_body: "forward" .

    $default  reduce using rule 242 (procedure_body)


state 227

  243 procedure_body: "external" .

    $default  reduce using rule 243 (procedure_body)


state 228

  241 procedure_body: block .

    $default  reduce using rule 241 (procedure_body)


state 229

  240 procedure_declaration: procedure_heading ';' procedure_body . ';'

    ';'  shift, and go to state 317


state 230

  248 function_body: "forward" .

    $default  reduce using rule 248 (function_body)


state 231

  249 function_body: "external" .

    $default  reduce using rule 249 (function_body)


state 232

  247 function_body: block .

    $default  reduce using rule 247 (function_body)


state 233

  246 function_declaration: function_heading ';' function_body . ';'

    ';'  shift, and go to state 318


state 234

   74 string_type: "string" '[' DECIMAL_INT ']' .

    $default  reduce using rule 74 (string_type)


state 235

   82 index_type_list: index_type_list ',' . ordinal_type

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 175
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "integer"      shift, and go to state 90
    "longint"      shift, and go to state 91
    "word"         shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "function"     shift, and go to state 101
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 104

    constant                 go to state 106
    constant_identifier      go to state 72
    sign                     go to state 73
    ordinal_type             go to state 319
    ordinal_type_identifier  go to state 110
    enumerated_type          go to state 111
    subrange_type            go to state 112
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 124
    function_identifier      go to state 125


state 236

   81 array_type: "array" '[' index_type_list ']' . "of" type

    "of"  shift, and go to state 320


state 237

   96 variant_part: "case" IDENTIFIER ':' . tag_field_type "of" variant_list

    IDENTIFIER  shift, and go to state 321

    tag_field_type  go to state 322


state 238

   95 variant_part: "case" tag_field_type "of" . variant_list

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 66
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70

    constant             go to state 323
    constant_identifier  go to state 72
    sign                 go to state 73
    variant_list         go to state 324
    variant              go to state 325
    constant_list        go to state 326
    unsigned_number      go to state 74
    signed_number        go to state 75


state 239

   94 field_declaration: identifier_list ':' type .

    $default  reduce using rule 94 (field_declaration)


state 240

   92 fixed_part: fixed_part ';' field_declaration .

    $default  reduce using rule 92 (fixed_part)


state 241

   88 field_list: fixed_part ';' variant_part .
   89           | fixed_part ';' variant_part . ';'

    ';'  shift, and go to state 327

    $default  reduce using rule 88 (field_list)


state 242

  146 factor: "not" factor .

    $default  reduce using rule 146 (factor)


state 243

  121 variable_identifier: IDENTIFIER .

    $default  reduce using rule 121 (variable_identifier)


state 244

  141 factor: '@' variable_reference .

    $default  reduce using rule 141 (factor)


state 245

  145 factor: '(' expression . ')'

    ')'  shift, and go to state 328


state 246

  186 set_constructor: '[' ']' .

    $default  reduce using rule 186 (set_constructor)


state 247

  190 member_group: expression .
  191             | expression . ".." expression

    ".."  shift, and go to state 329

    $default  reduce using rule 190 (member_group)


state 248

  187 set_constructor: '[' member_group_list . ']'
  188 member_group_list: member_group_list . ',' member_group

    ','  shift, and go to state 330
    ']'  shift, and go to state 331


state 249

  189 member_group_list: member_group .

    $default  reduce using rule 189 (member_group_list)


state 250

  156 simple_expression: sign simple_expression_term_operator_iterable .
  158 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable . simple_expression_term_operator_list term

    "or"  shift, and go to state 272
    '+'   shift, and go to state 273
    '-'   shift, and go to state 274

    $default  reduce using rule 156 (simple_expression)

    simple_expression_term_operator_list  go to state 275


state 251

  130 field_designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 332


state 252

  127 index: '[' . expression_list ']'

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    expression_list                           go to state 333
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 210
    simple_expression_term_operator_iterable  go to state 211
    expression                                go to state 334
    function_call                             go to state 213
    function_identifier                       go to state 125
    set_constructor                           go to state 217


state 253

  126 qualifier: '^' .

    $default  reduce using rule 126 (qualifier)


state 254

  120 variable_reference: variable_identifier qualifier_list .
  122 qualifier_list: qualifier_list . qualifier

    '.'  shift, and go to state 251
    '['  shift, and go to state 252
    '^'  shift, and go to state 253

    $default  reduce using rule 120 (variable_reference)

    qualifier         go to state 335
    index             go to state 256
    field_designator  go to state 257


state 255

  123 qualifier_list: qualifier .

    $default  reduce using rule 123 (qualifier_list)


state 256

  124 qualifier: index .

    $default  reduce using rule 124 (qualifier)


state 257

  125 qualifier: field_designator .

    $default  reduce using rule 125 (qualifier)


state 258

  153 term_operator_list: "div" .

    $default  reduce using rule 153 (term_operator_list)


state 259

  154 term_operator_list: "mod" .

    $default  reduce using rule 154 (term_operator_list)


state 260

  155 term_operator_list: "and" .

    $default  reduce using rule 155 (term_operator_list)


state 261

  151 term_operator_list: '*' .

    $default  reduce using rule 151 (term_operator_list)


state 262

  152 term_operator_list: '/' .

    $default  reduce using rule 152 (term_operator_list)


state 263

  149 term: term term_operator_list . factor

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    type_boolean         go to state 203
    variable_reference   go to state 204
    variable_identifier  go to state 205
    unsigned_constant    go to state 206
    unsigned_number      go to state 207
    factor               go to state 336
    function_call        go to state 213
    function_identifier  go to state 125
    set_constructor      go to state 217


state 264

  171 relational_operator: "in" .

    $default  reduce using rule 171 (relational_operator)


state 265

  165 relational_operator: '=' .

    $default  reduce using rule 165 (relational_operator)


state 266

  166 relational_operator: '<' .

    $default  reduce using rule 166 (relational_operator)


state 267

  167 relational_operator: '>' .

    $default  reduce using rule 167 (relational_operator)


state 268

  169 relational_operator: RE .

    $default  reduce using rule 169 (relational_operator)


state 269

  168 relational_operator: LE .

    $default  reduce using rule 168 (relational_operator)


state 270

  170 relational_operator: NOTEQUAL .

    $default  reduce using rule 170 (relational_operator)


state 271

  164 expression: simple_expression relational_operator . simple_expression

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 337
    simple_expression_term_operator_iterable  go to state 211
    function_call                             go to state 213
    function_identifier                       go to state 125
    set_constructor                           go to state 217


state 272

  162 simple_expression_term_operator_list: "or" .

    $default  reduce using rule 162 (simple_expression_term_operator_list)


state 273

  160 simple_expression_term_operator_list: '+' .

    $default  reduce using rule 160 (simple_expression_term_operator_list)


state 274

  161 simple_expression_term_operator_list: '-' .

    $default  reduce using rule 161 (simple_expression_term_operator_list)


state 275

  158 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list . term

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    type_boolean         go to state 203
    variable_reference   go to state 204
    variable_identifier  go to state 205
    unsigned_constant    go to state 206
    unsigned_number      go to state 207
    factor               go to state 208
    term                 go to state 338
    function_call        go to state 213
    function_identifier  go to state 125
    set_constructor      go to state 217


state 276

  175 actual_parameter_list: '(' actual_parameter_iterable ')' .

    $default  reduce using rule 175 (actual_parameter_list)


state 277

  178 actual_parameter_iterable: actual_parameter_iterable ',' . actual_parameter

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "read"         shift, and go to state 193
    "readln"       shift, and go to state 194
    "write"        shift, and go to state 195
    "writeln"      shift, and go to state 196
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 210
    simple_expression_term_operator_iterable  go to state 211
    expression                                go to state 212
    function_call                             go to state 213
    function_identifier                       go to state 125
    actual_parameter                          go to state 339
    procedure_identifier                      go to state 216
    set_constructor                           go to state 217


state 278

  177 actual_parameter_list: '(' actual_parameter_iterable ':' . type ')'

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 88
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "real"         shift, and go to state 89
    "integer"      shift, and go to state 90
    "longint"      shift, and go to state 91
    "word"         shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "string"       shift, and go to state 95
    "packed"       shift, and go to state 96
    "array"        shift, and go to state 97
    "record"       shift, and go to state 98
    "of"           shift, and go to state 99
    "set"          shift, and go to state 100
    "function"     shift, and go to state 101
    "file"         shift, and go to state 102
    "nil"          shift, and go to state 103
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 104
    '^'            shift, and go to state 105

    constant                 go to state 106
    constant_identifier      go to state 72
    sign                     go to state 73
    type                     go to state 340
    simple_type              go to state 108
    ordinal_type             go to state 109
    ordinal_type_identifier  go to state 110
    enumerated_type          go to state 111
    subrange_type            go to state 112
    real_type                go to state 113
    real_type_identifier     go to state 114
    string_type              go to state 115
    structured_type          go to state 116
    type_list                go to state 117
    array_type               go to state 118
    record_type              go to state 119
    set_type                 go to state 120
    file_type                go to state 121
    pointer_type             go to state 122
    pointer_type_identifier  go to state 123
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 124
    function_identifier      go to state 125


state 279

  259 parameter_declaration: "var" . identifier_list ':' type_identifier

    IDENTIFIER  shift, and go to state 21

    identifier_list  go to state 341


state 280

  253 formal_parameter_list: '(' ')' .

    $default  reduce using rule 253 (formal_parameter_list)


state 281

   50 identifier_list: identifier_list . ',' IDENTIFIER
  260 parameter_declaration: identifier_list . ':' type_identifier

    ','  shift, and go to state 37
    ':'  shift, and go to state 342


state 282

  257 formal_parameter_list_iterable_list: procedure_heading .

    $default  reduce using rule 257 (formal_parameter_list_iterable_list)


state 283

  258 formal_parameter_list_iterable_list: function_heading .

    $default  reduce using rule 258 (formal_parameter_list_iterable_list)


state 284

  252 formal_parameter_list: '(' formal_parameter_list_iterable . ')'
  254 formal_parameter_list_iterable: formal_parameter_list_iterable . ';' formal_parameter_list_iterable_list

    ';'  shift, and go to state 343
    ')'  shift, and go to state 344


state 285

  255 formal_parameter_list_iterable: formal_parameter_list_iterable_list .

    $default  reduce using rule 255 (formal_parameter_list_iterable)


state 286

  256 formal_parameter_list_iterable_list: parameter_declaration .

    $default  reduce using rule 256 (formal_parameter_list_iterable_list)


state 287

  250 function_heading: "function" IDENTIFIER ':' type .

    $default  reduce using rule 250 (function_heading)


state 288

  251 function_heading: "function" IDENTIFIER formal_parameter_list ':' . type

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 88
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "real"         shift, and go to state 89
    "integer"      shift, and go to state 90
    "longint"      shift, and go to state 91
    "word"         shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "string"       shift, and go to state 95
    "packed"       shift, and go to state 96
    "array"        shift, and go to state 97
    "record"       shift, and go to state 98
    "of"           shift, and go to state 99
    "set"          shift, and go to state 100
    "function"     shift, and go to state 101
    "file"         shift, and go to state 102
    "nil"          shift, and go to state 103
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 104
    '^'            shift, and go to state 105

    constant                 go to state 106
    constant_identifier      go to state 72
    sign                     go to state 73
    type                     go to state 345
    simple_type              go to state 108
    ordinal_type             go to state 109
    ordinal_type_identifier  go to state 110
    enumerated_type          go to state 111
    subrange_type            go to state 112
    real_type                go to state 113
    real_type_identifier     go to state 114
    string_type              go to state 115
    structured_type          go to state 116
    type_list                go to state 117
    array_type               go to state 118
    record_type              go to state 119
    set_type                 go to state 120
    file_type                go to state 121
    pointer_type             go to state 122
    pointer_type_identifier  go to state 123
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 124
    function_identifier      go to state 125


state 289

  121 variable_identifier: IDENTIFIER .
  174 function_identifier: IDENTIFIER .
  198 statement: IDENTIFIER .
  206 procedure_statement: IDENTIFIER . actual_parameter_list

    '('  shift, and go to state 165

    ":="      reduce using rule 174 (function_identifier)
    '.'       reduce using rule 121 (variable_identifier)
    '['       reduce using rule 121 (variable_identifier)
    '^'       reduce using rule 121 (variable_identifier)
    $default  reduce using rule 198 (statement)

    actual_parameter_list  go to state 346


state 290

  219 case_statement: "case" . expression "of" case_list "end"
  220               | "case" . expression "of" case_list otherwise_clause "end"
  221               | "case" . expression "of" case_list otherwise_clause ';' "end"
  222               | "case" . expression "of" case_list ';' "end"

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 210
    simple_expression_term_operator_iterable  go to state 211
    expression                                go to state 347
    function_call                             go to state 213
    function_identifier                       go to state 125
    set_constructor                           go to state 217


state 291

  207 goto_statement: "goto" . label

    DECIMAL_INT  shift, and go to state 25

    label  go to state 348


state 292

  217 if_statement: "if" . expression "then" statement
  218             | "if" . expression "then" statement "else" statement

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 210
    simple_expression_term_operator_iterable  go to state 211
    expression                                go to state 349
    function_call                             go to state 213
    function_identifier                       go to state 125
    set_constructor                           go to state 217


state 293

  230 repeat_statement: "repeat" . statement_list "until" expression

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 289
    "begin"      shift, and go to state 223
    "case"       shift, and go to state 290
    "function"   shift, and go to state 101
    "goto"       shift, and go to state 291
    "if"         shift, and go to state 292
    "repeat"     shift, and go to state 293
    "while"      shift, and go to state 294
    "for"        shift, and go to state 295
    "with"       shift, and go to state 296
    "read"       shift, and go to state 193
    "readln"     shift, and go to state 194
    "write"      shift, and go to state 195
    "writeln"    shift, and go to state 196

    $default  reduce using rule 192 (statement)

    label                  go to state 297
    variable_reference     go to state 298
    variable_identifier    go to state 205
    function_identifier    go to state 299
    procedure_identifier   go to state 300
    statement              go to state 301
    simple_statement       go to state 302
    assignment_statement   go to state 303
    procedure_statement    go to state 304
    goto_statement         go to state 305
    structured_statement   go to state 306
    compound_statement     go to state 307
    statement_list         go to state 350
    conditional_statement  go to state 309
    if_statement           go to state 310
    case_statement         go to state 311
    repetitive_statement   go to state 312
    repeat_statement       go to state 313
    while_statement        go to state 314
    for_statement          go to state 315
    with_statement         go to state 316


state 294

  231 while_statement: "while" . expression "do" statement

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 210
    simple_expression_term_operator_iterable  go to state 211
    expression                                go to state 351
    function_call                             go to state 213
    function_identifier                       go to state 125
    set_constructor                           go to state 217


state 295

  232 for_statement: "for" . control_variable ":=" initial_value "to" final_value "do" statement
  233              | "for" . control_variable ":=" initial_value "downto" final_value "do" statement

    IDENTIFIER  shift, and go to state 352

    control_variable  go to state 353


state 296

  237 with_statement: "with" . record_variable_reference_list "do" statement

    IDENTIFIER  shift, and go to state 243

    variable_reference              go to state 354
    variable_identifier             go to state 205
    record_variable_reference_list  go to state 355


state 297

  193 statement: label . ':'
  194          | label . ':' simple_statement
  195          | label . ':' structured_statement

    ':'  shift, and go to state 356


state 298

  202 assignment_statement: variable_reference . ":=" expression

    ":="  shift, and go to state 357


state 299

  203 assignment_statement: function_identifier . ":=" expression

    ":="  shift, and go to state 358


state 300

  204 procedure_statement: procedure_identifier .
  205                    | procedure_identifier . actual_parameter_list

    '('  shift, and go to state 165

    $default  reduce using rule 204 (procedure_statement)

    actual_parameter_list  go to state 359


state 301

  214 statement_list: statement .

    $default  reduce using rule 214 (statement_list)


state 302

  196 statement: simple_statement .

    $default  reduce using rule 196 (statement)


state 303

  199 simple_statement: assignment_statement .

    $default  reduce using rule 199 (simple_statement)


state 304

  200 simple_statement: procedure_statement .

    $default  reduce using rule 200 (simple_statement)


state 305

  201 simple_statement: goto_statement .

    $default  reduce using rule 201 (simple_statement)


state 306

  197 statement: structured_statement .

    $default  reduce using rule 197 (statement)


state 307

  208 structured_statement: compound_statement .

    $default  reduce using rule 208 (structured_statement)


state 308

  212 compound_statement: "begin" statement_list . "end"
  213 statement_list: statement_list . ';' statement

    "end"  shift, and go to state 360
    ';'    shift, and go to state 361


state 309

  209 structured_statement: conditional_statement .

    $default  reduce using rule 209 (structured_statement)


state 310

  215 conditional_statement: if_statement .

    $default  reduce using rule 215 (conditional_statement)


state 311

  216 conditional_statement: case_statement .

    $default  reduce using rule 216 (conditional_statement)


state 312

  210 structured_statement: repetitive_statement .

    $default  reduce using rule 210 (structured_statement)


state 313

  227 repetitive_statement: repeat_statement .

    $default  reduce using rule 227 (repetitive_statement)


state 314

  228 repetitive_statement: while_statement .

    $default  reduce using rule 228 (repetitive_statement)


state 315

  229 repetitive_statement: for_statement .

    $default  reduce using rule 229 (repetitive_statement)


state 316

  211 structured_statement: with_statement .

    $default  reduce using rule 211 (structured_statement)


state 317

  240 procedure_declaration: procedure_heading ';' procedure_body ';' .

    $default  reduce using rule 240 (procedure_declaration)


state 318

  246 function_declaration: function_heading ';' function_body ';' .

    $default  reduce using rule 246 (function_declaration)


state 319

   82 index_type_list: index_type_list ',' ordinal_type .

    $default  reduce using rule 82 (index_type_list)


state 320

   81 array_type: "array" '[' index_type_list ']' "of" . type

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 88
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "real"         shift, and go to state 89
    "integer"      shift, and go to state 90
    "longint"      shift, and go to state 91
    "word"         shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "string"       shift, and go to state 95
    "packed"       shift, and go to state 96
    "array"        shift, and go to state 97
    "record"       shift, and go to state 98
    "of"           shift, and go to state 99
    "set"          shift, and go to state 100
    "function"     shift, and go to state 101
    "file"         shift, and go to state 102
    "nil"          shift, and go to state 103
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 104
    '^'            shift, and go to state 105

    constant                 go to state 106
    constant_identifier      go to state 72
    sign                     go to state 73
    type                     go to state 362
    simple_type              go to state 108
    ordinal_type             go to state 109
    ordinal_type_identifier  go to state 110
    enumerated_type          go to state 111
    subrange_type            go to state 112
    real_type                go to state 113
    real_type_identifier     go to state 114
    string_type              go to state 115
    structured_type          go to state 116
    type_list                go to state 117
    array_type               go to state 118
    record_type              go to state 119
    set_type                 go to state 120
    file_type                go to state 121
    pointer_type             go to state 122
    pointer_type_identifier  go to state 123
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 124
    function_identifier      go to state 125


state 321

  103 tag_field_type: IDENTIFIER .

    $default  reduce using rule 103 (tag_field_type)


state 322

   96 variant_part: "case" IDENTIFIER ':' tag_field_type . "of" variant_list

    "of"  shift, and go to state 363


state 323

  102 constant_list: constant .

    $default  reduce using rule 102 (constant_list)


state 324

   95 variant_part: "case" tag_field_type "of" variant_list .
   97 variant_list: variant_list . ';' variant

    ';'  shift, and go to state 364

    ';'       [reduce using rule 95 (variant_part)]
    $default  reduce using rule 95 (variant_part)


state 325

   98 variant_list: variant .

    $default  reduce using rule 98 (variant_list)


state 326

   99 variant: constant_list . ':' '(' ')'
  100        | constant_list . ':' '(' field_list ')'
  101 constant_list: constant_list . ',' constant

    ','  shift, and go to state 365
    ':'  shift, and go to state 366


state 327

   89 field_list: fixed_part ';' variant_part ';' .

    $default  reduce using rule 89 (field_list)


state 328

  145 factor: '(' expression ')' .

    $default  reduce using rule 145 (factor)


state 329

  191 member_group: expression ".." . expression

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 210
    simple_expression_term_operator_iterable  go to state 211
    expression                                go to state 367
    function_call                             go to state 213
    function_identifier                       go to state 125
    set_constructor                           go to state 217


state 330

  188 member_group_list: member_group_list ',' . member_group

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 210
    simple_expression_term_operator_iterable  go to state 211
    expression                                go to state 247
    function_call                             go to state 213
    function_identifier                       go to state 125
    set_constructor                           go to state 217
    member_group                              go to state 368


state 331

  187 set_constructor: '[' member_group_list ']' .

    $default  reduce using rule 187 (set_constructor)


state 332

  130 field_designator: '.' IDENTIFIER .

    $default  reduce using rule 130 (field_designator)


state 333

  127 index: '[' expression_list . ']'
  128 expression_list: expression_list . ',' expression

    ','  shift, and go to state 369
    ']'  shift, and go to state 370


state 334

  129 expression_list: expression .

    $default  reduce using rule 129 (expression_list)


state 335

  122 qualifier_list: qualifier_list qualifier .

    $default  reduce using rule 122 (qualifier_list)


state 336

  149 term: term term_operator_list factor .

    $default  reduce using rule 149 (term)


state 337

  164 expression: simple_expression relational_operator simple_expression .

    $default  reduce using rule 164 (expression)


state 338

  149 term: term . term_operator_list factor
  158 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list term .

    "div"  shift, and go to state 258
    "mod"  shift, and go to state 259
    "and"  shift, and go to state 260
    '*'    shift, and go to state 261
    '/'    shift, and go to state 262

    $default  reduce using rule 158 (simple_expression_term_operator_iterable)

    term_operator_list  go to state 263


state 339

  178 actual_parameter_iterable: actual_parameter_iterable ',' actual_parameter .

    $default  reduce using rule 178 (actual_parameter_iterable)


state 340

  177 actual_parameter_list: '(' actual_parameter_iterable ':' type . ')'

    ')'  shift, and go to state 371


state 341

   50 identifier_list: identifier_list . ',' IDENTIFIER
  259 parameter_declaration: "var" identifier_list . ':' type_identifier

    ','  shift, and go to state 37
    ':'  shift, and go to state 372


state 342

  260 parameter_declaration: identifier_list ':' . type_identifier

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 88
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "real"         shift, and go to state 89
    "integer"      shift, and go to state 90
    "longint"      shift, and go to state 91
    "word"         shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "string"       shift, and go to state 95
    "packed"       shift, and go to state 96
    "array"        shift, and go to state 97
    "record"       shift, and go to state 98
    "of"           shift, and go to state 99
    "set"          shift, and go to state 100
    "function"     shift, and go to state 101
    "file"         shift, and go to state 102
    "nil"          shift, and go to state 103
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 104
    '^'            shift, and go to state 105

    constant                 go to state 106
    constant_identifier      go to state 72
    sign                     go to state 73
    type                     go to state 373
    simple_type              go to state 108
    ordinal_type             go to state 109
    ordinal_type_identifier  go to state 110
    enumerated_type          go to state 111
    subrange_type            go to state 112
    real_type                go to state 113
    real_type_identifier     go to state 114
    string_type              go to state 115
    structured_type          go to state 116
    type_list                go to state 117
    array_type               go to state 118
    record_type              go to state 119
    set_type                 go to state 120
    file_type                go to state 121
    pointer_type             go to state 122
    pointer_type_identifier  go to state 123
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 124
    function_identifier      go to state 125
    type_identifier          go to state 374


state 343

  254 formal_parameter_list_iterable: formal_parameter_list_iterable ';' . formal_parameter_list_iterable_list

    IDENTIFIER   shift, and go to state 21
    "var"        shift, and go to state 279
    "function"   shift, and go to state 128
    "procedure"  shift, and go to state 129

    identifier_list                      go to state 281
    procedure_heading                    go to state 282
    function_heading                     go to state 283
    formal_parameter_list_iterable_list  go to state 375
    parameter_declaration                go to state 286


state 344

  252 formal_parameter_list: '(' formal_parameter_list_iterable ')' .

    $default  reduce using rule 252 (formal_parameter_list)


state 345

  251 function_heading: "function" IDENTIFIER formal_parameter_list ':' type .

    $default  reduce using rule 251 (function_heading)


state 346

  206 procedure_statement: IDENTIFIER actual_parameter_list .

    $default  reduce using rule 206 (procedure_statement)


state 347

  219 case_statement: "case" expression . "of" case_list "end"
  220               | "case" expression . "of" case_list otherwise_clause "end"
  221               | "case" expression . "of" case_list otherwise_clause ';' "end"
  222               | "case" expression . "of" case_list ';' "end"

    "of"  shift, and go to state 376


state 348

  207 goto_statement: "goto" label .

    $default  reduce using rule 207 (goto_statement)


state 349

  217 if_statement: "if" expression . "then" statement
  218             | "if" expression . "then" statement "else" statement

    "then"  shift, and go to state 377


state 350

  213 statement_list: statement_list . ';' statement
  230 repeat_statement: "repeat" statement_list . "until" expression

    "until"  shift, and go to state 378
    ';'      shift, and go to state 361


state 351

  231 while_statement: "while" expression . "do" statement

    "do"  shift, and go to state 379


state 352

  234 control_variable: IDENTIFIER .

    $default  reduce using rule 234 (control_variable)


state 353

  232 for_statement: "for" control_variable . ":=" initial_value "to" final_value "do" statement
  233              | "for" control_variable . ":=" initial_value "downto" final_value "do" statement

    ":="  shift, and go to state 380


state 354

  239 record_variable_reference_list: variable_reference .

    $default  reduce using rule 239 (record_variable_reference_list)


state 355

  237 with_statement: "with" record_variable_reference_list . "do" statement
  238 record_variable_reference_list: record_variable_reference_list . ',' variable_reference

    "do"  shift, and go to state 381
    ','   shift, and go to state 382


state 356

  193 statement: label ':' .
  194          | label ':' . simple_statement
  195          | label ':' . structured_statement

    IDENTIFIER  shift, and go to state 383
    "begin"     shift, and go to state 223
    "case"      shift, and go to state 290
    "function"  shift, and go to state 101
    "goto"      shift, and go to state 291
    "if"        shift, and go to state 292
    "repeat"    shift, and go to state 293
    "while"     shift, and go to state 294
    "for"       shift, and go to state 295
    "with"      shift, and go to state 296
    "read"      shift, and go to state 193
    "readln"    shift, and go to state 194
    "write"     shift, and go to state 195
    "writeln"   shift, and go to state 196

    $default  reduce using rule 193 (statement)

    variable_reference     go to state 298
    variable_identifier    go to state 205
    function_identifier    go to state 299
    procedure_identifier   go to state 300
    simple_statement       go to state 384
    assignment_statement   go to state 303
    procedure_statement    go to state 304
    goto_statement         go to state 305
    structured_statement   go to state 385
    compound_statement     go to state 307
    conditional_statement  go to state 309
    if_statement           go to state 310
    case_statement         go to state 311
    repetitive_statement   go to state 312
    repeat_statement       go to state 313
    while_statement        go to state 314
    for_statement          go to state 315
    with_statement         go to state 316


state 357

  202 assignment_statement: variable_reference ":=" . expression

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 210
    simple_expression_term_operator_iterable  go to state 211
    expression                                go to state 386
    function_call                             go to state 213
    function_identifier                       go to state 125
    set_constructor                           go to state 217


state 358

  203 assignment_statement: function_identifier ":=" . expression

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 210
    simple_expression_term_operator_iterable  go to state 211
    expression                                go to state 387
    function_call                             go to state 213
    function_identifier                       go to state 125
    set_constructor                           go to state 217


state 359

  205 procedure_statement: procedure_identifier actual_parameter_list .

    $default  reduce using rule 205 (procedure_statement)


state 360

  212 compound_statement: "begin" statement_list "end" .

    $default  reduce using rule 212 (compound_statement)


state 361

  213 statement_list: statement_list ';' . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 289
    "begin"      shift, and go to state 223
    "case"       shift, and go to state 290
    "function"   shift, and go to state 101
    "goto"       shift, and go to state 291
    "if"         shift, and go to state 292
    "repeat"     shift, and go to state 293
    "while"      shift, and go to state 294
    "for"        shift, and go to state 295
    "with"       shift, and go to state 296
    "read"       shift, and go to state 193
    "readln"     shift, and go to state 194
    "write"      shift, and go to state 195
    "writeln"    shift, and go to state 196

    $default  reduce using rule 192 (statement)

    label                  go to state 297
    variable_reference     go to state 298
    variable_identifier    go to state 205
    function_identifier    go to state 299
    procedure_identifier   go to state 300
    statement              go to state 388
    simple_statement       go to state 302
    assignment_statement   go to state 303
    procedure_statement    go to state 304
    goto_statement         go to state 305
    structured_statement   go to state 306
    compound_statement     go to state 307
    conditional_statement  go to state 309
    if_statement           go to state 310
    case_statement         go to state 311
    repetitive_statement   go to state 312
    repeat_statement       go to state 313
    while_statement        go to state 314
    for_statement          go to state 315
    with_statement         go to state 316


state 362

   81 array_type: "array" '[' index_type_list ']' "of" type .

    $default  reduce using rule 81 (array_type)


state 363

   96 variant_part: "case" IDENTIFIER ':' tag_field_type "of" . variant_list

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 66
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70

    constant             go to state 323
    constant_identifier  go to state 72
    sign                 go to state 73
    variant_list         go to state 389
    variant              go to state 325
    constant_list        go to state 326
    unsigned_number      go to state 74
    signed_number        go to state 75


state 364

   97 variant_list: variant_list ';' . variant

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 66
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70

    constant             go to state 323
    constant_identifier  go to state 72
    sign                 go to state 73
    variant              go to state 390
    constant_list        go to state 326
    unsigned_number      go to state 74
    signed_number        go to state 75


state 365

  101 constant_list: constant_list ',' . constant

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 66
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70

    constant             go to state 391
    constant_identifier  go to state 72
    sign                 go to state 73
    unsigned_number      go to state 74
    signed_number        go to state 75


state 366

   99 variant: constant_list ':' . '(' ')'
  100        | constant_list ':' . '(' field_list ')'

    '('  shift, and go to state 392


state 367

  191 member_group: expression ".." expression .

    $default  reduce using rule 191 (member_group)


state 368

  188 member_group_list: member_group_list ',' member_group .

    $default  reduce using rule 188 (member_group_list)


state 369

  128 expression_list: expression_list ',' . expression

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 210
    simple_expression_term_operator_iterable  go to state 211
    expression                                go to state 393
    function_call                             go to state 213
    function_identifier                       go to state 125
    set_constructor                           go to state 217


state 370

  127 index: '[' expression_list ']' .

    $default  reduce using rule 127 (index)


state 371

  177 actual_parameter_list: '(' actual_parameter_iterable ':' type ')' .

    $default  reduce using rule 177 (actual_parameter_list)


state 372

  259 parameter_declaration: "var" identifier_list ':' . type_identifier

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 88
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "real"         shift, and go to state 89
    "integer"      shift, and go to state 90
    "longint"      shift, and go to state 91
    "word"         shift, and go to state 92
    "char"         shift, and go to state 93
    "boolean"      shift, and go to state 94
    "string"       shift, and go to state 95
    "packed"       shift, and go to state 96
    "array"        shift, and go to state 97
    "record"       shift, and go to state 98
    "of"           shift, and go to state 99
    "set"          shift, and go to state 100
    "function"     shift, and go to state 101
    "file"         shift, and go to state 102
    "nil"          shift, and go to state 103
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 104
    '^'            shift, and go to state 105

    constant                 go to state 106
    constant_identifier      go to state 72
    sign                     go to state 73
    type                     go to state 373
    simple_type              go to state 108
    ordinal_type             go to state 109
    ordinal_type_identifier  go to state 110
    enumerated_type          go to state 111
    subrange_type            go to state 112
    real_type                go to state 113
    real_type_identifier     go to state 114
    string_type              go to state 115
    structured_type          go to state 116
    type_list                go to state 117
    array_type               go to state 118
    record_type              go to state 119
    set_type                 go to state 120
    file_type                go to state 121
    pointer_type             go to state 122
    pointer_type_identifier  go to state 123
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 124
    function_identifier      go to state 125
    type_identifier          go to state 394


state 373

  261 type_identifier: type .

    $default  reduce using rule 261 (type_identifier)


state 374

  260 parameter_declaration: identifier_list ':' type_identifier .

    $default  reduce using rule 260 (parameter_declaration)


state 375

  254 formal_parameter_list_iterable: formal_parameter_list_iterable ';' formal_parameter_list_iterable_list .

    $default  reduce using rule 254 (formal_parameter_list_iterable)


state 376

  219 case_statement: "case" expression "of" . case_list "end"
  220               | "case" expression "of" . case_list otherwise_clause "end"
  221               | "case" expression "of" . case_list otherwise_clause ';' "end"
  222               | "case" expression "of" . case_list ';' "end"

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 66
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70

    constant             go to state 323
    constant_identifier  go to state 72
    sign                 go to state 73
    constant_list        go to state 395
    unsigned_number      go to state 74
    signed_number        go to state 75
    case_list            go to state 396
    case                 go to state 397


state 377

  217 if_statement: "if" expression "then" . statement
  218             | "if" expression "then" . statement "else" statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 289
    "begin"      shift, and go to state 223
    "case"       shift, and go to state 290
    "function"   shift, and go to state 101
    "goto"       shift, and go to state 291
    "if"         shift, and go to state 292
    "repeat"     shift, and go to state 293
    "while"      shift, and go to state 294
    "for"        shift, and go to state 295
    "with"       shift, and go to state 296
    "read"       shift, and go to state 193
    "readln"     shift, and go to state 194
    "write"      shift, and go to state 195
    "writeln"    shift, and go to state 196

    $default  reduce using rule 192 (statement)

    label                  go to state 297
    variable_reference     go to state 298
    variable_identifier    go to state 205
    function_identifier    go to state 299
    procedure_identifier   go to state 300
    statement              go to state 398
    simple_statement       go to state 302
    assignment_statement   go to state 303
    procedure_statement    go to state 304
    goto_statement         go to state 305
    structured_statement   go to state 306
    compound_statement     go to state 307
    conditional_statement  go to state 309
    if_statement           go to state 310
    case_statement         go to state 311
    repetitive_statement   go to state 312
    repeat_statement       go to state 313
    while_statement        go to state 314
    for_statement          go to state 315
    with_statement         go to state 316


state 378

  230 repeat_statement: "repeat" statement_list "until" . expression

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 210
    simple_expression_term_operator_iterable  go to state 211
    expression                                go to state 399
    function_call                             go to state 213
    function_identifier                       go to state 125
    set_constructor                           go to state 217


state 379

  231 while_statement: "while" expression "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 289
    "begin"      shift, and go to state 223
    "case"       shift, and go to state 290
    "function"   shift, and go to state 101
    "goto"       shift, and go to state 291
    "if"         shift, and go to state 292
    "repeat"     shift, and go to state 293
    "while"      shift, and go to state 294
    "for"        shift, and go to state 295
    "with"       shift, and go to state 296
    "read"       shift, and go to state 193
    "readln"     shift, and go to state 194
    "write"      shift, and go to state 195
    "writeln"    shift, and go to state 196

    $default  reduce using rule 192 (statement)

    label                  go to state 297
    variable_reference     go to state 298
    variable_identifier    go to state 205
    function_identifier    go to state 299
    procedure_identifier   go to state 300
    statement              go to state 400
    simple_statement       go to state 302
    assignment_statement   go to state 303
    procedure_statement    go to state 304
    goto_statement         go to state 305
    structured_statement   go to state 306
    compound_statement     go to state 307
    conditional_statement  go to state 309
    if_statement           go to state 310
    case_statement         go to state 311
    repetitive_statement   go to state 312
    repeat_statement       go to state 313
    while_statement        go to state 314
    for_statement          go to state 315
    with_statement         go to state 316


state 380

  232 for_statement: "for" control_variable ":=" . initial_value "to" final_value "do" statement
  233              | "for" control_variable ":=" . initial_value "downto" final_value "do" statement

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 210
    simple_expression_term_operator_iterable  go to state 211
    expression                                go to state 401
    function_call                             go to state 213
    function_identifier                       go to state 125
    set_constructor                           go to state 217
    initial_value                             go to state 402


state 381

  237 with_statement: "with" record_variable_reference_list "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 289
    "begin"      shift, and go to state 223
    "case"       shift, and go to state 290
    "function"   shift, and go to state 101
    "goto"       shift, and go to state 291
    "if"         shift, and go to state 292
    "repeat"     shift, and go to state 293
    "while"      shift, and go to state 294
    "for"        shift, and go to state 295
    "with"       shift, and go to state 296
    "read"       shift, and go to state 193
    "readln"     shift, and go to state 194
    "write"      shift, and go to state 195
    "writeln"    shift, and go to state 196

    $default  reduce using rule 192 (statement)

    label                  go to state 297
    variable_reference     go to state 298
    variable_identifier    go to state 205
    function_identifier    go to state 299
    procedure_identifier   go to state 300
    statement              go to state 403
    simple_statement       go to state 302
    assignment_statement   go to state 303
    procedure_statement    go to state 304
    goto_statement         go to state 305
    structured_statement   go to state 306
    compound_statement     go to state 307
    conditional_statement  go to state 309
    if_statement           go to state 310
    case_statement         go to state 311
    repetitive_statement   go to state 312
    repeat_statement       go to state 313
    while_statement        go to state 314
    for_statement          go to state 315
    with_statement         go to state 316


state 382

  238 record_variable_reference_list: record_variable_reference_list ',' . variable_reference

    IDENTIFIER  shift, and go to state 243

    variable_reference   go to state 404
    variable_identifier  go to state 205


state 383

  121 variable_identifier: IDENTIFIER .
  174 function_identifier: IDENTIFIER .
  206 procedure_statement: IDENTIFIER . actual_parameter_list

    '('  shift, and go to state 165

    ":="      reduce using rule 174 (function_identifier)
    $default  reduce using rule 121 (variable_identifier)

    actual_parameter_list  go to state 346


state 384

  194 statement: label ':' simple_statement .

    $default  reduce using rule 194 (statement)


state 385

  195 statement: label ':' structured_statement .

    $default  reduce using rule 195 (statement)


state 386

  202 assignment_statement: variable_reference ":=" expression .

    $default  reduce using rule 202 (assignment_statement)


state 387

  203 assignment_statement: function_identifier ":=" expression .

    $default  reduce using rule 203 (assignment_statement)


state 388

  213 statement_list: statement_list ';' statement .

    $default  reduce using rule 213 (statement_list)


state 389

   96 variant_part: "case" IDENTIFIER ':' tag_field_type "of" variant_list .
   97 variant_list: variant_list . ';' variant

    ';'  shift, and go to state 364

    ';'       [reduce using rule 96 (variant_part)]
    $default  reduce using rule 96 (variant_part)


state 390

   97 variant_list: variant_list ';' variant .

    $default  reduce using rule 97 (variant_list)


state 391

  101 constant_list: constant_list ',' constant .

    $default  reduce using rule 101 (constant_list)


state 392

   99 variant: constant_list ':' '(' . ')'
  100        | constant_list ':' '(' . field_list ')'

    IDENTIFIER  shift, and go to state 21
    "case"      shift, and go to state 143
    ')'         shift, and go to state 405

    identifier_list    go to state 144
    field_list         go to state 406
    fixed_part         go to state 146
    field_declaration  go to state 147
    variant_part       go to state 148


state 393

  128 expression_list: expression_list ',' expression .

    $default  reduce using rule 128 (expression_list)


state 394

  259 parameter_declaration: "var" identifier_list ':' type_identifier .

    $default  reduce using rule 259 (parameter_declaration)


state 395

  101 constant_list: constant_list . ',' constant
  225 case: constant_list . ':' statement

    ','  shift, and go to state 365
    ':'  shift, and go to state 407


state 396

  219 case_statement: "case" expression "of" case_list . "end"
  220               | "case" expression "of" case_list . otherwise_clause "end"
  221               | "case" expression "of" case_list . otherwise_clause ';' "end"
  222               | "case" expression "of" case_list . ';' "end"
  223 case_list: case_list . ';' case

    "end"  shift, and go to state 408
    ';'    shift, and go to state 409

    otherwise_clause  go to state 410


state 397

  224 case_list: case .

    $default  reduce using rule 224 (case_list)


state 398

  217 if_statement: "if" expression "then" statement .
  218             | "if" expression "then" statement . "else" statement

    "else"  shift, and go to state 411

    "else"    [reduce using rule 217 (if_statement)]
    $default  reduce using rule 217 (if_statement)


state 399

  230 repeat_statement: "repeat" statement_list "until" expression .

    $default  reduce using rule 230 (repeat_statement)


state 400

  231 while_statement: "while" expression "do" statement .

    $default  reduce using rule 231 (while_statement)


state 401

  235 initial_value: expression .

    $default  reduce using rule 235 (initial_value)


state 402

  232 for_statement: "for" control_variable ":=" initial_value . "to" final_value "do" statement
  233              | "for" control_variable ":=" initial_value . "downto" final_value "do" statement

    "to"      shift, and go to state 412
    "downto"  shift, and go to state 413


state 403

  237 with_statement: "with" record_variable_reference_list "do" statement .

    $default  reduce using rule 237 (with_statement)


state 404

  238 record_variable_reference_list: record_variable_reference_list ',' variable_reference .

    $default  reduce using rule 238 (record_variable_reference_list)


state 405

   99 variant: constant_list ':' '(' ')' .

    $default  reduce using rule 99 (variant)


state 406

  100 variant: constant_list ':' '(' field_list . ')'

    ')'  shift, and go to state 414


state 407

  225 case: constant_list ':' . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 289
    "begin"      shift, and go to state 223
    "case"       shift, and go to state 290
    "function"   shift, and go to state 101
    "goto"       shift, and go to state 291
    "if"         shift, and go to state 292
    "repeat"     shift, and go to state 293
    "while"      shift, and go to state 294
    "for"        shift, and go to state 295
    "with"       shift, and go to state 296
    "read"       shift, and go to state 193
    "readln"     shift, and go to state 194
    "write"      shift, and go to state 195
    "writeln"    shift, and go to state 196

    $default  reduce using rule 192 (statement)

    label                  go to state 297
    variable_reference     go to state 298
    variable_identifier    go to state 205
    function_identifier    go to state 299
    procedure_identifier   go to state 300
    statement              go to state 415
    simple_statement       go to state 302
    assignment_statement   go to state 303
    procedure_statement    go to state 304
    goto_statement         go to state 305
    structured_statement   go to state 306
    compound_statement     go to state 307
    conditional_statement  go to state 309
    if_statement           go to state 310
    case_statement         go to state 311
    repetitive_statement   go to state 312
    repeat_statement       go to state 313
    while_statement        go to state 314
    for_statement          go to state 315
    with_statement         go to state 316


state 408

  219 case_statement: "case" expression "of" case_list "end" .

    $default  reduce using rule 219 (case_statement)


state 409

  222 case_statement: "case" expression "of" case_list ';' . "end"
  223 case_list: case_list ';' . case
  226 otherwise_clause: ';' . "otherwise" statement

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 66
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "end"          shift, and go to state 416
    "otherwise"    shift, and go to state 417
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70

    constant             go to state 323
    constant_identifier  go to state 72
    sign                 go to state 73
    constant_list        go to state 395
    unsigned_number      go to state 74
    signed_number        go to state 75
    case                 go to state 418


state 410

  220 case_statement: "case" expression "of" case_list otherwise_clause . "end"
  221               | "case" expression "of" case_list otherwise_clause . ';' "end"

    "end"  shift, and go to state 419
    ';'    shift, and go to state 420


state 411

  218 if_statement: "if" expression "then" statement "else" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 289
    "begin"      shift, and go to state 223
    "case"       shift, and go to state 290
    "function"   shift, and go to state 101
    "goto"       shift, and go to state 291
    "if"         shift, and go to state 292
    "repeat"     shift, and go to state 293
    "while"      shift, and go to state 294
    "for"        shift, and go to state 295
    "with"       shift, and go to state 296
    "read"       shift, and go to state 193
    "readln"     shift, and go to state 194
    "write"      shift, and go to state 195
    "writeln"    shift, and go to state 196

    $default  reduce using rule 192 (statement)

    label                  go to state 297
    variable_reference     go to state 298
    variable_identifier    go to state 205
    function_identifier    go to state 299
    procedure_identifier   go to state 300
    statement              go to state 421
    simple_statement       go to state 302
    assignment_statement   go to state 303
    procedure_statement    go to state 304
    goto_statement         go to state 305
    structured_statement   go to state 306
    compound_statement     go to state 307
    conditional_statement  go to state 309
    if_statement           go to state 310
    case_statement         go to state 311
    repetitive_statement   go to state 312
    repeat_statement       go to state 313
    while_statement        go to state 314
    for_statement          go to state 315
    with_statement         go to state 316


state 412

  232 for_statement: "for" control_variable ":=" initial_value "to" . final_value "do" statement

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 210
    simple_expression_term_operator_iterable  go to state 211
    expression                                go to state 422
    function_call                             go to state 213
    function_identifier                       go to state 125
    set_constructor                           go to state 217
    final_value                               go to state 423


state 413

  233 for_statement: "for" control_variable ":=" initial_value "downto" . final_value "do" statement

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 187
    QUOTED_STRING  shift, and go to state 188
    QUOTED_CHAR    shift, and go to state 189
    "true"         shift, and go to state 190
    "false"        shift, and go to state 191
    "function"     shift, and go to state 101
    "nil"          shift, and go to state 192
    "not"          shift, and go to state 197
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 198
    '('            shift, and go to state 199
    '['            shift, and go to state 201

    sign                                      go to state 202
    type_boolean                              go to state 203
    variable_reference                        go to state 204
    variable_identifier                       go to state 205
    unsigned_constant                         go to state 206
    unsigned_number                           go to state 207
    factor                                    go to state 208
    term                                      go to state 209
    simple_expression                         go to state 210
    simple_expression_term_operator_iterable  go to state 211
    expression                                go to state 422
    function_call                             go to state 213
    function_identifier                       go to state 125
    set_constructor                           go to state 217
    final_value                               go to state 424


state 414

  100 variant: constant_list ':' '(' field_list ')' .

    $default  reduce using rule 100 (variant)


state 415

  225 case: constant_list ':' statement .

    $default  reduce using rule 225 (case)


state 416

  222 case_statement: "case" expression "of" case_list ';' "end" .

    $default  reduce using rule 222 (case_statement)


state 417

  226 otherwise_clause: ';' "otherwise" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 289
    "begin"      shift, and go to state 223
    "case"       shift, and go to state 290
    "function"   shift, and go to state 101
    "goto"       shift, and go to state 291
    "if"         shift, and go to state 292
    "repeat"     shift, and go to state 293
    "while"      shift, and go to state 294
    "for"        shift, and go to state 295
    "with"       shift, and go to state 296
    "read"       shift, and go to state 193
    "readln"     shift, and go to state 194
    "write"      shift, and go to state 195
    "writeln"    shift, and go to state 196

    $default  reduce using rule 192 (statement)

    label                  go to state 297
    variable_reference     go to state 298
    variable_identifier    go to state 205
    function_identifier    go to state 299
    procedure_identifier   go to state 300
    statement              go to state 425
    simple_statement       go to state 302
    assignment_statement   go to state 303
    procedure_statement    go to state 304
    goto_statement         go to state 305
    structured_statement   go to state 306
    compound_statement     go to state 307
    conditional_statement  go to state 309
    if_statement           go to state 310
    case_statement         go to state 311
    repetitive_statement   go to state 312
    repeat_statement       go to state 313
    while_statement        go to state 314
    for_statement          go to state 315
    with_statement         go to state 316


state 418

  223 case_list: case_list ';' case .

    $default  reduce using rule 223 (case_list)


state 419

  220 case_statement: "case" expression "of" case_list otherwise_clause "end" .

    $default  reduce using rule 220 (case_statement)


state 420

  221 case_statement: "case" expression "of" case_list otherwise_clause ';' . "end"

    "end"  shift, and go to state 426


state 421

  218 if_statement: "if" expression "then" statement "else" statement .

    $default  reduce using rule 218 (if_statement)


state 422

  236 final_value: expression .

    $default  reduce using rule 236 (final_value)


state 423

  232 for_statement: "for" control_variable ":=" initial_value "to" final_value . "do" statement

    "do"  shift, and go to state 427


state 424

  233 for_statement: "for" control_variable ":=" initial_value "downto" final_value . "do" statement

    "do"  shift, and go to state 428


state 425

  226 otherwise_clause: ';' "otherwise" statement .

    $default  reduce using rule 226 (otherwise_clause)


state 426

  221 case_statement: "case" expression "of" case_list otherwise_clause ';' "end" .

    $default  reduce using rule 221 (case_statement)


state 427

  232 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 289
    "begin"      shift, and go to state 223
    "case"       shift, and go to state 290
    "function"   shift, and go to state 101
    "goto"       shift, and go to state 291
    "if"         shift, and go to state 292
    "repeat"     shift, and go to state 293
    "while"      shift, and go to state 294
    "for"        shift, and go to state 295
    "with"       shift, and go to state 296
    "read"       shift, and go to state 193
    "readln"     shift, and go to state 194
    "write"      shift, and go to state 195
    "writeln"    shift, and go to state 196

    $default  reduce using rule 192 (statement)

    label                  go to state 297
    variable_reference     go to state 298
    variable_identifier    go to state 205
    function_identifier    go to state 299
    procedure_identifier   go to state 300
    statement              go to state 429
    simple_statement       go to state 302
    assignment_statement   go to state 303
    procedure_statement    go to state 304
    goto_statement         go to state 305
    structured_statement   go to state 306
    compound_statement     go to state 307
    conditional_statement  go to state 309
    if_statement           go to state 310
    case_statement         go to state 311
    repetitive_statement   go to state 312
    repeat_statement       go to state 313
    while_statement        go to state 314
    for_statement          go to state 315
    with_statement         go to state 316


state 428

  233 for_statement: "for" control_variable ":=" initial_value "downto" final_value "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 289
    "begin"      shift, and go to state 223
    "case"       shift, and go to state 290
    "function"   shift, and go to state 101
    "goto"       shift, and go to state 291
    "if"         shift, and go to state 292
    "repeat"     shift, and go to state 293
    "while"      shift, and go to state 294
    "for"        shift, and go to state 295
    "with"       shift, and go to state 296
    "read"       shift, and go to state 193
    "readln"     shift, and go to state 194
    "write"      shift, and go to state 195
    "writeln"    shift, and go to state 196

    $default  reduce using rule 192 (statement)

    label                  go to state 297
    variable_reference     go to state 298
    variable_identifier    go to state 205
    function_identifier    go to state 299
    procedure_identifier   go to state 300
    statement              go to state 430
    simple_statement       go to state 302
    assignment_statement   go to state 303
    procedure_statement    go to state 304
    goto_statement         go to state 305
    structured_statement   go to state 306
    compound_statement     go to state 307
    conditional_statement  go to state 309
    if_statement           go to state 310
    case_statement         go to state 311
    repetitive_statement   go to state 312
    repeat_statement       go to state 313
    while_statement        go to state 314
    for_statement          go to state 315
    with_statement         go to state 316


state 429

  232 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" statement .

    $default  reduce using rule 232 (for_statement)


state 430

  233 for_statement: "for" control_variable ":=" initial_value "downto" final_value "do" statement .

    $default  reduce using rule 233 (for_statement)
