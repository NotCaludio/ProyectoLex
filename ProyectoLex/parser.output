Nonterminals useless in grammar

   file_buffer_symbol
   pointer_object_symbol
   result_type


Terminals unused in grammar

   ASSIGNMENT_PRECEDENCE
   "<>"
   "<="
   ">="
   POSITIVE
   NEGATIVE


Rules useless in grammar

  281 file_buffer_symbol: '^'

  282 pointer_object_symbol: '^'

  283 result_type: ordinal_type_identifier
  284            | real_type_identifier
  285            | pointer_type_identifier


State 169 conflicts: 1 shift/reduce
State 339 conflicts: 1 shift/reduce
State 410 conflicts: 1 shift/reduce
State 419 conflicts: 1 shift/reduce


Grammar

    0 $accept: pascal $end

    1 pascal: program
    2       | regular_unit

    3 program: program_heading ';' block '.'
    4        | program_heading ';' uses_clause ';' block '.'

    5 program_heading: "program" IDENTIFIER
    6                | "program" IDENTIFIER '(' program_parameters ')'

    7 program_parameters: identifier_list

    8 uses_clause: "uses" identifier_list

    9 $@1: /* empty */

   10 $@2: /* empty */

   11 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part $@1 procedure_and_function_declaration_part $@2 statement_part

   12 label_declaration_part: "label" label_list ';'
   13                       | /* empty */

   14 label_list: label_list ',' label
   15           | label

   16 label: DECIMAL_INT

   17 constant_declaration_part: "const" constant_declaration_list
   18                          | /* empty */

   19 constant_declaration_list: constant_declaration_list constant_declaration
   20                          | constant_declaration

   21 constant_declaration: IDENTIFIER '=' constant ';'

   22 constant: constant_identifier
   23         | sign constant_identifier
   24         | signed_number
   25         | '#' signed_number
   26         | QUOTED_STRING
   27         | QUOTED_CHAR

   28 constant_identifier: IDENTIFIER

   29 type_declaration_part: "type" type_declaration_list
   30                      | /* empty */

   31 type_declaration_list: type_declaration_list type_declaration
   32                      | type_declaration

   33 type_declaration: IDENTIFIER '=' type ';'

   34 variable_declaration_part: "var" variable_declaration_list
   35                          | /* empty */

   36 variable_declaration_list: variable_declaration_list variable_declaration
   37                          | variable_declaration

   38 variable_declaration: identifier_list ':' type ';'

   39 procedure_and_function_declaration_part: procedure_and_function_declaration_list
   40                                        | /* empty */

   41 procedure_and_function_declaration_list: procedure_and_function_declaration_list procedure_and_function_declaration
   42                                        | procedure_and_function_declaration

   43 procedure_and_function_declaration: procedure_declaration
   44                                   | function_declaration

   45 statement_part: compound_statement
   46               | /* empty */

   47 sign: '+'
   48     | '-'

   49 identifier_list: identifier_list ',' IDENTIFIER
   50                | IDENTIFIER

   51 type: simple_type
   52     | structured_type
   53     | pointer_type
   54     | IDENTIFIER

   55 simple_type: ordinal_type
   56            | real_type
   57            | string_type

   58 ordinal_type: subrange_type
   59             | enumerated_type
   60             | ordinal_type_identifier

   61 ordinal_type_identifier: "integer"
   62                        | "longint"
   63                        | "char"
   64                        | "boolean"
   65                        | function_call
   66                        | "word"

   67 type_boolean: "true"
   68             | "false"

   69 enumerated_type: '(' identifier_list ')'

   70 subrange_type: constant ".." constant

   71 real_type: real_type_identifier

   72 real_type_identifier: "real"

   73 string_type: "string" '[' DECIMAL_INT ']'
   74            | "string" '[' IDENTIFIER ']'

   75 structured_type: "packed" type_list
   76                | type_list

   77 type_list: array_type
   78          | set_type
   79          | file_type
   80          | record_type

   81 array_type: "array" '[' index_type_list ']' "of" type

   82 index_type_list: index_type_list ',' ordinal_type_expression
   83                | ordinal_type_expression

   84 ordinal_type_expression: ordinal_type
   85                        | ordinal_type term_operator_list signed_number_expression_list
   86                        | ordinal_type sign unsigned_number_expression_list

   87 signed_number_expression_list: signed_number_expression_list term_operator_list signed_number
   88                              | signed_number

   89 unsigned_number_expression_list: unsigned_number_expression_list sign unsigned_number
   90                                | unsigned_number

   91 record_type: "record" "end"
   92            | "record" field_list "end"

   93 field_list: fixed_part
   94           | fixed_part ';'
   95           | fixed_part ';' variant_part
   96           | fixed_part ';' variant_part ';'
   97           | variant_part
   98           | variant_part ';'

   99 fixed_part: fixed_part ';' field_declaration
  100           | field_declaration

  101 field_declaration: identifier_list ':' type

  102 variant_part: "case" tag_field_type "of" variant_list
  103             | "case" IDENTIFIER ':' tag_field_type "of" variant_list

  104 variant_list: variant_list ';' variant
  105             | variant

  106 variant: constant_list ':' '(' ')'
  107        | constant_list ':' '(' field_list ')'

  108 constant_list: constant_list ',' constant
  109              | constant

  110 tag_field_type: IDENTIFIER

  111 set_type: "set" "of" ordinal_type

  112 file_type: "file"
  113          | "of" type

  114 pointer_type: '^' base_type
  115             | pointer_type_identifier

  116 pointer_type_identifier: "nil"

  117 base_type: "integer"
  118          | "longint"
  119          | "char"
  120          | "boolean"
  121          | "string"
  122          | "record"
  123          | "file"
  124          | "array"
  125          | IDENTIFIER
  126          | "function"
  127          | "real"
  128          | unsigned_number

  129 variable_reference: variable_identifier qualifier_list

  130 variable_identifier: IDENTIFIER

  131 qualifier_list: qualifier_list qualifier
  132               | qualifier

  133 qualifier: index
  134          | field_designator
  135          | '^'

  136 index: '[' expression_list ']'

  137 expression_list: expression_list ',' expression
  138                | expression

  139 field_designator: '.' IDENTIFIER
  140                 | '.' function_call

  141 unsigned_constant: unsigned_number
  142                  | QUOTED_STRING
  143                  | QUOTED_CHAR
  144                  | "nil"

  145 unsigned_number: DECIMAL_INT
  146                | HEXADECIMAL
  147                | REAL_DECIMAL

  148 signed_number: sign unsigned_number
  149              | unsigned_number

  150 factor: variable_reference
  151       | '@' variable_reference
  152       | unsigned_constant
  153       | function_call
  154       | set_constructor
  155       | '(' expression ')'
  156       | "not" factor
  157       | IDENTIFIER
  158       | type_boolean

  159 term: term term_operator_list factor
  160     | factor

  161 term_operator_list: '*'
  162                   | '/'
  163                   | "div"
  164                   | "mod"
  165                   | "and"

  166 simple_expression: sign simple_expression_term_operator_iterable
  167                  | simple_expression_term_operator_iterable

  168 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list term
  169                                         | term

  170 simple_expression_term_operator_list: '+'
  171                                     | '-'
  172                                     | "or"

  173 expression: simple_expression
  174           | simple_expression relational_operator simple_expression

  175 relational_operator: '='
  176                    | '<'
  177                    | '>'
  178                    | LE
  179                    | RE
  180                    | NOTEQUAL
  181                    | "in"

  182 function_call: function_identifier actual_parameter_list
  183              | function_identifier actual_parameter_list ':' base_type

  184 function_identifier: "function"
  185                    | IDENTIFIER

  186 actual_parameter_list: '(' actual_parameter_iterable ')'
  187                      | '(' ')'
  188                      | '(' actual_parameter_iterable ':' base_type ')'

  189 actual_parameter_iterable: actual_parameter_iterable ',' actual_parameter
  190                          | actual_parameter

  191 actual_parameter: expression
  192                 | procedure_identifier

  193 procedure_identifier: "write"
  194                     | "writeln"
  195                     | "read"
  196                     | "readln"

  197 set_constructor: '[' ']'
  198                | '[' member_group_list ']'

  199 member_group_list: member_group_list ',' member_group
  200                  | member_group

  201 member_group: expression
  202             | expression ".." expression

  203 statement: /* empty */
  204          | label ':'
  205          | label ':' simple_statement
  206          | label ':' structured_statement
  207          | simple_statement
  208          | structured_statement
  209          | IDENTIFIER
  210          | variable_reference

  211 simple_statement: assignment_statement
  212                 | procedure_statement
  213                 | goto_statement

  214 assignment_statement: variable_reference ":=" expression
  215                     | function_identifier ":=" expression

  216 procedure_statement: procedure_identifier
  217                    | procedure_identifier actual_parameter_list
  218                    | IDENTIFIER actual_parameter_list

  219 goto_statement: "goto" label

  220 structured_statement: compound_statement
  221                     | conditional_statement
  222                     | repetitive_statement
  223                     | with_statement

  224 compound_statement: "begin" statement_list "end"

  225 statement_list: statement_list ';' statement
  226               | statement

  227 conditional_statement: if_statement
  228                      | case_statement

  229 if_statement: "if" expression "then" statement
  230             | "if" expression "then" statement "else" statement

  231 case_statement: "case" expression "of" case_list "end"
  232               | "case" expression "of" case_list otherwise_clause "end"
  233               | "case" expression "of" case_list otherwise_clause ';' "end"
  234               | "case" expression "of" case_list ';' "end"

  235 case_list: case_list ';' case
  236          | case

  237 case: constant_list ':' statement

  238 otherwise_clause: ';' "otherwise" statement

  239 repetitive_statement: repeat_statement
  240                     | while_statement
  241                     | for_statement

  242 repeat_statement: "repeat" statement_list "until" expression

  243 while_statement: "while" expression "do" statement

  244 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" statement
  245              | "for" control_variable ":=" initial_value "downto" final_value "do" statement

  246 control_variable: IDENTIFIER

  247 initial_value: expression

  248 final_value: expression

  249 with_statement: "with" record_variable_reference_list "do" statement

  250 record_variable_reference_list: record_variable_reference_list ',' variable_reference
  251                               | variable_reference

  252 procedure_declaration: procedure_heading ';' procedure_body ';'

  253 procedure_body: block
  254               | "forward"
  255               | "external"

  256 procedure_heading: "procedure" IDENTIFIER
  257                  | "procedure" IDENTIFIER formal_parameter_list

  258 function_declaration: function_heading ';' function_body ';'

  259 function_body: block
  260              | "forward"
  261              | "external"

  262 function_heading: "function" IDENTIFIER ':' base_type
  263                 | "function" IDENTIFIER formal_parameter_list ':' base_type

  264 formal_parameter_list: '(' formal_parameter_list_iterable ')'
  265                      | '(' ')'

  266 formal_parameter_list_iterable: formal_parameter_list_iterable ';' formal_parameter_list_iterable_list
  267                               | formal_parameter_list_iterable_list

  268 formal_parameter_list_iterable_list: parameter_declaration
  269                                    | procedure_heading
  270                                    | function_heading

  271 parameter_declaration: "var" identifier_list ':' type_identifier
  272                      | identifier_list ':' type_identifier

  273 type_identifier: type

  274 $@3: /* empty */

  275 regular_unit: unit_heading ';' interface_part $@3 implementation_part "end" '.'

  276 unit_heading: "unit" IDENTIFIER

  277 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

  278 uses_clause_empty: uses_clause
  279                  | /* empty */

  280 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part


Terminals, with rules where they appear

$end (0) 0
'#' (35) 25
'(' (40) 6 69 106 107 155 186 187 188 264 265
')' (41) 6 69 106 107 155 186 187 188 264 265
'*' (42) 161
'+' (43) 47 170
',' (44) 14 49 82 108 137 189 199 250
'-' (45) 48 171
'.' (46) 3 4 139 140 275
'/' (47) 162
':' (58) 38 101 103 106 107 183 188 204 205 206 237 262 263 271 272
';' (59) 3 4 12 21 33 38 94 95 96 98 99 104 225 233 234 235 238 252
    258 266 275
'<' (60) 176
'=' (61) 21 33 175
'>' (62) 177
'@' (64) 151
'[' (91) 73 74 81 136 197 198
']' (93) 73 74 81 136 197 198
'^' (94) 114 135
error (256)
DECIMAL_INT (258) 16 73 145
HEXADECIMAL (259) 146
REAL_DECIMAL (260) 147
IDENTIFIER (261) 5 6 21 28 33 49 50 54 74 103 110 125 130 139 157 185
    209 218 246 256 257 262 263 276
QUOTED_STRING (262) 26 142
QUOTED_CHAR (263) 27 143
"program" (264) 5 6
"begin" (265) 224
"uses" (266) 8
"unit" (267) 276
"interface" (268) 277
"implementation" (269) 280
"label" (270) 12
"const" (271) 17
"type" (272) 29
"real" (273) 72 127
"integer" (274) 61 117
"longint" (275) 62 118
"word" (276) 66
"char" (277) 63 119
"boolean" (278) 64 120
"true" (279) 67
"false" (280) 68
"string" (281) 73 74 121
"packed" (282) 75
"array" (283) 81 124
"record" (284) 91 92 122
"end" (285) 91 92 224 231 232 233 234 275
"case" (286) 102 103 231 232 233 234
"otherwise" (287) 238
"of" (288) 81 102 103 111 113 231 232 233 234
"set" (289) 111
"var" (290) 34 271
"forward" (291) 254 260
"external" (292) 255 261
"function" (293) 126 184 262 263
"procedure" (294) 256 257
"file" (295) 112 123
"goto" (296) 219
"if" (297) 229 230
"then" (298) 229 230
"else" (299) 230
"repeat" (300) 242
"until" (301) 242
"while" (302) 243
"do" (303) 243 244 245 249
"for" (304) 244 245
"to" (305) 244
"downto" (306) 245
"with" (307) 249
"nil" (308) 116 144
"read" (309) 195
"readln" (310) 196
"write" (311) 193
"writeln" (312) 194
"in" (313) 181
"or" (314) 172
"div" (315) 163
"mod" (316) 164
"and" (317) 165
"not" (318) 156
ASSIGNMENT_PRECEDENCE (319)
":=" (320) 214 215 244 245
".." (321) 70 202
"<>" (322)
"<=" (323)
">=" (324)
RE (325) 179
LE (326) 178
NOTEQUAL (327) 180
POSITIVE (328)
NEGATIVE (329)


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
pascal (94)
    on left: 1 2, on right: 0
program (95)
    on left: 3 4, on right: 1
program_heading (96)
    on left: 5 6, on right: 3 4
program_parameters (97)
    on left: 7, on right: 6
uses_clause (98)
    on left: 8, on right: 4 278
block (99)
    on left: 11, on right: 3 4 253 259
$@1 (100)
    on left: 9, on right: 11
$@2 (101)
    on left: 10, on right: 11
label_declaration_part (102)
    on left: 12 13, on right: 11
label_list (103)
    on left: 14 15, on right: 12 14
label (104)
    on left: 16, on right: 14 15 204 205 206 219
constant_declaration_part (105)
    on left: 17 18, on right: 11 277 280
constant_declaration_list (106)
    on left: 19 20, on right: 17 19
constant_declaration (107)
    on left: 21, on right: 19 20
constant (108)
    on left: 22 23 24 25 26 27, on right: 21 70 108 109
constant_identifier (109)
    on left: 28, on right: 22 23
type_declaration_part (110)
    on left: 29 30, on right: 11 277 280
type_declaration_list (111)
    on left: 31 32, on right: 29 31
type_declaration (112)
    on left: 33, on right: 31 32
variable_declaration_part (113)
    on left: 34 35, on right: 11 277 280
variable_declaration_list (114)
    on left: 36 37, on right: 34 36
variable_declaration (115)
    on left: 38, on right: 36 37
procedure_and_function_declaration_part (116)
    on left: 39 40, on right: 11 277 280
procedure_and_function_declaration_list (117)
    on left: 41 42, on right: 39 41
procedure_and_function_declaration (118)
    on left: 43 44, on right: 41 42
statement_part (119)
    on left: 45 46, on right: 11
sign (120)
    on left: 47 48, on right: 23 86 89 148 166
identifier_list (121)
    on left: 49 50, on right: 7 8 38 49 69 101 271 272
type (122)
    on left: 51 52 53 54, on right: 33 38 81 101 113 273
simple_type (123)
    on left: 55 56 57, on right: 51
ordinal_type (124)
    on left: 58 59 60, on right: 55 84 85 86 111
ordinal_type_identifier (125)
    on left: 61 62 63 64 65 66, on right: 60
type_boolean (126)
    on left: 67 68, on right: 158
enumerated_type (127)
    on left: 69, on right: 59
subrange_type (128)
    on left: 70, on right: 58
real_type (129)
    on left: 71, on right: 56
real_type_identifier (130)
    on left: 72, on right: 71
string_type (131)
    on left: 73 74, on right: 57
structured_type (132)
    on left: 75 76, on right: 52
type_list (133)
    on left: 77 78 79 80, on right: 75 76
array_type (134)
    on left: 81, on right: 77
index_type_list (135)
    on left: 82 83, on right: 81 82
ordinal_type_expression (136)
    on left: 84 85 86, on right: 82 83
signed_number_expression_list (137)
    on left: 87 88, on right: 85 87
unsigned_number_expression_list (138)
    on left: 89 90, on right: 86 89
record_type (139)
    on left: 91 92, on right: 80
field_list (140)
    on left: 93 94 95 96 97 98, on right: 92 107
fixed_part (141)
    on left: 99 100, on right: 93 94 95 96 99
field_declaration (142)
    on left: 101, on right: 99 100
variant_part (143)
    on left: 102 103, on right: 95 96 97 98
variant_list (144)
    on left: 104 105, on right: 102 103 104
variant (145)
    on left: 106 107, on right: 104 105
constant_list (146)
    on left: 108 109, on right: 106 107 108 237
tag_field_type (147)
    on left: 110, on right: 102 103
set_type (148)
    on left: 111, on right: 78
file_type (149)
    on left: 112 113, on right: 79
pointer_type (150)
    on left: 114 115, on right: 53
pointer_type_identifier (151)
    on left: 116, on right: 115
base_type (152)
    on left: 117 118 119 120 121 122 123 124 125 126 127 128, on right:
    114 183 188 262 263
variable_reference (153)
    on left: 129, on right: 150 151 210 214 250 251
variable_identifier (154)
    on left: 130, on right: 129
qualifier_list (155)
    on left: 131 132, on right: 129 131
qualifier (156)
    on left: 133 134 135, on right: 131 132
index (157)
    on left: 136, on right: 133
expression_list (158)
    on left: 137 138, on right: 136 137
field_designator (159)
    on left: 139 140, on right: 134
unsigned_constant (160)
    on left: 141 142 143 144, on right: 152
unsigned_number (161)
    on left: 145 146 147, on right: 89 90 128 141 148 149
signed_number (162)
    on left: 148 149, on right: 24 25 87 88
factor (163)
    on left: 150 151 152 153 154 155 156 157 158, on right: 156 159
    160
term (164)
    on left: 159 160, on right: 159 168 169
term_operator_list (165)
    on left: 161 162 163 164 165, on right: 85 87 159
simple_expression (166)
    on left: 166 167, on right: 173 174
simple_expression_term_operator_iterable (167)
    on left: 168 169, on right: 166 167 168
simple_expression_term_operator_list (168)
    on left: 170 171 172, on right: 168
expression (169)
    on left: 173 174, on right: 137 138 155 191 201 202 214 215 229
    230 231 232 233 234 242 243 247 248
relational_operator (170)
    on left: 175 176 177 178 179 180 181, on right: 174
function_call (171)
    on left: 182 183, on right: 65 140 153
function_identifier (172)
    on left: 184 185, on right: 182 183 215
actual_parameter_list (173)
    on left: 186 187 188, on right: 182 183 217 218
actual_parameter_iterable (174)
    on left: 189 190, on right: 186 188 189
actual_parameter (175)
    on left: 191 192, on right: 189 190
procedure_identifier (176)
    on left: 193 194 195 196, on right: 192 216 217
set_constructor (177)
    on left: 197 198, on right: 154
member_group_list (178)
    on left: 199 200, on right: 198 199
member_group (179)
    on left: 201 202, on right: 199 200
statement (180)
    on left: 203 204 205 206 207 208 209 210, on right: 225 226 229
    230 237 238 243 244 245 249
simple_statement (181)
    on left: 211 212 213, on right: 205 207
assignment_statement (182)
    on left: 214 215, on right: 211
procedure_statement (183)
    on left: 216 217 218, on right: 212
goto_statement (184)
    on left: 219, on right: 213
structured_statement (185)
    on left: 220 221 222 223, on right: 206 208
compound_statement (186)
    on left: 224, on right: 45 220
statement_list (187)
    on left: 225 226, on right: 224 225 242
conditional_statement (188)
    on left: 227 228, on right: 221
if_statement (189)
    on left: 229 230, on right: 227
case_statement (190)
    on left: 231 232 233 234, on right: 228
case_list (191)
    on left: 235 236, on right: 231 232 233 234 235
case (192)
    on left: 237, on right: 235 236
otherwise_clause (193)
    on left: 238, on right: 232 233
repetitive_statement (194)
    on left: 239 240 241, on right: 222
repeat_statement (195)
    on left: 242, on right: 239
while_statement (196)
    on left: 243, on right: 240
for_statement (197)
    on left: 244 245, on right: 241
control_variable (198)
    on left: 246, on right: 244 245
initial_value (199)
    on left: 247, on right: 244 245
final_value (200)
    on left: 248, on right: 244 245
with_statement (201)
    on left: 249, on right: 223
record_variable_reference_list (202)
    on left: 250 251, on right: 249 250
procedure_declaration (203)
    on left: 252, on right: 43
procedure_body (204)
    on left: 253 254 255, on right: 252
procedure_heading (205)
    on left: 256 257, on right: 252 269
function_declaration (206)
    on left: 258, on right: 44
function_body (207)
    on left: 259 260 261, on right: 258
function_heading (208)
    on left: 262 263, on right: 258 270
formal_parameter_list (209)
    on left: 264 265, on right: 257 263
formal_parameter_list_iterable (210)
    on left: 266 267, on right: 264 266
formal_parameter_list_iterable_list (211)
    on left: 268 269 270, on right: 266 267
parameter_declaration (212)
    on left: 271 272, on right: 268
type_identifier (213)
    on left: 273, on right: 271 272
regular_unit (214)
    on left: 275, on right: 2
$@3 (215)
    on left: 274, on right: 275
unit_heading (216)
    on left: 276, on right: 275
interface_part (217)
    on left: 277, on right: 275
uses_clause_empty (218)
    on left: 278 279, on right: 277
implementation_part (219)
    on left: 280, on right: 275


state 0

    0 $accept: . pascal $end

    "program"  shift, and go to state 1
    "unit"     shift, and go to state 2

    pascal           go to state 3
    program          go to state 4
    program_heading  go to state 5
    regular_unit     go to state 6
    unit_heading     go to state 7


state 1

    5 program_heading: "program" . IDENTIFIER
    6                | "program" . IDENTIFIER '(' program_parameters ')'

    IDENTIFIER  shift, and go to state 8


state 2

  276 unit_heading: "unit" . IDENTIFIER

    IDENTIFIER  shift, and go to state 9


state 3

    0 $accept: pascal . $end

    $end  shift, and go to state 10


state 4

    1 pascal: program .

    $default  reduce using rule 1 (pascal)


state 5

    3 program: program_heading . ';' block '.'
    4        | program_heading . ';' uses_clause ';' block '.'

    ';'  shift, and go to state 11


state 6

    2 pascal: regular_unit .

    $default  reduce using rule 2 (pascal)


state 7

  275 regular_unit: unit_heading . ';' interface_part $@3 implementation_part "end" '.'

    ';'  shift, and go to state 12


state 8

    5 program_heading: "program" IDENTIFIER .
    6                | "program" IDENTIFIER . '(' program_parameters ')'

    '('  shift, and go to state 13

    $default  reduce using rule 5 (program_heading)


state 9

  276 unit_heading: "unit" IDENTIFIER .

    $default  reduce using rule 276 (unit_heading)


state 10

    0 $accept: pascal $end .

    $default  accept


state 11

    3 program: program_heading ';' . block '.'
    4        | program_heading ';' . uses_clause ';' block '.'

    "uses"   shift, and go to state 14
    "label"  shift, and go to state 15

    $default  reduce using rule 13 (label_declaration_part)

    uses_clause             go to state 16
    block                   go to state 17
    label_declaration_part  go to state 18


state 12

  275 regular_unit: unit_heading ';' . interface_part $@3 implementation_part "end" '.'

    "interface"  shift, and go to state 19

    interface_part  go to state 20


state 13

    6 program_heading: "program" IDENTIFIER '(' . program_parameters ')'

    IDENTIFIER  shift, and go to state 21

    program_parameters  go to state 22
    identifier_list     go to state 23


state 14

    8 uses_clause: "uses" . identifier_list

    IDENTIFIER  shift, and go to state 21

    identifier_list  go to state 24


state 15

   12 label_declaration_part: "label" . label_list ';'

    DECIMAL_INT  shift, and go to state 25

    label_list  go to state 26
    label       go to state 27


state 16

    4 program: program_heading ';' uses_clause . ';' block '.'

    ';'  shift, and go to state 28


state 17

    3 program: program_heading ';' block . '.'

    '.'  shift, and go to state 29


state 18

   11 block: label_declaration_part . constant_declaration_part type_declaration_part variable_declaration_part $@1 procedure_and_function_declaration_part $@2 statement_part

    "const"  shift, and go to state 30

    $default  reduce using rule 18 (constant_declaration_part)

    constant_declaration_part  go to state 31


state 19

  277 interface_part: "interface" . uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "uses"  shift, and go to state 14

    $default  reduce using rule 279 (uses_clause_empty)

    uses_clause        go to state 32
    uses_clause_empty  go to state 33


state 20

  275 regular_unit: unit_heading ';' interface_part . $@3 implementation_part "end" '.'

    $default  reduce using rule 274 ($@3)

    $@3  go to state 34


state 21

   50 identifier_list: IDENTIFIER .

    $default  reduce using rule 50 (identifier_list)


state 22

    6 program_heading: "program" IDENTIFIER '(' program_parameters . ')'

    ')'  shift, and go to state 35


state 23

    7 program_parameters: identifier_list .
   49 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 36

    $default  reduce using rule 7 (program_parameters)


state 24

    8 uses_clause: "uses" identifier_list .
   49 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 36

    $default  reduce using rule 8 (uses_clause)


state 25

   16 label: DECIMAL_INT .

    $default  reduce using rule 16 (label)


state 26

   12 label_declaration_part: "label" label_list . ';'
   14 label_list: label_list . ',' label

    ';'  shift, and go to state 37
    ','  shift, and go to state 38


state 27

   15 label_list: label .

    $default  reduce using rule 15 (label_list)


state 28

    4 program: program_heading ';' uses_clause ';' . block '.'

    "label"  shift, and go to state 15

    $default  reduce using rule 13 (label_declaration_part)

    block                   go to state 39
    label_declaration_part  go to state 18


state 29

    3 program: program_heading ';' block '.' .

    $default  reduce using rule 3 (program)


state 30

   17 constant_declaration_part: "const" . constant_declaration_list

    IDENTIFIER  shift, and go to state 40

    constant_declaration_list  go to state 41
    constant_declaration       go to state 42


state 31

   11 block: label_declaration_part constant_declaration_part . type_declaration_part variable_declaration_part $@1 procedure_and_function_declaration_part $@2 statement_part

    "type"  shift, and go to state 43

    $default  reduce using rule 30 (type_declaration_part)

    type_declaration_part  go to state 44


state 32

  278 uses_clause_empty: uses_clause .

    $default  reduce using rule 278 (uses_clause_empty)


state 33

  277 interface_part: "interface" uses_clause_empty . constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "const"  shift, and go to state 30

    $default  reduce using rule 18 (constant_declaration_part)

    constant_declaration_part  go to state 45


state 34

  275 regular_unit: unit_heading ';' interface_part $@3 . implementation_part "end" '.'

    "implementation"  shift, and go to state 46

    implementation_part  go to state 47


state 35

    6 program_heading: "program" IDENTIFIER '(' program_parameters ')' .

    $default  reduce using rule 6 (program_heading)


state 36

   49 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 48


state 37

   12 label_declaration_part: "label" label_list ';' .

    $default  reduce using rule 12 (label_declaration_part)


state 38

   14 label_list: label_list ',' . label

    DECIMAL_INT  shift, and go to state 25

    label  go to state 49


state 39

    4 program: program_heading ';' uses_clause ';' block . '.'

    '.'  shift, and go to state 50


state 40

   21 constant_declaration: IDENTIFIER . '=' constant ';'

    '='  shift, and go to state 51


state 41

   17 constant_declaration_part: "const" constant_declaration_list .
   19 constant_declaration_list: constant_declaration_list . constant_declaration

    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 17 (constant_declaration_part)

    constant_declaration  go to state 52


state 42

   20 constant_declaration_list: constant_declaration .

    $default  reduce using rule 20 (constant_declaration_list)


state 43

   29 type_declaration_part: "type" . type_declaration_list

    IDENTIFIER  shift, and go to state 53

    type_declaration_list  go to state 54
    type_declaration       go to state 55


state 44

   11 block: label_declaration_part constant_declaration_part type_declaration_part . variable_declaration_part $@1 procedure_and_function_declaration_part $@2 statement_part

    "var"  shift, and go to state 56

    $default  reduce using rule 35 (variable_declaration_part)

    variable_declaration_part  go to state 57


state 45

  277 interface_part: "interface" uses_clause_empty constant_declaration_part . type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "type"  shift, and go to state 43

    $default  reduce using rule 30 (type_declaration_part)

    type_declaration_part  go to state 58


state 46

  280 implementation_part: "implementation" . constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "const"  shift, and go to state 30

    $default  reduce using rule 18 (constant_declaration_part)

    constant_declaration_part  go to state 59


state 47

  275 regular_unit: unit_heading ';' interface_part $@3 implementation_part . "end" '.'

    "end"  shift, and go to state 60


state 48

   49 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 49 (identifier_list)


state 49

   14 label_list: label_list ',' label .

    $default  reduce using rule 14 (label_list)


state 50

    4 program: program_heading ';' uses_clause ';' block '.' .

    $default  reduce using rule 4 (program)


state 51

   21 constant_declaration: IDENTIFIER '=' . constant ';'

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '#'            shift, and go to state 69

    constant             go to state 70
    constant_identifier  go to state 71
    sign                 go to state 72
    unsigned_number      go to state 73
    signed_number        go to state 74


state 52

   19 constant_declaration_list: constant_declaration_list constant_declaration .

    $default  reduce using rule 19 (constant_declaration_list)


state 53

   33 type_declaration: IDENTIFIER . '=' type ';'

    '='  shift, and go to state 75


state 54

   29 type_declaration_part: "type" type_declaration_list .
   31 type_declaration_list: type_declaration_list . type_declaration

    IDENTIFIER  shift, and go to state 53

    $default  reduce using rule 29 (type_declaration_part)

    type_declaration  go to state 76


state 55

   32 type_declaration_list: type_declaration .

    $default  reduce using rule 32 (type_declaration_list)


state 56

   34 variable_declaration_part: "var" . variable_declaration_list

    IDENTIFIER  shift, and go to state 21

    variable_declaration_list  go to state 77
    variable_declaration       go to state 78
    identifier_list            go to state 79


state 57

   11 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part . $@1 procedure_and_function_declaration_part $@2 statement_part

    $default  reduce using rule 9 ($@1)

    $@1  go to state 80


state 58

  277 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part . variable_declaration_part procedure_and_function_declaration_part

    "var"  shift, and go to state 56

    $default  reduce using rule 35 (variable_declaration_part)

    variable_declaration_part  go to state 81


state 59

  280 implementation_part: "implementation" constant_declaration_part . type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "type"  shift, and go to state 43

    $default  reduce using rule 30 (type_declaration_part)

    type_declaration_part  go to state 82


state 60

  275 regular_unit: unit_heading ';' interface_part $@3 implementation_part "end" . '.'

    '.'  shift, and go to state 83


state 61

  145 unsigned_number: DECIMAL_INT .

    $default  reduce using rule 145 (unsigned_number)


state 62

  146 unsigned_number: HEXADECIMAL .

    $default  reduce using rule 146 (unsigned_number)


state 63

  147 unsigned_number: REAL_DECIMAL .

    $default  reduce using rule 147 (unsigned_number)


state 64

   28 constant_identifier: IDENTIFIER .

    $default  reduce using rule 28 (constant_identifier)


state 65

   26 constant: QUOTED_STRING .

    $default  reduce using rule 26 (constant)


state 66

   27 constant: QUOTED_CHAR .

    $default  reduce using rule 27 (constant)


state 67

   47 sign: '+' .

    $default  reduce using rule 47 (sign)


state 68

   48 sign: '-' .

    $default  reduce using rule 48 (sign)


state 69

   25 constant: '#' . signed_number

    DECIMAL_INT   shift, and go to state 61
    HEXADECIMAL   shift, and go to state 62
    REAL_DECIMAL  shift, and go to state 63
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68

    sign             go to state 84
    unsigned_number  go to state 73
    signed_number    go to state 85


state 70

   21 constant_declaration: IDENTIFIER '=' constant . ';'

    ';'  shift, and go to state 86


state 71

   22 constant: constant_identifier .

    $default  reduce using rule 22 (constant)


state 72

   23 constant: sign . constant_identifier
  148 signed_number: sign . unsigned_number

    DECIMAL_INT   shift, and go to state 61
    HEXADECIMAL   shift, and go to state 62
    REAL_DECIMAL  shift, and go to state 63
    IDENTIFIER    shift, and go to state 64

    constant_identifier  go to state 87
    unsigned_number      go to state 88


state 73

  149 signed_number: unsigned_number .

    $default  reduce using rule 149 (signed_number)


state 74

   24 constant: signed_number .

    $default  reduce using rule 24 (constant)


state 75

   33 type_declaration: IDENTIFIER '=' . type ';'

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 89
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 90
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "word"         shift, and go to state 93
    "char"         shift, and go to state 94
    "boolean"      shift, and go to state 95
    "string"       shift, and go to state 96
    "packed"       shift, and go to state 97
    "array"        shift, and go to state 98
    "record"       shift, and go to state 99
    "of"           shift, and go to state 100
    "set"          shift, and go to state 101
    "function"     shift, and go to state 102
    "file"         shift, and go to state 103
    "nil"          shift, and go to state 104
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 105
    '#'            shift, and go to state 69
    '^'            shift, and go to state 106

    constant                 go to state 107
    constant_identifier      go to state 71
    sign                     go to state 72
    type                     go to state 108
    simple_type              go to state 109
    ordinal_type             go to state 110
    ordinal_type_identifier  go to state 111
    enumerated_type          go to state 112
    subrange_type            go to state 113
    real_type                go to state 114
    real_type_identifier     go to state 115
    string_type              go to state 116
    structured_type          go to state 117
    type_list                go to state 118
    array_type               go to state 119
    record_type              go to state 120
    set_type                 go to state 121
    file_type                go to state 122
    pointer_type             go to state 123
    pointer_type_identifier  go to state 124
    unsigned_number          go to state 73
    signed_number            go to state 74
    function_call            go to state 125
    function_identifier      go to state 126


state 76

   31 type_declaration_list: type_declaration_list type_declaration .

    $default  reduce using rule 31 (type_declaration_list)


state 77

   34 variable_declaration_part: "var" variable_declaration_list .
   36 variable_declaration_list: variable_declaration_list . variable_declaration

    IDENTIFIER  shift, and go to state 21

    $default  reduce using rule 34 (variable_declaration_part)

    variable_declaration  go to state 127
    identifier_list       go to state 79


state 78

   37 variable_declaration_list: variable_declaration .

    $default  reduce using rule 37 (variable_declaration_list)


state 79

   38 variable_declaration: identifier_list . ':' type ';'
   49 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 36
    ':'  shift, and go to state 128


state 80

   11 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part $@1 . procedure_and_function_declaration_part $@2 statement_part

    "function"   shift, and go to state 129
    "procedure"  shift, and go to state 130

    $default  reduce using rule 40 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 131
    procedure_and_function_declaration_list  go to state 132
    procedure_and_function_declaration       go to state 133
    procedure_declaration                    go to state 134
    procedure_heading                        go to state 135
    function_declaration                     go to state 136
    function_heading                         go to state 137


state 81

  277 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part . procedure_and_function_declaration_part

    "function"   shift, and go to state 129
    "procedure"  shift, and go to state 130

    $default  reduce using rule 40 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 138
    procedure_and_function_declaration_list  go to state 132
    procedure_and_function_declaration       go to state 133
    procedure_declaration                    go to state 134
    procedure_heading                        go to state 135
    function_declaration                     go to state 136
    function_heading                         go to state 137


state 82

  280 implementation_part: "implementation" constant_declaration_part type_declaration_part . variable_declaration_part procedure_and_function_declaration_part

    "var"  shift, and go to state 56

    $default  reduce using rule 35 (variable_declaration_part)

    variable_declaration_part  go to state 139


state 83

  275 regular_unit: unit_heading ';' interface_part $@3 implementation_part "end" '.' .

    $default  reduce using rule 275 (regular_unit)


state 84

  148 signed_number: sign . unsigned_number

    DECIMAL_INT   shift, and go to state 61
    HEXADECIMAL   shift, and go to state 62
    REAL_DECIMAL  shift, and go to state 63

    unsigned_number  go to state 88


state 85

   25 constant: '#' signed_number .

    $default  reduce using rule 25 (constant)


state 86

   21 constant_declaration: IDENTIFIER '=' constant ';' .

    $default  reduce using rule 21 (constant_declaration)


state 87

   23 constant: sign constant_identifier .

    $default  reduce using rule 23 (constant)


state 88

  148 signed_number: sign unsigned_number .

    $default  reduce using rule 148 (signed_number)


state 89

   28 constant_identifier: IDENTIFIER .
   54 type: IDENTIFIER .
  185 function_identifier: IDENTIFIER .

    ".."      reduce using rule 28 (constant_identifier)
    '('       reduce using rule 185 (function_identifier)
    $default  reduce using rule 54 (type)


state 90

   72 real_type_identifier: "real" .

    $default  reduce using rule 72 (real_type_identifier)


state 91

   61 ordinal_type_identifier: "integer" .

    $default  reduce using rule 61 (ordinal_type_identifier)


state 92

   62 ordinal_type_identifier: "longint" .

    $default  reduce using rule 62 (ordinal_type_identifier)


state 93

   66 ordinal_type_identifier: "word" .

    $default  reduce using rule 66 (ordinal_type_identifier)


state 94

   63 ordinal_type_identifier: "char" .

    $default  reduce using rule 63 (ordinal_type_identifier)


state 95

   64 ordinal_type_identifier: "boolean" .

    $default  reduce using rule 64 (ordinal_type_identifier)


state 96

   73 string_type: "string" . '[' DECIMAL_INT ']'
   74            | "string" . '[' IDENTIFIER ']'

    '['  shift, and go to state 140


state 97

   75 structured_type: "packed" . type_list

    "array"   shift, and go to state 98
    "record"  shift, and go to state 99
    "of"      shift, and go to state 100
    "set"     shift, and go to state 101
    "file"    shift, and go to state 103

    type_list    go to state 141
    array_type   go to state 119
    record_type  go to state 120
    set_type     go to state 121
    file_type    go to state 122


state 98

   81 array_type: "array" . '[' index_type_list ']' "of" type

    '['  shift, and go to state 142


state 99

   91 record_type: "record" . "end"
   92            | "record" . field_list "end"

    IDENTIFIER  shift, and go to state 21
    "end"       shift, and go to state 143
    "case"      shift, and go to state 144

    identifier_list    go to state 145
    field_list         go to state 146
    fixed_part         go to state 147
    field_declaration  go to state 148
    variant_part       go to state 149


state 100

  113 file_type: "of" . type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 89
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 90
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "word"         shift, and go to state 93
    "char"         shift, and go to state 94
    "boolean"      shift, and go to state 95
    "string"       shift, and go to state 96
    "packed"       shift, and go to state 97
    "array"        shift, and go to state 98
    "record"       shift, and go to state 99
    "of"           shift, and go to state 100
    "set"          shift, and go to state 101
    "function"     shift, and go to state 102
    "file"         shift, and go to state 103
    "nil"          shift, and go to state 104
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 105
    '#'            shift, and go to state 69
    '^'            shift, and go to state 106

    constant                 go to state 107
    constant_identifier      go to state 71
    sign                     go to state 72
    type                     go to state 150
    simple_type              go to state 109
    ordinal_type             go to state 110
    ordinal_type_identifier  go to state 111
    enumerated_type          go to state 112
    subrange_type            go to state 113
    real_type                go to state 114
    real_type_identifier     go to state 115
    string_type              go to state 116
    structured_type          go to state 117
    type_list                go to state 118
    array_type               go to state 119
    record_type              go to state 120
    set_type                 go to state 121
    file_type                go to state 122
    pointer_type             go to state 123
    pointer_type_identifier  go to state 124
    unsigned_number          go to state 73
    signed_number            go to state 74
    function_call            go to state 125
    function_identifier      go to state 126


state 101

  111 set_type: "set" . "of" ordinal_type

    "of"  shift, and go to state 151


state 102

  184 function_identifier: "function" .

    $default  reduce using rule 184 (function_identifier)


state 103

  112 file_type: "file" .

    $default  reduce using rule 112 (file_type)


state 104

  116 pointer_type_identifier: "nil" .

    $default  reduce using rule 116 (pointer_type_identifier)


state 105

   69 enumerated_type: '(' . identifier_list ')'

    IDENTIFIER  shift, and go to state 21

    identifier_list  go to state 152


state 106

  114 pointer_type: '^' . base_type

    DECIMAL_INT   shift, and go to state 61
    HEXADECIMAL   shift, and go to state 62
    REAL_DECIMAL  shift, and go to state 63
    IDENTIFIER    shift, and go to state 153
    "real"        shift, and go to state 154
    "integer"     shift, and go to state 155
    "longint"     shift, and go to state 156
    "char"        shift, and go to state 157
    "boolean"     shift, and go to state 158
    "string"      shift, and go to state 159
    "array"       shift, and go to state 160
    "record"      shift, and go to state 161
    "function"    shift, and go to state 162
    "file"        shift, and go to state 163

    base_type        go to state 164
    unsigned_number  go to state 165


state 107

   70 subrange_type: constant . ".." constant

    ".."  shift, and go to state 166


state 108

   33 type_declaration: IDENTIFIER '=' type . ';'

    ';'  shift, and go to state 167


state 109

   51 type: simple_type .

    $default  reduce using rule 51 (type)


state 110

   55 simple_type: ordinal_type .

    $default  reduce using rule 55 (simple_type)


state 111

   60 ordinal_type: ordinal_type_identifier .

    $default  reduce using rule 60 (ordinal_type)


state 112

   59 ordinal_type: enumerated_type .

    $default  reduce using rule 59 (ordinal_type)


state 113

   58 ordinal_type: subrange_type .

    $default  reduce using rule 58 (ordinal_type)


state 114

   56 simple_type: real_type .

    $default  reduce using rule 56 (simple_type)


state 115

   71 real_type: real_type_identifier .

    $default  reduce using rule 71 (real_type)


state 116

   57 simple_type: string_type .

    $default  reduce using rule 57 (simple_type)


state 117

   52 type: structured_type .

    $default  reduce using rule 52 (type)


state 118

   76 structured_type: type_list .

    $default  reduce using rule 76 (structured_type)


state 119

   77 type_list: array_type .

    $default  reduce using rule 77 (type_list)


state 120

   80 type_list: record_type .

    $default  reduce using rule 80 (type_list)


state 121

   78 type_list: set_type .

    $default  reduce using rule 78 (type_list)


state 122

   79 type_list: file_type .

    $default  reduce using rule 79 (type_list)


state 123

   53 type: pointer_type .

    $default  reduce using rule 53 (type)


state 124

  115 pointer_type: pointer_type_identifier .

    $default  reduce using rule 115 (pointer_type)


state 125

   65 ordinal_type_identifier: function_call .

    $default  reduce using rule 65 (ordinal_type_identifier)


state 126

  182 function_call: function_identifier . actual_parameter_list
  183              | function_identifier . actual_parameter_list ':' base_type

    '('  shift, and go to state 168

    actual_parameter_list  go to state 169


state 127

   36 variable_declaration_list: variable_declaration_list variable_declaration .

    $default  reduce using rule 36 (variable_declaration_list)


state 128

   38 variable_declaration: identifier_list ':' . type ';'

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 89
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 90
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "word"         shift, and go to state 93
    "char"         shift, and go to state 94
    "boolean"      shift, and go to state 95
    "string"       shift, and go to state 96
    "packed"       shift, and go to state 97
    "array"        shift, and go to state 98
    "record"       shift, and go to state 99
    "of"           shift, and go to state 100
    "set"          shift, and go to state 101
    "function"     shift, and go to state 102
    "file"         shift, and go to state 103
    "nil"          shift, and go to state 104
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 105
    '#'            shift, and go to state 69
    '^'            shift, and go to state 106

    constant                 go to state 107
    constant_identifier      go to state 71
    sign                     go to state 72
    type                     go to state 170
    simple_type              go to state 109
    ordinal_type             go to state 110
    ordinal_type_identifier  go to state 111
    enumerated_type          go to state 112
    subrange_type            go to state 113
    real_type                go to state 114
    real_type_identifier     go to state 115
    string_type              go to state 116
    structured_type          go to state 117
    type_list                go to state 118
    array_type               go to state 119
    record_type              go to state 120
    set_type                 go to state 121
    file_type                go to state 122
    pointer_type             go to state 123
    pointer_type_identifier  go to state 124
    unsigned_number          go to state 73
    signed_number            go to state 74
    function_call            go to state 125
    function_identifier      go to state 126


state 129

  262 function_heading: "function" . IDENTIFIER ':' base_type
  263                 | "function" . IDENTIFIER formal_parameter_list ':' base_type

    IDENTIFIER  shift, and go to state 171


state 130

  256 procedure_heading: "procedure" . IDENTIFIER
  257                  | "procedure" . IDENTIFIER formal_parameter_list

    IDENTIFIER  shift, and go to state 172


state 131

   11 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part $@1 procedure_and_function_declaration_part . $@2 statement_part

    $default  reduce using rule 10 ($@2)

    $@2  go to state 173


state 132

   39 procedure_and_function_declaration_part: procedure_and_function_declaration_list .
   41 procedure_and_function_declaration_list: procedure_and_function_declaration_list . procedure_and_function_declaration

    "function"   shift, and go to state 129
    "procedure"  shift, and go to state 130

    $default  reduce using rule 39 (procedure_and_function_declaration_part)

    procedure_and_function_declaration  go to state 174
    procedure_declaration               go to state 134
    procedure_heading                   go to state 135
    function_declaration                go to state 136
    function_heading                    go to state 137


state 133

   42 procedure_and_function_declaration_list: procedure_and_function_declaration .

    $default  reduce using rule 42 (procedure_and_function_declaration_list)


state 134

   43 procedure_and_function_declaration: procedure_declaration .

    $default  reduce using rule 43 (procedure_and_function_declaration)


state 135

  252 procedure_declaration: procedure_heading . ';' procedure_body ';'

    ';'  shift, and go to state 175


state 136

   44 procedure_and_function_declaration: function_declaration .

    $default  reduce using rule 44 (procedure_and_function_declaration)


state 137

  258 function_declaration: function_heading . ';' function_body ';'

    ';'  shift, and go to state 176


state 138

  277 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part .

    $default  reduce using rule 277 (interface_part)


state 139

  280 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part . procedure_and_function_declaration_part

    "function"   shift, and go to state 129
    "procedure"  shift, and go to state 130

    $default  reduce using rule 40 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 177
    procedure_and_function_declaration_list  go to state 132
    procedure_and_function_declaration       go to state 133
    procedure_declaration                    go to state 134
    procedure_heading                        go to state 135
    function_declaration                     go to state 136
    function_heading                         go to state 137


state 140

   73 string_type: "string" '[' . DECIMAL_INT ']'
   74            | "string" '[' . IDENTIFIER ']'

    DECIMAL_INT  shift, and go to state 178
    IDENTIFIER   shift, and go to state 179


state 141

   75 structured_type: "packed" type_list .

    $default  reduce using rule 75 (structured_type)


state 142

   81 array_type: "array" '[' . index_type_list ']' "of" type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 180
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "word"         shift, and go to state 93
    "char"         shift, and go to state 94
    "boolean"      shift, and go to state 95
    "function"     shift, and go to state 102
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 105
    '#'            shift, and go to state 69

    constant                 go to state 107
    constant_identifier      go to state 71
    sign                     go to state 72
    ordinal_type             go to state 181
    ordinal_type_identifier  go to state 111
    enumerated_type          go to state 112
    subrange_type            go to state 113
    index_type_list          go to state 182
    ordinal_type_expression  go to state 183
    unsigned_number          go to state 73
    signed_number            go to state 74
    function_call            go to state 125
    function_identifier      go to state 126


state 143

   91 record_type: "record" "end" .

    $default  reduce using rule 91 (record_type)


state 144

  102 variant_part: "case" . tag_field_type "of" variant_list
  103             | "case" . IDENTIFIER ':' tag_field_type "of" variant_list

    IDENTIFIER  shift, and go to state 184

    tag_field_type  go to state 185


state 145

   49 identifier_list: identifier_list . ',' IDENTIFIER
  101 field_declaration: identifier_list . ':' type

    ','  shift, and go to state 36
    ':'  shift, and go to state 186


state 146

   92 record_type: "record" field_list . "end"

    "end"  shift, and go to state 187


state 147

   93 field_list: fixed_part .
   94           | fixed_part . ';'
   95           | fixed_part . ';' variant_part
   96           | fixed_part . ';' variant_part ';'
   99 fixed_part: fixed_part . ';' field_declaration

    ';'  shift, and go to state 188

    $default  reduce using rule 93 (field_list)


state 148

  100 fixed_part: field_declaration .

    $default  reduce using rule 100 (fixed_part)


state 149

   97 field_list: variant_part .
   98           | variant_part . ';'

    ';'  shift, and go to state 189

    $default  reduce using rule 97 (field_list)


state 150

  113 file_type: "of" type .

    $default  reduce using rule 113 (file_type)


state 151

  111 set_type: "set" "of" . ordinal_type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 180
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "word"         shift, and go to state 93
    "char"         shift, and go to state 94
    "boolean"      shift, and go to state 95
    "function"     shift, and go to state 102
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 105
    '#'            shift, and go to state 69

    constant                 go to state 107
    constant_identifier      go to state 71
    sign                     go to state 72
    ordinal_type             go to state 190
    ordinal_type_identifier  go to state 111
    enumerated_type          go to state 112
    subrange_type            go to state 113
    unsigned_number          go to state 73
    signed_number            go to state 74
    function_call            go to state 125
    function_identifier      go to state 126


state 152

   49 identifier_list: identifier_list . ',' IDENTIFIER
   69 enumerated_type: '(' identifier_list . ')'

    ')'  shift, and go to state 191
    ','  shift, and go to state 36


state 153

  125 base_type: IDENTIFIER .

    $default  reduce using rule 125 (base_type)


state 154

  127 base_type: "real" .

    $default  reduce using rule 127 (base_type)


state 155

  117 base_type: "integer" .

    $default  reduce using rule 117 (base_type)


state 156

  118 base_type: "longint" .

    $default  reduce using rule 118 (base_type)


state 157

  119 base_type: "char" .

    $default  reduce using rule 119 (base_type)


state 158

  120 base_type: "boolean" .

    $default  reduce using rule 120 (base_type)


state 159

  121 base_type: "string" .

    $default  reduce using rule 121 (base_type)


state 160

  124 base_type: "array" .

    $default  reduce using rule 124 (base_type)


state 161

  122 base_type: "record" .

    $default  reduce using rule 122 (base_type)


state 162

  126 base_type: "function" .

    $default  reduce using rule 126 (base_type)


state 163

  123 base_type: "file" .

    $default  reduce using rule 123 (base_type)


state 164

  114 pointer_type: '^' base_type .

    $default  reduce using rule 114 (pointer_type)


state 165

  128 base_type: unsigned_number .

    $default  reduce using rule 128 (base_type)


state 166

   70 subrange_type: constant ".." . constant

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '#'            shift, and go to state 69

    constant             go to state 192
    constant_identifier  go to state 71
    sign                 go to state 72
    unsigned_number      go to state 73
    signed_number        go to state 74


state 167

   33 type_declaration: IDENTIFIER '=' type ';' .

    $default  reduce using rule 33 (type_declaration)


state 168

  186 actual_parameter_list: '(' . actual_parameter_iterable ')'
  187                      | '(' . ')'
  188                      | '(' . actual_parameter_iterable ':' base_type ')'

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "read"         shift, and go to state 199
    "readln"       shift, and go to state 200
    "write"        shift, and go to state 201
    "writeln"      shift, and go to state 202
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    ')'            shift, and go to state 206
    '['            shift, and go to state 207

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 216
    simple_expression_term_operator_iterable  go to state 217
    expression                                go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 126
    actual_parameter_iterable                 go to state 220
    actual_parameter                          go to state 221
    procedure_identifier                      go to state 222
    set_constructor                           go to state 223


state 169

  182 function_call: function_identifier actual_parameter_list .
  183              | function_identifier actual_parameter_list . ':' base_type

    ':'  shift, and go to state 224

    ':'       [reduce using rule 182 (function_call)]
    $default  reduce using rule 182 (function_call)


state 170

   38 variable_declaration: identifier_list ':' type . ';'

    ';'  shift, and go to state 225


state 171

  262 function_heading: "function" IDENTIFIER . ':' base_type
  263                 | "function" IDENTIFIER . formal_parameter_list ':' base_type

    '('  shift, and go to state 226
    ':'  shift, and go to state 227

    formal_parameter_list  go to state 228


state 172

  256 procedure_heading: "procedure" IDENTIFIER .
  257                  | "procedure" IDENTIFIER . formal_parameter_list

    '('  shift, and go to state 226

    $default  reduce using rule 256 (procedure_heading)

    formal_parameter_list  go to state 229


state 173

   11 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part $@1 procedure_and_function_declaration_part $@2 . statement_part

    "begin"  shift, and go to state 230

    $default  reduce using rule 46 (statement_part)

    statement_part      go to state 231
    compound_statement  go to state 232


state 174

   41 procedure_and_function_declaration_list: procedure_and_function_declaration_list procedure_and_function_declaration .

    $default  reduce using rule 41 (procedure_and_function_declaration_list)


state 175

  252 procedure_declaration: procedure_heading ';' . procedure_body ';'

    "label"     shift, and go to state 15
    "forward"   shift, and go to state 233
    "external"  shift, and go to state 234

    $default  reduce using rule 13 (label_declaration_part)

    block                   go to state 235
    label_declaration_part  go to state 18
    procedure_body          go to state 236


state 176

  258 function_declaration: function_heading ';' . function_body ';'

    "label"     shift, and go to state 15
    "forward"   shift, and go to state 237
    "external"  shift, and go to state 238

    $default  reduce using rule 13 (label_declaration_part)

    block                   go to state 239
    label_declaration_part  go to state 18
    function_body           go to state 240


state 177

  280 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part .

    $default  reduce using rule 280 (implementation_part)


state 178

   73 string_type: "string" '[' DECIMAL_INT . ']'

    ']'  shift, and go to state 241


state 179

   74 string_type: "string" '[' IDENTIFIER . ']'

    ']'  shift, and go to state 242


state 180

   28 constant_identifier: IDENTIFIER .
  185 function_identifier: IDENTIFIER .

    '('       reduce using rule 185 (function_identifier)
    $default  reduce using rule 28 (constant_identifier)


state 181

   84 ordinal_type_expression: ordinal_type .
   85                        | ordinal_type . term_operator_list signed_number_expression_list
   86                        | ordinal_type . sign unsigned_number_expression_list

    "div"  shift, and go to state 243
    "mod"  shift, and go to state 244
    "and"  shift, and go to state 245
    '+'    shift, and go to state 67
    '-'    shift, and go to state 68
    '*'    shift, and go to state 246
    '/'    shift, and go to state 247

    $default  reduce using rule 84 (ordinal_type_expression)

    sign                go to state 248
    term_operator_list  go to state 249


state 182

   81 array_type: "array" '[' index_type_list . ']' "of" type
   82 index_type_list: index_type_list . ',' ordinal_type_expression

    ','  shift, and go to state 250
    ']'  shift, and go to state 251


state 183

   83 index_type_list: ordinal_type_expression .

    $default  reduce using rule 83 (index_type_list)


state 184

  103 variant_part: "case" IDENTIFIER . ':' tag_field_type "of" variant_list
  110 tag_field_type: IDENTIFIER .

    ':'  shift, and go to state 252

    $default  reduce using rule 110 (tag_field_type)


state 185

  102 variant_part: "case" tag_field_type . "of" variant_list

    "of"  shift, and go to state 253


state 186

  101 field_declaration: identifier_list ':' . type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 89
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 90
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "word"         shift, and go to state 93
    "char"         shift, and go to state 94
    "boolean"      shift, and go to state 95
    "string"       shift, and go to state 96
    "packed"       shift, and go to state 97
    "array"        shift, and go to state 98
    "record"       shift, and go to state 99
    "of"           shift, and go to state 100
    "set"          shift, and go to state 101
    "function"     shift, and go to state 102
    "file"         shift, and go to state 103
    "nil"          shift, and go to state 104
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 105
    '#'            shift, and go to state 69
    '^'            shift, and go to state 106

    constant                 go to state 107
    constant_identifier      go to state 71
    sign                     go to state 72
    type                     go to state 254
    simple_type              go to state 109
    ordinal_type             go to state 110
    ordinal_type_identifier  go to state 111
    enumerated_type          go to state 112
    subrange_type            go to state 113
    real_type                go to state 114
    real_type_identifier     go to state 115
    string_type              go to state 116
    structured_type          go to state 117
    type_list                go to state 118
    array_type               go to state 119
    record_type              go to state 120
    set_type                 go to state 121
    file_type                go to state 122
    pointer_type             go to state 123
    pointer_type_identifier  go to state 124
    unsigned_number          go to state 73
    signed_number            go to state 74
    function_call            go to state 125
    function_identifier      go to state 126


state 187

   92 record_type: "record" field_list "end" .

    $default  reduce using rule 92 (record_type)


state 188

   94 field_list: fixed_part ';' .
   95           | fixed_part ';' . variant_part
   96           | fixed_part ';' . variant_part ';'
   99 fixed_part: fixed_part ';' . field_declaration

    IDENTIFIER  shift, and go to state 21
    "case"      shift, and go to state 144

    $default  reduce using rule 94 (field_list)

    identifier_list    go to state 145
    field_declaration  go to state 255
    variant_part       go to state 256


state 189

   98 field_list: variant_part ';' .

    $default  reduce using rule 98 (field_list)


state 190

  111 set_type: "set" "of" ordinal_type .

    $default  reduce using rule 111 (set_type)


state 191

   69 enumerated_type: '(' identifier_list ')' .

    $default  reduce using rule 69 (enumerated_type)


state 192

   70 subrange_type: constant ".." constant .

    $default  reduce using rule 70 (subrange_type)


state 193

  130 variable_identifier: IDENTIFIER .
  157 factor: IDENTIFIER .
  185 function_identifier: IDENTIFIER .

    '.'       reduce using rule 130 (variable_identifier)
    '('       reduce using rule 185 (function_identifier)
    '['       reduce using rule 130 (variable_identifier)
    '^'       reduce using rule 130 (variable_identifier)
    $default  reduce using rule 157 (factor)


state 194

  142 unsigned_constant: QUOTED_STRING .

    $default  reduce using rule 142 (unsigned_constant)


state 195

  143 unsigned_constant: QUOTED_CHAR .

    $default  reduce using rule 143 (unsigned_constant)


state 196

   67 type_boolean: "true" .

    $default  reduce using rule 67 (type_boolean)


state 197

   68 type_boolean: "false" .

    $default  reduce using rule 68 (type_boolean)


state 198

  144 unsigned_constant: "nil" .

    $default  reduce using rule 144 (unsigned_constant)


state 199

  195 procedure_identifier: "read" .

    $default  reduce using rule 195 (procedure_identifier)


state 200

  196 procedure_identifier: "readln" .

    $default  reduce using rule 196 (procedure_identifier)


state 201

  193 procedure_identifier: "write" .

    $default  reduce using rule 193 (procedure_identifier)


state 202

  194 procedure_identifier: "writeln" .

    $default  reduce using rule 194 (procedure_identifier)


state 203

  156 factor: "not" . factor

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    type_boolean         go to state 209
    variable_reference   go to state 210
    variable_identifier  go to state 211
    unsigned_constant    go to state 212
    unsigned_number      go to state 213
    factor               go to state 257
    function_call        go to state 219
    function_identifier  go to state 126
    set_constructor      go to state 223


state 204

  151 factor: '@' . variable_reference

    IDENTIFIER  shift, and go to state 258

    variable_reference   go to state 259
    variable_identifier  go to state 211


state 205

  155 factor: '(' . expression ')'

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 216
    simple_expression_term_operator_iterable  go to state 217
    expression                                go to state 260
    function_call                             go to state 219
    function_identifier                       go to state 126
    set_constructor                           go to state 223


state 206

  187 actual_parameter_list: '(' ')' .

    $default  reduce using rule 187 (actual_parameter_list)


state 207

  197 set_constructor: '[' . ']'
  198                | '[' . member_group_list ']'

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207
    ']'            shift, and go to state 261

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 216
    simple_expression_term_operator_iterable  go to state 217
    expression                                go to state 262
    function_call                             go to state 219
    function_identifier                       go to state 126
    set_constructor                           go to state 223
    member_group_list                         go to state 263
    member_group                              go to state 264


state 208

  166 simple_expression: sign . simple_expression_term_operator_iterable

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression_term_operator_iterable  go to state 265
    function_call                             go to state 219
    function_identifier                       go to state 126
    set_constructor                           go to state 223


state 209

  158 factor: type_boolean .

    $default  reduce using rule 158 (factor)


state 210

  150 factor: variable_reference .

    $default  reduce using rule 150 (factor)


state 211

  129 variable_reference: variable_identifier . qualifier_list

    '.'  shift, and go to state 266
    '['  shift, and go to state 267
    '^'  shift, and go to state 268

    qualifier_list    go to state 269
    qualifier         go to state 270
    index             go to state 271
    field_designator  go to state 272


state 212

  152 factor: unsigned_constant .

    $default  reduce using rule 152 (factor)


state 213

  141 unsigned_constant: unsigned_number .

    $default  reduce using rule 141 (unsigned_constant)


state 214

  160 term: factor .

    $default  reduce using rule 160 (term)


state 215

  159 term: term . term_operator_list factor
  169 simple_expression_term_operator_iterable: term .

    "div"  shift, and go to state 243
    "mod"  shift, and go to state 244
    "and"  shift, and go to state 245
    '*'    shift, and go to state 246
    '/'    shift, and go to state 247

    $default  reduce using rule 169 (simple_expression_term_operator_iterable)

    term_operator_list  go to state 273


state 216

  173 expression: simple_expression .
  174           | simple_expression . relational_operator simple_expression

    "in"      shift, and go to state 274
    '='       shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    RE        shift, and go to state 278
    LE        shift, and go to state 279
    NOTEQUAL  shift, and go to state 280

    $default  reduce using rule 173 (expression)

    relational_operator  go to state 281


state 217

  167 simple_expression: simple_expression_term_operator_iterable .
  168 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable . simple_expression_term_operator_list term

    "or"  shift, and go to state 282
    '+'   shift, and go to state 283
    '-'   shift, and go to state 284

    $default  reduce using rule 167 (simple_expression)

    simple_expression_term_operator_list  go to state 285


state 218

  191 actual_parameter: expression .

    $default  reduce using rule 191 (actual_parameter)


state 219

  153 factor: function_call .

    $default  reduce using rule 153 (factor)


state 220

  186 actual_parameter_list: '(' actual_parameter_iterable . ')'
  188                      | '(' actual_parameter_iterable . ':' base_type ')'
  189 actual_parameter_iterable: actual_parameter_iterable . ',' actual_parameter

    ')'  shift, and go to state 286
    ','  shift, and go to state 287
    ':'  shift, and go to state 288


state 221

  190 actual_parameter_iterable: actual_parameter .

    $default  reduce using rule 190 (actual_parameter_iterable)


state 222

  192 actual_parameter: procedure_identifier .

    $default  reduce using rule 192 (actual_parameter)


state 223

  154 factor: set_constructor .

    $default  reduce using rule 154 (factor)


state 224

  183 function_call: function_identifier actual_parameter_list ':' . base_type

    DECIMAL_INT   shift, and go to state 61
    HEXADECIMAL   shift, and go to state 62
    REAL_DECIMAL  shift, and go to state 63
    IDENTIFIER    shift, and go to state 153
    "real"        shift, and go to state 154
    "integer"     shift, and go to state 155
    "longint"     shift, and go to state 156
    "char"        shift, and go to state 157
    "boolean"     shift, and go to state 158
    "string"      shift, and go to state 159
    "array"       shift, and go to state 160
    "record"      shift, and go to state 161
    "function"    shift, and go to state 162
    "file"        shift, and go to state 163

    base_type        go to state 289
    unsigned_number  go to state 165


state 225

   38 variable_declaration: identifier_list ':' type ';' .

    $default  reduce using rule 38 (variable_declaration)


state 226

  264 formal_parameter_list: '(' . formal_parameter_list_iterable ')'
  265                      | '(' . ')'

    IDENTIFIER   shift, and go to state 21
    "var"        shift, and go to state 290
    "function"   shift, and go to state 129
    "procedure"  shift, and go to state 130
    ')'          shift, and go to state 291

    identifier_list                      go to state 292
    procedure_heading                    go to state 293
    function_heading                     go to state 294
    formal_parameter_list_iterable       go to state 295
    formal_parameter_list_iterable_list  go to state 296
    parameter_declaration                go to state 297


state 227

  262 function_heading: "function" IDENTIFIER ':' . base_type

    DECIMAL_INT   shift, and go to state 61
    HEXADECIMAL   shift, and go to state 62
    REAL_DECIMAL  shift, and go to state 63
    IDENTIFIER    shift, and go to state 153
    "real"        shift, and go to state 154
    "integer"     shift, and go to state 155
    "longint"     shift, and go to state 156
    "char"        shift, and go to state 157
    "boolean"     shift, and go to state 158
    "string"      shift, and go to state 159
    "array"       shift, and go to state 160
    "record"      shift, and go to state 161
    "function"    shift, and go to state 162
    "file"        shift, and go to state 163

    base_type        go to state 298
    unsigned_number  go to state 165


state 228

  263 function_heading: "function" IDENTIFIER formal_parameter_list . ':' base_type

    ':'  shift, and go to state 299


state 229

  257 procedure_heading: "procedure" IDENTIFIER formal_parameter_list .

    $default  reduce using rule 257 (procedure_heading)


state 230

  224 compound_statement: "begin" . statement_list "end"

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 300
    "begin"      shift, and go to state 230
    "case"       shift, and go to state 301
    "function"   shift, and go to state 102
    "goto"       shift, and go to state 302
    "if"         shift, and go to state 303
    "repeat"     shift, and go to state 304
    "while"      shift, and go to state 305
    "for"        shift, and go to state 306
    "with"       shift, and go to state 307
    "read"       shift, and go to state 199
    "readln"     shift, and go to state 200
    "write"      shift, and go to state 201
    "writeln"    shift, and go to state 202

    $default  reduce using rule 203 (statement)

    label                  go to state 308
    variable_reference     go to state 309
    variable_identifier    go to state 211
    function_identifier    go to state 310
    procedure_identifier   go to state 311
    statement              go to state 312
    simple_statement       go to state 313
    assignment_statement   go to state 314
    procedure_statement    go to state 315
    goto_statement         go to state 316
    structured_statement   go to state 317
    compound_statement     go to state 318
    statement_list         go to state 319
    conditional_statement  go to state 320
    if_statement           go to state 321
    case_statement         go to state 322
    repetitive_statement   go to state 323
    repeat_statement       go to state 324
    while_statement        go to state 325
    for_statement          go to state 326
    with_statement         go to state 327


state 231

   11 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part $@1 procedure_and_function_declaration_part $@2 statement_part .

    $default  reduce using rule 11 (block)


state 232

   45 statement_part: compound_statement .

    $default  reduce using rule 45 (statement_part)


state 233

  254 procedure_body: "forward" .

    $default  reduce using rule 254 (procedure_body)


state 234

  255 procedure_body: "external" .

    $default  reduce using rule 255 (procedure_body)


state 235

  253 procedure_body: block .

    $default  reduce using rule 253 (procedure_body)


state 236

  252 procedure_declaration: procedure_heading ';' procedure_body . ';'

    ';'  shift, and go to state 328


state 237

  260 function_body: "forward" .

    $default  reduce using rule 260 (function_body)


state 238

  261 function_body: "external" .

    $default  reduce using rule 261 (function_body)


state 239

  259 function_body: block .

    $default  reduce using rule 259 (function_body)


state 240

  258 function_declaration: function_heading ';' function_body . ';'

    ';'  shift, and go to state 329


state 241

   73 string_type: "string" '[' DECIMAL_INT ']' .

    $default  reduce using rule 73 (string_type)


state 242

   74 string_type: "string" '[' IDENTIFIER ']' .

    $default  reduce using rule 74 (string_type)


state 243

  163 term_operator_list: "div" .

    $default  reduce using rule 163 (term_operator_list)


state 244

  164 term_operator_list: "mod" .

    $default  reduce using rule 164 (term_operator_list)


state 245

  165 term_operator_list: "and" .

    $default  reduce using rule 165 (term_operator_list)


state 246

  161 term_operator_list: '*' .

    $default  reduce using rule 161 (term_operator_list)


state 247

  162 term_operator_list: '/' .

    $default  reduce using rule 162 (term_operator_list)


state 248

   86 ordinal_type_expression: ordinal_type sign . unsigned_number_expression_list

    DECIMAL_INT   shift, and go to state 61
    HEXADECIMAL   shift, and go to state 62
    REAL_DECIMAL  shift, and go to state 63

    unsigned_number_expression_list  go to state 330
    unsigned_number                  go to state 331


state 249

   85 ordinal_type_expression: ordinal_type term_operator_list . signed_number_expression_list

    DECIMAL_INT   shift, and go to state 61
    HEXADECIMAL   shift, and go to state 62
    REAL_DECIMAL  shift, and go to state 63
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68

    sign                           go to state 84
    signed_number_expression_list  go to state 332
    unsigned_number                go to state 73
    signed_number                  go to state 333


state 250

   82 index_type_list: index_type_list ',' . ordinal_type_expression

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 180
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "word"         shift, and go to state 93
    "char"         shift, and go to state 94
    "boolean"      shift, and go to state 95
    "function"     shift, and go to state 102
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 105
    '#'            shift, and go to state 69

    constant                 go to state 107
    constant_identifier      go to state 71
    sign                     go to state 72
    ordinal_type             go to state 181
    ordinal_type_identifier  go to state 111
    enumerated_type          go to state 112
    subrange_type            go to state 113
    ordinal_type_expression  go to state 334
    unsigned_number          go to state 73
    signed_number            go to state 74
    function_call            go to state 125
    function_identifier      go to state 126


state 251

   81 array_type: "array" '[' index_type_list ']' . "of" type

    "of"  shift, and go to state 335


state 252

  103 variant_part: "case" IDENTIFIER ':' . tag_field_type "of" variant_list

    IDENTIFIER  shift, and go to state 336

    tag_field_type  go to state 337


state 253

  102 variant_part: "case" tag_field_type "of" . variant_list

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '#'            shift, and go to state 69

    constant             go to state 338
    constant_identifier  go to state 71
    sign                 go to state 72
    variant_list         go to state 339
    variant              go to state 340
    constant_list        go to state 341
    unsigned_number      go to state 73
    signed_number        go to state 74


state 254

  101 field_declaration: identifier_list ':' type .

    $default  reduce using rule 101 (field_declaration)


state 255

   99 fixed_part: fixed_part ';' field_declaration .

    $default  reduce using rule 99 (fixed_part)


state 256

   95 field_list: fixed_part ';' variant_part .
   96           | fixed_part ';' variant_part . ';'

    ';'  shift, and go to state 342

    $default  reduce using rule 95 (field_list)


state 257

  156 factor: "not" factor .

    $default  reduce using rule 156 (factor)


state 258

  130 variable_identifier: IDENTIFIER .

    $default  reduce using rule 130 (variable_identifier)


state 259

  151 factor: '@' variable_reference .

    $default  reduce using rule 151 (factor)


state 260

  155 factor: '(' expression . ')'

    ')'  shift, and go to state 343


state 261

  197 set_constructor: '[' ']' .

    $default  reduce using rule 197 (set_constructor)


state 262

  201 member_group: expression .
  202             | expression . ".." expression

    ".."  shift, and go to state 344

    $default  reduce using rule 201 (member_group)


state 263

  198 set_constructor: '[' member_group_list . ']'
  199 member_group_list: member_group_list . ',' member_group

    ','  shift, and go to state 345
    ']'  shift, and go to state 346


state 264

  200 member_group_list: member_group .

    $default  reduce using rule 200 (member_group_list)


state 265

  166 simple_expression: sign simple_expression_term_operator_iterable .
  168 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable . simple_expression_term_operator_list term

    "or"  shift, and go to state 282
    '+'   shift, and go to state 283
    '-'   shift, and go to state 284

    $default  reduce using rule 166 (simple_expression)

    simple_expression_term_operator_list  go to state 285


state 266

  139 field_designator: '.' . IDENTIFIER
  140                 | '.' . function_call

    IDENTIFIER  shift, and go to state 347
    "function"  shift, and go to state 102

    function_call        go to state 348
    function_identifier  go to state 126


state 267

  136 index: '[' . expression_list ']'

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    expression_list                           go to state 349
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 216
    simple_expression_term_operator_iterable  go to state 217
    expression                                go to state 350
    function_call                             go to state 219
    function_identifier                       go to state 126
    set_constructor                           go to state 223


state 268

  135 qualifier: '^' .

    $default  reduce using rule 135 (qualifier)


state 269

  129 variable_reference: variable_identifier qualifier_list .
  131 qualifier_list: qualifier_list . qualifier

    '.'  shift, and go to state 266
    '['  shift, and go to state 267
    '^'  shift, and go to state 268

    $default  reduce using rule 129 (variable_reference)

    qualifier         go to state 351
    index             go to state 271
    field_designator  go to state 272


state 270

  132 qualifier_list: qualifier .

    $default  reduce using rule 132 (qualifier_list)


state 271

  133 qualifier: index .

    $default  reduce using rule 133 (qualifier)


state 272

  134 qualifier: field_designator .

    $default  reduce using rule 134 (qualifier)


state 273

  159 term: term term_operator_list . factor

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    type_boolean         go to state 209
    variable_reference   go to state 210
    variable_identifier  go to state 211
    unsigned_constant    go to state 212
    unsigned_number      go to state 213
    factor               go to state 352
    function_call        go to state 219
    function_identifier  go to state 126
    set_constructor      go to state 223


state 274

  181 relational_operator: "in" .

    $default  reduce using rule 181 (relational_operator)


state 275

  175 relational_operator: '=' .

    $default  reduce using rule 175 (relational_operator)


state 276

  176 relational_operator: '<' .

    $default  reduce using rule 176 (relational_operator)


state 277

  177 relational_operator: '>' .

    $default  reduce using rule 177 (relational_operator)


state 278

  179 relational_operator: RE .

    $default  reduce using rule 179 (relational_operator)


state 279

  178 relational_operator: LE .

    $default  reduce using rule 178 (relational_operator)


state 280

  180 relational_operator: NOTEQUAL .

    $default  reduce using rule 180 (relational_operator)


state 281

  174 expression: simple_expression relational_operator . simple_expression

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 353
    simple_expression_term_operator_iterable  go to state 217
    function_call                             go to state 219
    function_identifier                       go to state 126
    set_constructor                           go to state 223


state 282

  172 simple_expression_term_operator_list: "or" .

    $default  reduce using rule 172 (simple_expression_term_operator_list)


state 283

  170 simple_expression_term_operator_list: '+' .

    $default  reduce using rule 170 (simple_expression_term_operator_list)


state 284

  171 simple_expression_term_operator_list: '-' .

    $default  reduce using rule 171 (simple_expression_term_operator_list)


state 285

  168 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list . term

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    type_boolean         go to state 209
    variable_reference   go to state 210
    variable_identifier  go to state 211
    unsigned_constant    go to state 212
    unsigned_number      go to state 213
    factor               go to state 214
    term                 go to state 354
    function_call        go to state 219
    function_identifier  go to state 126
    set_constructor      go to state 223


state 286

  186 actual_parameter_list: '(' actual_parameter_iterable ')' .

    $default  reduce using rule 186 (actual_parameter_list)


state 287

  189 actual_parameter_iterable: actual_parameter_iterable ',' . actual_parameter

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "read"         shift, and go to state 199
    "readln"       shift, and go to state 200
    "write"        shift, and go to state 201
    "writeln"      shift, and go to state 202
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 216
    simple_expression_term_operator_iterable  go to state 217
    expression                                go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 126
    actual_parameter                          go to state 355
    procedure_identifier                      go to state 222
    set_constructor                           go to state 223


state 288

  188 actual_parameter_list: '(' actual_parameter_iterable ':' . base_type ')'

    DECIMAL_INT   shift, and go to state 61
    HEXADECIMAL   shift, and go to state 62
    REAL_DECIMAL  shift, and go to state 63
    IDENTIFIER    shift, and go to state 153
    "real"        shift, and go to state 154
    "integer"     shift, and go to state 155
    "longint"     shift, and go to state 156
    "char"        shift, and go to state 157
    "boolean"     shift, and go to state 158
    "string"      shift, and go to state 159
    "array"       shift, and go to state 160
    "record"      shift, and go to state 161
    "function"    shift, and go to state 162
    "file"        shift, and go to state 163

    base_type        go to state 356
    unsigned_number  go to state 165


state 289

  183 function_call: function_identifier actual_parameter_list ':' base_type .

    $default  reduce using rule 183 (function_call)


state 290

  271 parameter_declaration: "var" . identifier_list ':' type_identifier

    IDENTIFIER  shift, and go to state 21

    identifier_list  go to state 357


state 291

  265 formal_parameter_list: '(' ')' .

    $default  reduce using rule 265 (formal_parameter_list)


state 292

   49 identifier_list: identifier_list . ',' IDENTIFIER
  272 parameter_declaration: identifier_list . ':' type_identifier

    ','  shift, and go to state 36
    ':'  shift, and go to state 358


state 293

  269 formal_parameter_list_iterable_list: procedure_heading .

    $default  reduce using rule 269 (formal_parameter_list_iterable_list)


state 294

  270 formal_parameter_list_iterable_list: function_heading .

    $default  reduce using rule 270 (formal_parameter_list_iterable_list)


state 295

  264 formal_parameter_list: '(' formal_parameter_list_iterable . ')'
  266 formal_parameter_list_iterable: formal_parameter_list_iterable . ';' formal_parameter_list_iterable_list

    ';'  shift, and go to state 359
    ')'  shift, and go to state 360


state 296

  267 formal_parameter_list_iterable: formal_parameter_list_iterable_list .

    $default  reduce using rule 267 (formal_parameter_list_iterable)


state 297

  268 formal_parameter_list_iterable_list: parameter_declaration .

    $default  reduce using rule 268 (formal_parameter_list_iterable_list)


state 298

  262 function_heading: "function" IDENTIFIER ':' base_type .

    $default  reduce using rule 262 (function_heading)


state 299

  263 function_heading: "function" IDENTIFIER formal_parameter_list ':' . base_type

    DECIMAL_INT   shift, and go to state 61
    HEXADECIMAL   shift, and go to state 62
    REAL_DECIMAL  shift, and go to state 63
    IDENTIFIER    shift, and go to state 153
    "real"        shift, and go to state 154
    "integer"     shift, and go to state 155
    "longint"     shift, and go to state 156
    "char"        shift, and go to state 157
    "boolean"     shift, and go to state 158
    "string"      shift, and go to state 159
    "array"       shift, and go to state 160
    "record"      shift, and go to state 161
    "function"    shift, and go to state 162
    "file"        shift, and go to state 163

    base_type        go to state 361
    unsigned_number  go to state 165


state 300

  130 variable_identifier: IDENTIFIER .
  185 function_identifier: IDENTIFIER .
  209 statement: IDENTIFIER .
  218 procedure_statement: IDENTIFIER . actual_parameter_list

    '('  shift, and go to state 168

    ":="      reduce using rule 185 (function_identifier)
    '.'       reduce using rule 130 (variable_identifier)
    '['       reduce using rule 130 (variable_identifier)
    '^'       reduce using rule 130 (variable_identifier)
    $default  reduce using rule 209 (statement)

    actual_parameter_list  go to state 362


state 301

  231 case_statement: "case" . expression "of" case_list "end"
  232               | "case" . expression "of" case_list otherwise_clause "end"
  233               | "case" . expression "of" case_list otherwise_clause ';' "end"
  234               | "case" . expression "of" case_list ';' "end"

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 216
    simple_expression_term_operator_iterable  go to state 217
    expression                                go to state 363
    function_call                             go to state 219
    function_identifier                       go to state 126
    set_constructor                           go to state 223


state 302

  219 goto_statement: "goto" . label

    DECIMAL_INT  shift, and go to state 25

    label  go to state 364


state 303

  229 if_statement: "if" . expression "then" statement
  230             | "if" . expression "then" statement "else" statement

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 216
    simple_expression_term_operator_iterable  go to state 217
    expression                                go to state 365
    function_call                             go to state 219
    function_identifier                       go to state 126
    set_constructor                           go to state 223


state 304

  242 repeat_statement: "repeat" . statement_list "until" expression

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 300
    "begin"      shift, and go to state 230
    "case"       shift, and go to state 301
    "function"   shift, and go to state 102
    "goto"       shift, and go to state 302
    "if"         shift, and go to state 303
    "repeat"     shift, and go to state 304
    "while"      shift, and go to state 305
    "for"        shift, and go to state 306
    "with"       shift, and go to state 307
    "read"       shift, and go to state 199
    "readln"     shift, and go to state 200
    "write"      shift, and go to state 201
    "writeln"    shift, and go to state 202

    $default  reduce using rule 203 (statement)

    label                  go to state 308
    variable_reference     go to state 309
    variable_identifier    go to state 211
    function_identifier    go to state 310
    procedure_identifier   go to state 311
    statement              go to state 312
    simple_statement       go to state 313
    assignment_statement   go to state 314
    procedure_statement    go to state 315
    goto_statement         go to state 316
    structured_statement   go to state 317
    compound_statement     go to state 318
    statement_list         go to state 366
    conditional_statement  go to state 320
    if_statement           go to state 321
    case_statement         go to state 322
    repetitive_statement   go to state 323
    repeat_statement       go to state 324
    while_statement        go to state 325
    for_statement          go to state 326
    with_statement         go to state 327


state 305

  243 while_statement: "while" . expression "do" statement

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 216
    simple_expression_term_operator_iterable  go to state 217
    expression                                go to state 367
    function_call                             go to state 219
    function_identifier                       go to state 126
    set_constructor                           go to state 223


state 306

  244 for_statement: "for" . control_variable ":=" initial_value "to" final_value "do" statement
  245              | "for" . control_variable ":=" initial_value "downto" final_value "do" statement

    IDENTIFIER  shift, and go to state 368

    control_variable  go to state 369


state 307

  249 with_statement: "with" . record_variable_reference_list "do" statement

    IDENTIFIER  shift, and go to state 258

    variable_reference              go to state 370
    variable_identifier             go to state 211
    record_variable_reference_list  go to state 371


state 308

  204 statement: label . ':'
  205          | label . ':' simple_statement
  206          | label . ':' structured_statement

    ':'  shift, and go to state 372


state 309

  210 statement: variable_reference .
  214 assignment_statement: variable_reference . ":=" expression

    ":="  shift, and go to state 373

    $default  reduce using rule 210 (statement)


state 310

  215 assignment_statement: function_identifier . ":=" expression

    ":="  shift, and go to state 374


state 311

  216 procedure_statement: procedure_identifier .
  217                    | procedure_identifier . actual_parameter_list

    '('  shift, and go to state 168

    $default  reduce using rule 216 (procedure_statement)

    actual_parameter_list  go to state 375


state 312

  226 statement_list: statement .

    $default  reduce using rule 226 (statement_list)


state 313

  207 statement: simple_statement .

    $default  reduce using rule 207 (statement)


state 314

  211 simple_statement: assignment_statement .

    $default  reduce using rule 211 (simple_statement)


state 315

  212 simple_statement: procedure_statement .

    $default  reduce using rule 212 (simple_statement)


state 316

  213 simple_statement: goto_statement .

    $default  reduce using rule 213 (simple_statement)


state 317

  208 statement: structured_statement .

    $default  reduce using rule 208 (statement)


state 318

  220 structured_statement: compound_statement .

    $default  reduce using rule 220 (structured_statement)


state 319

  224 compound_statement: "begin" statement_list . "end"
  225 statement_list: statement_list . ';' statement

    "end"  shift, and go to state 376
    ';'    shift, and go to state 377


state 320

  221 structured_statement: conditional_statement .

    $default  reduce using rule 221 (structured_statement)


state 321

  227 conditional_statement: if_statement .

    $default  reduce using rule 227 (conditional_statement)


state 322

  228 conditional_statement: case_statement .

    $default  reduce using rule 228 (conditional_statement)


state 323

  222 structured_statement: repetitive_statement .

    $default  reduce using rule 222 (structured_statement)


state 324

  239 repetitive_statement: repeat_statement .

    $default  reduce using rule 239 (repetitive_statement)


state 325

  240 repetitive_statement: while_statement .

    $default  reduce using rule 240 (repetitive_statement)


state 326

  241 repetitive_statement: for_statement .

    $default  reduce using rule 241 (repetitive_statement)


state 327

  223 structured_statement: with_statement .

    $default  reduce using rule 223 (structured_statement)


state 328

  252 procedure_declaration: procedure_heading ';' procedure_body ';' .

    $default  reduce using rule 252 (procedure_declaration)


state 329

  258 function_declaration: function_heading ';' function_body ';' .

    $default  reduce using rule 258 (function_declaration)


state 330

   86 ordinal_type_expression: ordinal_type sign unsigned_number_expression_list .
   89 unsigned_number_expression_list: unsigned_number_expression_list . sign unsigned_number

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68

    $default  reduce using rule 86 (ordinal_type_expression)

    sign  go to state 378


state 331

   90 unsigned_number_expression_list: unsigned_number .

    $default  reduce using rule 90 (unsigned_number_expression_list)


state 332

   85 ordinal_type_expression: ordinal_type term_operator_list signed_number_expression_list .
   87 signed_number_expression_list: signed_number_expression_list . term_operator_list signed_number

    "div"  shift, and go to state 243
    "mod"  shift, and go to state 244
    "and"  shift, and go to state 245
    '*'    shift, and go to state 246
    '/'    shift, and go to state 247

    $default  reduce using rule 85 (ordinal_type_expression)

    term_operator_list  go to state 379


state 333

   88 signed_number_expression_list: signed_number .

    $default  reduce using rule 88 (signed_number_expression_list)


state 334

   82 index_type_list: index_type_list ',' ordinal_type_expression .

    $default  reduce using rule 82 (index_type_list)


state 335

   81 array_type: "array" '[' index_type_list ']' "of" . type

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 89
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 90
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "word"         shift, and go to state 93
    "char"         shift, and go to state 94
    "boolean"      shift, and go to state 95
    "string"       shift, and go to state 96
    "packed"       shift, and go to state 97
    "array"        shift, and go to state 98
    "record"       shift, and go to state 99
    "of"           shift, and go to state 100
    "set"          shift, and go to state 101
    "function"     shift, and go to state 102
    "file"         shift, and go to state 103
    "nil"          shift, and go to state 104
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 105
    '#'            shift, and go to state 69
    '^'            shift, and go to state 106

    constant                 go to state 107
    constant_identifier      go to state 71
    sign                     go to state 72
    type                     go to state 380
    simple_type              go to state 109
    ordinal_type             go to state 110
    ordinal_type_identifier  go to state 111
    enumerated_type          go to state 112
    subrange_type            go to state 113
    real_type                go to state 114
    real_type_identifier     go to state 115
    string_type              go to state 116
    structured_type          go to state 117
    type_list                go to state 118
    array_type               go to state 119
    record_type              go to state 120
    set_type                 go to state 121
    file_type                go to state 122
    pointer_type             go to state 123
    pointer_type_identifier  go to state 124
    unsigned_number          go to state 73
    signed_number            go to state 74
    function_call            go to state 125
    function_identifier      go to state 126


state 336

  110 tag_field_type: IDENTIFIER .

    $default  reduce using rule 110 (tag_field_type)


state 337

  103 variant_part: "case" IDENTIFIER ':' tag_field_type . "of" variant_list

    "of"  shift, and go to state 381


state 338

  109 constant_list: constant .

    $default  reduce using rule 109 (constant_list)


state 339

  102 variant_part: "case" tag_field_type "of" variant_list .
  104 variant_list: variant_list . ';' variant

    ';'  shift, and go to state 382

    ';'       [reduce using rule 102 (variant_part)]
    $default  reduce using rule 102 (variant_part)


state 340

  105 variant_list: variant .

    $default  reduce using rule 105 (variant_list)


state 341

  106 variant: constant_list . ':' '(' ')'
  107        | constant_list . ':' '(' field_list ')'
  108 constant_list: constant_list . ',' constant

    ','  shift, and go to state 383
    ':'  shift, and go to state 384


state 342

   96 field_list: fixed_part ';' variant_part ';' .

    $default  reduce using rule 96 (field_list)


state 343

  155 factor: '(' expression ')' .

    $default  reduce using rule 155 (factor)


state 344

  202 member_group: expression ".." . expression

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 216
    simple_expression_term_operator_iterable  go to state 217
    expression                                go to state 385
    function_call                             go to state 219
    function_identifier                       go to state 126
    set_constructor                           go to state 223


state 345

  199 member_group_list: member_group_list ',' . member_group

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 216
    simple_expression_term_operator_iterable  go to state 217
    expression                                go to state 262
    function_call                             go to state 219
    function_identifier                       go to state 126
    set_constructor                           go to state 223
    member_group                              go to state 386


state 346

  198 set_constructor: '[' member_group_list ']' .

    $default  reduce using rule 198 (set_constructor)


state 347

  139 field_designator: '.' IDENTIFIER .
  185 function_identifier: IDENTIFIER .

    '('       reduce using rule 185 (function_identifier)
    $default  reduce using rule 139 (field_designator)


state 348

  140 field_designator: '.' function_call .

    $default  reduce using rule 140 (field_designator)


state 349

  136 index: '[' expression_list . ']'
  137 expression_list: expression_list . ',' expression

    ','  shift, and go to state 387
    ']'  shift, and go to state 388


state 350

  138 expression_list: expression .

    $default  reduce using rule 138 (expression_list)


state 351

  131 qualifier_list: qualifier_list qualifier .

    $default  reduce using rule 131 (qualifier_list)


state 352

  159 term: term term_operator_list factor .

    $default  reduce using rule 159 (term)


state 353

  174 expression: simple_expression relational_operator simple_expression .

    $default  reduce using rule 174 (expression)


state 354

  159 term: term . term_operator_list factor
  168 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list term .

    "div"  shift, and go to state 243
    "mod"  shift, and go to state 244
    "and"  shift, and go to state 245
    '*'    shift, and go to state 246
    '/'    shift, and go to state 247

    $default  reduce using rule 168 (simple_expression_term_operator_iterable)

    term_operator_list  go to state 273


state 355

  189 actual_parameter_iterable: actual_parameter_iterable ',' actual_parameter .

    $default  reduce using rule 189 (actual_parameter_iterable)


state 356

  188 actual_parameter_list: '(' actual_parameter_iterable ':' base_type . ')'

    ')'  shift, and go to state 389


state 357

   49 identifier_list: identifier_list . ',' IDENTIFIER
  271 parameter_declaration: "var" identifier_list . ':' type_identifier

    ','  shift, and go to state 36
    ':'  shift, and go to state 390


state 358

  272 parameter_declaration: identifier_list ':' . type_identifier

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 89
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 90
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "word"         shift, and go to state 93
    "char"         shift, and go to state 94
    "boolean"      shift, and go to state 95
    "string"       shift, and go to state 96
    "packed"       shift, and go to state 97
    "array"        shift, and go to state 98
    "record"       shift, and go to state 99
    "of"           shift, and go to state 100
    "set"          shift, and go to state 101
    "function"     shift, and go to state 102
    "file"         shift, and go to state 103
    "nil"          shift, and go to state 104
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 105
    '#'            shift, and go to state 69
    '^'            shift, and go to state 106

    constant                 go to state 107
    constant_identifier      go to state 71
    sign                     go to state 72
    type                     go to state 391
    simple_type              go to state 109
    ordinal_type             go to state 110
    ordinal_type_identifier  go to state 111
    enumerated_type          go to state 112
    subrange_type            go to state 113
    real_type                go to state 114
    real_type_identifier     go to state 115
    string_type              go to state 116
    structured_type          go to state 117
    type_list                go to state 118
    array_type               go to state 119
    record_type              go to state 120
    set_type                 go to state 121
    file_type                go to state 122
    pointer_type             go to state 123
    pointer_type_identifier  go to state 124
    unsigned_number          go to state 73
    signed_number            go to state 74
    function_call            go to state 125
    function_identifier      go to state 126
    type_identifier          go to state 392


state 359

  266 formal_parameter_list_iterable: formal_parameter_list_iterable ';' . formal_parameter_list_iterable_list

    IDENTIFIER   shift, and go to state 21
    "var"        shift, and go to state 290
    "function"   shift, and go to state 129
    "procedure"  shift, and go to state 130

    identifier_list                      go to state 292
    procedure_heading                    go to state 293
    function_heading                     go to state 294
    formal_parameter_list_iterable_list  go to state 393
    parameter_declaration                go to state 297


state 360

  264 formal_parameter_list: '(' formal_parameter_list_iterable ')' .

    $default  reduce using rule 264 (formal_parameter_list)


state 361

  263 function_heading: "function" IDENTIFIER formal_parameter_list ':' base_type .

    $default  reduce using rule 263 (function_heading)


state 362

  218 procedure_statement: IDENTIFIER actual_parameter_list .

    $default  reduce using rule 218 (procedure_statement)


state 363

  231 case_statement: "case" expression . "of" case_list "end"
  232               | "case" expression . "of" case_list otherwise_clause "end"
  233               | "case" expression . "of" case_list otherwise_clause ';' "end"
  234               | "case" expression . "of" case_list ';' "end"

    "of"  shift, and go to state 394


state 364

  219 goto_statement: "goto" label .

    $default  reduce using rule 219 (goto_statement)


state 365

  229 if_statement: "if" expression . "then" statement
  230             | "if" expression . "then" statement "else" statement

    "then"  shift, and go to state 395


state 366

  225 statement_list: statement_list . ';' statement
  242 repeat_statement: "repeat" statement_list . "until" expression

    "until"  shift, and go to state 396
    ';'      shift, and go to state 377


state 367

  243 while_statement: "while" expression . "do" statement

    "do"  shift, and go to state 397


state 368

  246 control_variable: IDENTIFIER .

    $default  reduce using rule 246 (control_variable)


state 369

  244 for_statement: "for" control_variable . ":=" initial_value "to" final_value "do" statement
  245              | "for" control_variable . ":=" initial_value "downto" final_value "do" statement

    ":="  shift, and go to state 398


state 370

  251 record_variable_reference_list: variable_reference .

    $default  reduce using rule 251 (record_variable_reference_list)


state 371

  249 with_statement: "with" record_variable_reference_list . "do" statement
  250 record_variable_reference_list: record_variable_reference_list . ',' variable_reference

    "do"  shift, and go to state 399
    ','   shift, and go to state 400


state 372

  204 statement: label ':' .
  205          | label ':' . simple_statement
  206          | label ':' . structured_statement

    IDENTIFIER  shift, and go to state 401
    "begin"     shift, and go to state 230
    "case"      shift, and go to state 301
    "function"  shift, and go to state 102
    "goto"      shift, and go to state 302
    "if"        shift, and go to state 303
    "repeat"    shift, and go to state 304
    "while"     shift, and go to state 305
    "for"       shift, and go to state 306
    "with"      shift, and go to state 307
    "read"      shift, and go to state 199
    "readln"    shift, and go to state 200
    "write"     shift, and go to state 201
    "writeln"   shift, and go to state 202

    $default  reduce using rule 204 (statement)

    variable_reference     go to state 402
    variable_identifier    go to state 211
    function_identifier    go to state 310
    procedure_identifier   go to state 311
    simple_statement       go to state 403
    assignment_statement   go to state 314
    procedure_statement    go to state 315
    goto_statement         go to state 316
    structured_statement   go to state 404
    compound_statement     go to state 318
    conditional_statement  go to state 320
    if_statement           go to state 321
    case_statement         go to state 322
    repetitive_statement   go to state 323
    repeat_statement       go to state 324
    while_statement        go to state 325
    for_statement          go to state 326
    with_statement         go to state 327


state 373

  214 assignment_statement: variable_reference ":=" . expression

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 216
    simple_expression_term_operator_iterable  go to state 217
    expression                                go to state 405
    function_call                             go to state 219
    function_identifier                       go to state 126
    set_constructor                           go to state 223


state 374

  215 assignment_statement: function_identifier ":=" . expression

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 216
    simple_expression_term_operator_iterable  go to state 217
    expression                                go to state 406
    function_call                             go to state 219
    function_identifier                       go to state 126
    set_constructor                           go to state 223


state 375

  217 procedure_statement: procedure_identifier actual_parameter_list .

    $default  reduce using rule 217 (procedure_statement)


state 376

  224 compound_statement: "begin" statement_list "end" .

    $default  reduce using rule 224 (compound_statement)


state 377

  225 statement_list: statement_list ';' . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 300
    "begin"      shift, and go to state 230
    "case"       shift, and go to state 301
    "function"   shift, and go to state 102
    "goto"       shift, and go to state 302
    "if"         shift, and go to state 303
    "repeat"     shift, and go to state 304
    "while"      shift, and go to state 305
    "for"        shift, and go to state 306
    "with"       shift, and go to state 307
    "read"       shift, and go to state 199
    "readln"     shift, and go to state 200
    "write"      shift, and go to state 201
    "writeln"    shift, and go to state 202

    $default  reduce using rule 203 (statement)

    label                  go to state 308
    variable_reference     go to state 309
    variable_identifier    go to state 211
    function_identifier    go to state 310
    procedure_identifier   go to state 311
    statement              go to state 407
    simple_statement       go to state 313
    assignment_statement   go to state 314
    procedure_statement    go to state 315
    goto_statement         go to state 316
    structured_statement   go to state 317
    compound_statement     go to state 318
    conditional_statement  go to state 320
    if_statement           go to state 321
    case_statement         go to state 322
    repetitive_statement   go to state 323
    repeat_statement       go to state 324
    while_statement        go to state 325
    for_statement          go to state 326
    with_statement         go to state 327


state 378

   89 unsigned_number_expression_list: unsigned_number_expression_list sign . unsigned_number

    DECIMAL_INT   shift, and go to state 61
    HEXADECIMAL   shift, and go to state 62
    REAL_DECIMAL  shift, and go to state 63

    unsigned_number  go to state 408


state 379

   87 signed_number_expression_list: signed_number_expression_list term_operator_list . signed_number

    DECIMAL_INT   shift, and go to state 61
    HEXADECIMAL   shift, and go to state 62
    REAL_DECIMAL  shift, and go to state 63
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68

    sign             go to state 84
    unsigned_number  go to state 73
    signed_number    go to state 409


state 380

   81 array_type: "array" '[' index_type_list ']' "of" type .

    $default  reduce using rule 81 (array_type)


state 381

  103 variant_part: "case" IDENTIFIER ':' tag_field_type "of" . variant_list

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '#'            shift, and go to state 69

    constant             go to state 338
    constant_identifier  go to state 71
    sign                 go to state 72
    variant_list         go to state 410
    variant              go to state 340
    constant_list        go to state 341
    unsigned_number      go to state 73
    signed_number        go to state 74


state 382

  104 variant_list: variant_list ';' . variant

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '#'            shift, and go to state 69

    constant             go to state 338
    constant_identifier  go to state 71
    sign                 go to state 72
    variant              go to state 411
    constant_list        go to state 341
    unsigned_number      go to state 73
    signed_number        go to state 74


state 383

  108 constant_list: constant_list ',' . constant

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '#'            shift, and go to state 69

    constant             go to state 412
    constant_identifier  go to state 71
    sign                 go to state 72
    unsigned_number      go to state 73
    signed_number        go to state 74


state 384

  106 variant: constant_list ':' . '(' ')'
  107        | constant_list ':' . '(' field_list ')'

    '('  shift, and go to state 413


state 385

  202 member_group: expression ".." expression .

    $default  reduce using rule 202 (member_group)


state 386

  199 member_group_list: member_group_list ',' member_group .

    $default  reduce using rule 199 (member_group_list)


state 387

  137 expression_list: expression_list ',' . expression

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 216
    simple_expression_term_operator_iterable  go to state 217
    expression                                go to state 414
    function_call                             go to state 219
    function_identifier                       go to state 126
    set_constructor                           go to state 223


state 388

  136 index: '[' expression_list ']' .

    $default  reduce using rule 136 (index)


state 389

  188 actual_parameter_list: '(' actual_parameter_iterable ':' base_type ')' .

    $default  reduce using rule 188 (actual_parameter_list)


state 390

  271 parameter_declaration: "var" identifier_list ':' . type_identifier

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 89
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "real"         shift, and go to state 90
    "integer"      shift, and go to state 91
    "longint"      shift, and go to state 92
    "word"         shift, and go to state 93
    "char"         shift, and go to state 94
    "boolean"      shift, and go to state 95
    "string"       shift, and go to state 96
    "packed"       shift, and go to state 97
    "array"        shift, and go to state 98
    "record"       shift, and go to state 99
    "of"           shift, and go to state 100
    "set"          shift, and go to state 101
    "function"     shift, and go to state 102
    "file"         shift, and go to state 103
    "nil"          shift, and go to state 104
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '('            shift, and go to state 105
    '#'            shift, and go to state 69
    '^'            shift, and go to state 106

    constant                 go to state 107
    constant_identifier      go to state 71
    sign                     go to state 72
    type                     go to state 391
    simple_type              go to state 109
    ordinal_type             go to state 110
    ordinal_type_identifier  go to state 111
    enumerated_type          go to state 112
    subrange_type            go to state 113
    real_type                go to state 114
    real_type_identifier     go to state 115
    string_type              go to state 116
    structured_type          go to state 117
    type_list                go to state 118
    array_type               go to state 119
    record_type              go to state 120
    set_type                 go to state 121
    file_type                go to state 122
    pointer_type             go to state 123
    pointer_type_identifier  go to state 124
    unsigned_number          go to state 73
    signed_number            go to state 74
    function_call            go to state 125
    function_identifier      go to state 126
    type_identifier          go to state 415


state 391

  273 type_identifier: type .

    $default  reduce using rule 273 (type_identifier)


state 392

  272 parameter_declaration: identifier_list ':' type_identifier .

    $default  reduce using rule 272 (parameter_declaration)


state 393

  266 formal_parameter_list_iterable: formal_parameter_list_iterable ';' formal_parameter_list_iterable_list .

    $default  reduce using rule 266 (formal_parameter_list_iterable)


state 394

  231 case_statement: "case" expression "of" . case_list "end"
  232               | "case" expression "of" . case_list otherwise_clause "end"
  233               | "case" expression "of" . case_list otherwise_clause ';' "end"
  234               | "case" expression "of" . case_list ';' "end"

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '#'            shift, and go to state 69

    constant             go to state 338
    constant_identifier  go to state 71
    sign                 go to state 72
    constant_list        go to state 416
    unsigned_number      go to state 73
    signed_number        go to state 74
    case_list            go to state 417
    case                 go to state 418


state 395

  229 if_statement: "if" expression "then" . statement
  230             | "if" expression "then" . statement "else" statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 300
    "begin"      shift, and go to state 230
    "case"       shift, and go to state 301
    "function"   shift, and go to state 102
    "goto"       shift, and go to state 302
    "if"         shift, and go to state 303
    "repeat"     shift, and go to state 304
    "while"      shift, and go to state 305
    "for"        shift, and go to state 306
    "with"       shift, and go to state 307
    "read"       shift, and go to state 199
    "readln"     shift, and go to state 200
    "write"      shift, and go to state 201
    "writeln"    shift, and go to state 202

    $default  reduce using rule 203 (statement)

    label                  go to state 308
    variable_reference     go to state 309
    variable_identifier    go to state 211
    function_identifier    go to state 310
    procedure_identifier   go to state 311
    statement              go to state 419
    simple_statement       go to state 313
    assignment_statement   go to state 314
    procedure_statement    go to state 315
    goto_statement         go to state 316
    structured_statement   go to state 317
    compound_statement     go to state 318
    conditional_statement  go to state 320
    if_statement           go to state 321
    case_statement         go to state 322
    repetitive_statement   go to state 323
    repeat_statement       go to state 324
    while_statement        go to state 325
    for_statement          go to state 326
    with_statement         go to state 327


state 396

  242 repeat_statement: "repeat" statement_list "until" . expression

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 216
    simple_expression_term_operator_iterable  go to state 217
    expression                                go to state 420
    function_call                             go to state 219
    function_identifier                       go to state 126
    set_constructor                           go to state 223


state 397

  243 while_statement: "while" expression "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 300
    "begin"      shift, and go to state 230
    "case"       shift, and go to state 301
    "function"   shift, and go to state 102
    "goto"       shift, and go to state 302
    "if"         shift, and go to state 303
    "repeat"     shift, and go to state 304
    "while"      shift, and go to state 305
    "for"        shift, and go to state 306
    "with"       shift, and go to state 307
    "read"       shift, and go to state 199
    "readln"     shift, and go to state 200
    "write"      shift, and go to state 201
    "writeln"    shift, and go to state 202

    $default  reduce using rule 203 (statement)

    label                  go to state 308
    variable_reference     go to state 309
    variable_identifier    go to state 211
    function_identifier    go to state 310
    procedure_identifier   go to state 311
    statement              go to state 421
    simple_statement       go to state 313
    assignment_statement   go to state 314
    procedure_statement    go to state 315
    goto_statement         go to state 316
    structured_statement   go to state 317
    compound_statement     go to state 318
    conditional_statement  go to state 320
    if_statement           go to state 321
    case_statement         go to state 322
    repetitive_statement   go to state 323
    repeat_statement       go to state 324
    while_statement        go to state 325
    for_statement          go to state 326
    with_statement         go to state 327


state 398

  244 for_statement: "for" control_variable ":=" . initial_value "to" final_value "do" statement
  245              | "for" control_variable ":=" . initial_value "downto" final_value "do" statement

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 216
    simple_expression_term_operator_iterable  go to state 217
    expression                                go to state 422
    function_call                             go to state 219
    function_identifier                       go to state 126
    set_constructor                           go to state 223
    initial_value                             go to state 423


state 399

  249 with_statement: "with" record_variable_reference_list "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 300
    "begin"      shift, and go to state 230
    "case"       shift, and go to state 301
    "function"   shift, and go to state 102
    "goto"       shift, and go to state 302
    "if"         shift, and go to state 303
    "repeat"     shift, and go to state 304
    "while"      shift, and go to state 305
    "for"        shift, and go to state 306
    "with"       shift, and go to state 307
    "read"       shift, and go to state 199
    "readln"     shift, and go to state 200
    "write"      shift, and go to state 201
    "writeln"    shift, and go to state 202

    $default  reduce using rule 203 (statement)

    label                  go to state 308
    variable_reference     go to state 309
    variable_identifier    go to state 211
    function_identifier    go to state 310
    procedure_identifier   go to state 311
    statement              go to state 424
    simple_statement       go to state 313
    assignment_statement   go to state 314
    procedure_statement    go to state 315
    goto_statement         go to state 316
    structured_statement   go to state 317
    compound_statement     go to state 318
    conditional_statement  go to state 320
    if_statement           go to state 321
    case_statement         go to state 322
    repetitive_statement   go to state 323
    repeat_statement       go to state 324
    while_statement        go to state 325
    for_statement          go to state 326
    with_statement         go to state 327


state 400

  250 record_variable_reference_list: record_variable_reference_list ',' . variable_reference

    IDENTIFIER  shift, and go to state 258

    variable_reference   go to state 425
    variable_identifier  go to state 211


state 401

  130 variable_identifier: IDENTIFIER .
  185 function_identifier: IDENTIFIER .
  218 procedure_statement: IDENTIFIER . actual_parameter_list

    '('  shift, and go to state 168

    ":="      reduce using rule 185 (function_identifier)
    $default  reduce using rule 130 (variable_identifier)

    actual_parameter_list  go to state 362


state 402

  214 assignment_statement: variable_reference . ":=" expression

    ":="  shift, and go to state 373


state 403

  205 statement: label ':' simple_statement .

    $default  reduce using rule 205 (statement)


state 404

  206 statement: label ':' structured_statement .

    $default  reduce using rule 206 (statement)


state 405

  214 assignment_statement: variable_reference ":=" expression .

    $default  reduce using rule 214 (assignment_statement)


state 406

  215 assignment_statement: function_identifier ":=" expression .

    $default  reduce using rule 215 (assignment_statement)


state 407

  225 statement_list: statement_list ';' statement .

    $default  reduce using rule 225 (statement_list)


state 408

   89 unsigned_number_expression_list: unsigned_number_expression_list sign unsigned_number .

    $default  reduce using rule 89 (unsigned_number_expression_list)


state 409

   87 signed_number_expression_list: signed_number_expression_list term_operator_list signed_number .

    $default  reduce using rule 87 (signed_number_expression_list)


state 410

  103 variant_part: "case" IDENTIFIER ':' tag_field_type "of" variant_list .
  104 variant_list: variant_list . ';' variant

    ';'  shift, and go to state 382

    ';'       [reduce using rule 103 (variant_part)]
    $default  reduce using rule 103 (variant_part)


state 411

  104 variant_list: variant_list ';' variant .

    $default  reduce using rule 104 (variant_list)


state 412

  108 constant_list: constant_list ',' constant .

    $default  reduce using rule 108 (constant_list)


state 413

  106 variant: constant_list ':' '(' . ')'
  107        | constant_list ':' '(' . field_list ')'

    IDENTIFIER  shift, and go to state 21
    "case"      shift, and go to state 144
    ')'         shift, and go to state 426

    identifier_list    go to state 145
    field_list         go to state 427
    fixed_part         go to state 147
    field_declaration  go to state 148
    variant_part       go to state 149


state 414

  137 expression_list: expression_list ',' expression .

    $default  reduce using rule 137 (expression_list)


state 415

  271 parameter_declaration: "var" identifier_list ':' type_identifier .

    $default  reduce using rule 271 (parameter_declaration)


state 416

  108 constant_list: constant_list . ',' constant
  237 case: constant_list . ':' statement

    ','  shift, and go to state 383
    ':'  shift, and go to state 428


state 417

  231 case_statement: "case" expression "of" case_list . "end"
  232               | "case" expression "of" case_list . otherwise_clause "end"
  233               | "case" expression "of" case_list . otherwise_clause ';' "end"
  234               | "case" expression "of" case_list . ';' "end"
  235 case_list: case_list . ';' case

    "end"  shift, and go to state 429
    ';'    shift, and go to state 430

    otherwise_clause  go to state 431


state 418

  236 case_list: case .

    $default  reduce using rule 236 (case_list)


state 419

  229 if_statement: "if" expression "then" statement .
  230             | "if" expression "then" statement . "else" statement

    "else"  shift, and go to state 432

    "else"    [reduce using rule 229 (if_statement)]
    $default  reduce using rule 229 (if_statement)


state 420

  242 repeat_statement: "repeat" statement_list "until" expression .

    $default  reduce using rule 242 (repeat_statement)


state 421

  243 while_statement: "while" expression "do" statement .

    $default  reduce using rule 243 (while_statement)


state 422

  247 initial_value: expression .

    $default  reduce using rule 247 (initial_value)


state 423

  244 for_statement: "for" control_variable ":=" initial_value . "to" final_value "do" statement
  245              | "for" control_variable ":=" initial_value . "downto" final_value "do" statement

    "to"      shift, and go to state 433
    "downto"  shift, and go to state 434


state 424

  249 with_statement: "with" record_variable_reference_list "do" statement .

    $default  reduce using rule 249 (with_statement)


state 425

  250 record_variable_reference_list: record_variable_reference_list ',' variable_reference .

    $default  reduce using rule 250 (record_variable_reference_list)


state 426

  106 variant: constant_list ':' '(' ')' .

    $default  reduce using rule 106 (variant)


state 427

  107 variant: constant_list ':' '(' field_list . ')'

    ')'  shift, and go to state 435


state 428

  237 case: constant_list ':' . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 300
    "begin"      shift, and go to state 230
    "case"       shift, and go to state 301
    "function"   shift, and go to state 102
    "goto"       shift, and go to state 302
    "if"         shift, and go to state 303
    "repeat"     shift, and go to state 304
    "while"      shift, and go to state 305
    "for"        shift, and go to state 306
    "with"       shift, and go to state 307
    "read"       shift, and go to state 199
    "readln"     shift, and go to state 200
    "write"      shift, and go to state 201
    "writeln"    shift, and go to state 202

    $default  reduce using rule 203 (statement)

    label                  go to state 308
    variable_reference     go to state 309
    variable_identifier    go to state 211
    function_identifier    go to state 310
    procedure_identifier   go to state 311
    statement              go to state 436
    simple_statement       go to state 313
    assignment_statement   go to state 314
    procedure_statement    go to state 315
    goto_statement         go to state 316
    structured_statement   go to state 317
    compound_statement     go to state 318
    conditional_statement  go to state 320
    if_statement           go to state 321
    case_statement         go to state 322
    repetitive_statement   go to state 323
    repeat_statement       go to state 324
    while_statement        go to state 325
    for_statement          go to state 326
    with_statement         go to state 327


state 429

  231 case_statement: "case" expression "of" case_list "end" .

    $default  reduce using rule 231 (case_statement)


state 430

  234 case_statement: "case" expression "of" case_list ';' . "end"
  235 case_list: case_list ';' . case
  238 otherwise_clause: ';' . "otherwise" statement

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 64
    QUOTED_STRING  shift, and go to state 65
    QUOTED_CHAR    shift, and go to state 66
    "end"          shift, and go to state 437
    "otherwise"    shift, and go to state 438
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '#'            shift, and go to state 69

    constant             go to state 338
    constant_identifier  go to state 71
    sign                 go to state 72
    constant_list        go to state 416
    unsigned_number      go to state 73
    signed_number        go to state 74
    case                 go to state 439


state 431

  232 case_statement: "case" expression "of" case_list otherwise_clause . "end"
  233               | "case" expression "of" case_list otherwise_clause . ';' "end"

    "end"  shift, and go to state 440
    ';'    shift, and go to state 441


state 432

  230 if_statement: "if" expression "then" statement "else" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 300
    "begin"      shift, and go to state 230
    "case"       shift, and go to state 301
    "function"   shift, and go to state 102
    "goto"       shift, and go to state 302
    "if"         shift, and go to state 303
    "repeat"     shift, and go to state 304
    "while"      shift, and go to state 305
    "for"        shift, and go to state 306
    "with"       shift, and go to state 307
    "read"       shift, and go to state 199
    "readln"     shift, and go to state 200
    "write"      shift, and go to state 201
    "writeln"    shift, and go to state 202

    $default  reduce using rule 203 (statement)

    label                  go to state 308
    variable_reference     go to state 309
    variable_identifier    go to state 211
    function_identifier    go to state 310
    procedure_identifier   go to state 311
    statement              go to state 442
    simple_statement       go to state 313
    assignment_statement   go to state 314
    procedure_statement    go to state 315
    goto_statement         go to state 316
    structured_statement   go to state 317
    compound_statement     go to state 318
    conditional_statement  go to state 320
    if_statement           go to state 321
    case_statement         go to state 322
    repetitive_statement   go to state 323
    repeat_statement       go to state 324
    while_statement        go to state 325
    for_statement          go to state 326
    with_statement         go to state 327


state 433

  244 for_statement: "for" control_variable ":=" initial_value "to" . final_value "do" statement

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 216
    simple_expression_term_operator_iterable  go to state 217
    expression                                go to state 443
    function_call                             go to state 219
    function_identifier                       go to state 126
    set_constructor                           go to state 223
    final_value                               go to state 444


state 434

  245 for_statement: "for" control_variable ":=" initial_value "downto" . final_value "do" statement

    DECIMAL_INT    shift, and go to state 61
    HEXADECIMAL    shift, and go to state 62
    REAL_DECIMAL   shift, and go to state 63
    IDENTIFIER     shift, and go to state 193
    QUOTED_STRING  shift, and go to state 194
    QUOTED_CHAR    shift, and go to state 195
    "true"         shift, and go to state 196
    "false"        shift, and go to state 197
    "function"     shift, and go to state 102
    "nil"          shift, and go to state 198
    "not"          shift, and go to state 203
    '+'            shift, and go to state 67
    '-'            shift, and go to state 68
    '@'            shift, and go to state 204
    '('            shift, and go to state 205
    '['            shift, and go to state 207

    sign                                      go to state 208
    type_boolean                              go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 211
    unsigned_constant                         go to state 212
    unsigned_number                           go to state 213
    factor                                    go to state 214
    term                                      go to state 215
    simple_expression                         go to state 216
    simple_expression_term_operator_iterable  go to state 217
    expression                                go to state 443
    function_call                             go to state 219
    function_identifier                       go to state 126
    set_constructor                           go to state 223
    final_value                               go to state 445


state 435

  107 variant: constant_list ':' '(' field_list ')' .

    $default  reduce using rule 107 (variant)


state 436

  237 case: constant_list ':' statement .

    $default  reduce using rule 237 (case)


state 437

  234 case_statement: "case" expression "of" case_list ';' "end" .

    $default  reduce using rule 234 (case_statement)


state 438

  238 otherwise_clause: ';' "otherwise" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 300
    "begin"      shift, and go to state 230
    "case"       shift, and go to state 301
    "function"   shift, and go to state 102
    "goto"       shift, and go to state 302
    "if"         shift, and go to state 303
    "repeat"     shift, and go to state 304
    "while"      shift, and go to state 305
    "for"        shift, and go to state 306
    "with"       shift, and go to state 307
    "read"       shift, and go to state 199
    "readln"     shift, and go to state 200
    "write"      shift, and go to state 201
    "writeln"    shift, and go to state 202

    $default  reduce using rule 203 (statement)

    label                  go to state 308
    variable_reference     go to state 309
    variable_identifier    go to state 211
    function_identifier    go to state 310
    procedure_identifier   go to state 311
    statement              go to state 446
    simple_statement       go to state 313
    assignment_statement   go to state 314
    procedure_statement    go to state 315
    goto_statement         go to state 316
    structured_statement   go to state 317
    compound_statement     go to state 318
    conditional_statement  go to state 320
    if_statement           go to state 321
    case_statement         go to state 322
    repetitive_statement   go to state 323
    repeat_statement       go to state 324
    while_statement        go to state 325
    for_statement          go to state 326
    with_statement         go to state 327


state 439

  235 case_list: case_list ';' case .

    $default  reduce using rule 235 (case_list)


state 440

  232 case_statement: "case" expression "of" case_list otherwise_clause "end" .

    $default  reduce using rule 232 (case_statement)


state 441

  233 case_statement: "case" expression "of" case_list otherwise_clause ';' . "end"

    "end"  shift, and go to state 447


state 442

  230 if_statement: "if" expression "then" statement "else" statement .

    $default  reduce using rule 230 (if_statement)


state 443

  248 final_value: expression .

    $default  reduce using rule 248 (final_value)


state 444

  244 for_statement: "for" control_variable ":=" initial_value "to" final_value . "do" statement

    "do"  shift, and go to state 448


state 445

  245 for_statement: "for" control_variable ":=" initial_value "downto" final_value . "do" statement

    "do"  shift, and go to state 449


state 446

  238 otherwise_clause: ';' "otherwise" statement .

    $default  reduce using rule 238 (otherwise_clause)


state 447

  233 case_statement: "case" expression "of" case_list otherwise_clause ';' "end" .

    $default  reduce using rule 233 (case_statement)


state 448

  244 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 300
    "begin"      shift, and go to state 230
    "case"       shift, and go to state 301
    "function"   shift, and go to state 102
    "goto"       shift, and go to state 302
    "if"         shift, and go to state 303
    "repeat"     shift, and go to state 304
    "while"      shift, and go to state 305
    "for"        shift, and go to state 306
    "with"       shift, and go to state 307
    "read"       shift, and go to state 199
    "readln"     shift, and go to state 200
    "write"      shift, and go to state 201
    "writeln"    shift, and go to state 202

    $default  reduce using rule 203 (statement)

    label                  go to state 308
    variable_reference     go to state 309
    variable_identifier    go to state 211
    function_identifier    go to state 310
    procedure_identifier   go to state 311
    statement              go to state 450
    simple_statement       go to state 313
    assignment_statement   go to state 314
    procedure_statement    go to state 315
    goto_statement         go to state 316
    structured_statement   go to state 317
    compound_statement     go to state 318
    conditional_statement  go to state 320
    if_statement           go to state 321
    case_statement         go to state 322
    repetitive_statement   go to state 323
    repeat_statement       go to state 324
    while_statement        go to state 325
    for_statement          go to state 326
    with_statement         go to state 327


state 449

  245 for_statement: "for" control_variable ":=" initial_value "downto" final_value "do" . statement

    DECIMAL_INT  shift, and go to state 25
    IDENTIFIER   shift, and go to state 300
    "begin"      shift, and go to state 230
    "case"       shift, and go to state 301
    "function"   shift, and go to state 102
    "goto"       shift, and go to state 302
    "if"         shift, and go to state 303
    "repeat"     shift, and go to state 304
    "while"      shift, and go to state 305
    "for"        shift, and go to state 306
    "with"       shift, and go to state 307
    "read"       shift, and go to state 199
    "readln"     shift, and go to state 200
    "write"      shift, and go to state 201
    "writeln"    shift, and go to state 202

    $default  reduce using rule 203 (statement)

    label                  go to state 308
    variable_reference     go to state 309
    variable_identifier    go to state 211
    function_identifier    go to state 310
    procedure_identifier   go to state 311
    statement              go to state 451
    simple_statement       go to state 313
    assignment_statement   go to state 314
    procedure_statement    go to state 315
    goto_statement         go to state 316
    structured_statement   go to state 317
    compound_statement     go to state 318
    conditional_statement  go to state 320
    if_statement           go to state 321
    case_statement         go to state 322
    repetitive_statement   go to state 323
    repeat_statement       go to state 324
    while_statement        go to state 325
    for_statement          go to state 326
    with_statement         go to state 327


state 450

  244 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" statement .

    $default  reduce using rule 244 (for_statement)


state 451

  245 for_statement: "for" control_variable ":=" initial_value "downto" final_value "do" statement .

    $default  reduce using rule 245 (for_statement)
