Nonterminals useless in grammar

   regular_unit
   unit_heading
   interface_part
   uses_clause_empty
   constant_declaration_part_empty
   type_declaration_part_empty
   variable_declaration_part_empty
   procedure_and_function_declaration_part_empty
   implementation_part


Terminals unused in grammar

   "unit"
   "interface"
   "implementation"
   "real"
   "integer"
   "longint"
   "word"
   "char"
   "boolean"
   "true"
   "false"
   "read"
   "readln"
   "write"
   "writeln"
   ASSIGNMENT_PRECEDENCE
   "<>"
   "<="
   ">="
   POSITIVE
   NEGATIVE


Rules useless in grammar

  238 regular_unit: unit_heading ';' interface_part implementation_part "end" '.'

  239 unit_heading: "unit" IDENTIFIER

  240 interface_part: "interface" uses_clause_empty constant_declaration_part_empty type_declaration_part_empty variable_declaration_part_empty procedure_and_function_declaration_part_empty

  241 uses_clause_empty: uses_clause
  242                  | /* empty */

  243 constant_declaration_part_empty: constant_declaration_part
  244                                | /* empty */

  245 type_declaration_part_empty: type_declaration_part
  246                            | /* empty */

  247 variable_declaration_part_empty: variable_declaration_part
  248                                | /* empty */

  249 procedure_and_function_declaration_part_empty: procedure_and_function_declaration_part
  250                                              | /* empty */

  251 implementation_part: "implementation" constant_declaration_part_empty type_declaration_part_empty variable_declaration_part_empty procedure_and_function_declaration_part_empty


Rules useless in parser due to conflicts

   60 real_type_identifier: IDENTIFIER

   62 string_type: IDENTIFIER

   65 structured_type: IDENTIFIER

   97 pointer_type: IDENTIFIER

  113 pointer_object_symbol: '^'

  158 actual_parameter: variable_reference
  160                 | function_identifier

  228 result_type: ordinal_type_identifier


State 69 conflicts: 3 reduce/reduce
State 128 conflicts: 1 reduce/reduce
State 186 conflicts: 2 reduce/reduce
State 187 conflicts: 2 reduce/reduce
State 194 conflicts: 21 reduce/reduce
State 234 conflicts: 25 reduce/reduce
State 297 conflicts: 10 reduce/reduce
State 298 conflicts: 2 reduce/reduce
State 300 conflicts: 2 reduce/reduce
State 310 conflicts: 1 shift/reduce
State 327 conflicts: 1 shift/reduce
State 356 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_heading ';' block
    2        | program_heading ';' uses_clause ';' block

    3 program_heading: "program" IDENTIFIER
    4                | "program" IDENTIFIER '(' program_parameters ')'

    5 program_parameters: identifier_list

    6 uses_clause: "uses" identifier_list

    7 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part

    8 label_declaration_part: "label" label_list ';'
    9                       | /* empty */

   10 label_list: label_list ',' label
   11           | label

   12 label: DECIMAL_INT

   13 constant_declaration_part: "const" constant_declaration_list
   14                          | /* empty */

   15 constant_declaration_list: constant_declaration_list constant_declaration
   16                          | constant_declaration

   17 constant_declaration: IDENTIFIER '=' constant ';'

   18 constant: constant_identifier
   19         | sign constant_identifier
   20         | DECIMAL_INT
   21         | HEXADECIMAL
   22         | REAL_DECIMAL
   23         | QUOTED_STRING
   24         | QUOTED_CHAR

   25 constant_identifier: IDENTIFIER

   26 type_declaration_part: "type" type_declaration_list
   27                      | /* empty */

   28 type_declaration_list: type_declaration_list type_declaration
   29                      | type_declaration

   30 type_declaration: IDENTIFIER '=' type ';'

   31 variable_declaration_part: "var" variable_declaration_list
   32                          | /* empty */

   33 variable_declaration_list: variable_declaration_list variable_declaration
   34                          | variable_declaration

   35 variable_declaration: identifier_list ':' type ';'

   36 procedure_and_function_declaration_part: procedure_and_function_declaration_list
   37                                        | /* empty */

   38 procedure_and_function_declaration_list: procedure_and_function_declaration_list procedure_and_function_declaration
   39                                        | procedure_and_function_declaration

   40 procedure_and_function_declaration: procedure_declaration
   41                                   | function_declaration

   42 statement_part: compound_statement

   43 sign: '+'
   44     | '-'

   45 identifier_list: identifier_list ',' IDENTIFIER
   46                | IDENTIFIER

   47 type: simple_type
   48     | structured_type
   49     | pointer_type

   50 simple_type: ordinal_type
   51            | real_type
   52            | string_type

   53 ordinal_type: subrange_type
   54             | enumerated_type
   55             | ordinal_type_identifier

   56 ordinal_type_identifier: IDENTIFIER

   57 enumerated_type: '(' identifier_list ')'

   58 subrange_type: constant ".." constant

   59 real_type: real_type_identifier

   60 real_type_identifier: IDENTIFIER

   61 string_type: "string" '[' DECIMAL_INT ']'
   62            | IDENTIFIER

   63 structured_type: "packed" type_list
   64                | type_list
   65                | IDENTIFIER

   66 type_list: array_type
   67          | set_type
   68          | file_type
   69          | record_type

   70 array_type: "array" '[' index_type_list ']' "of" type

   71 index_type_list: index_type_list ',' ordinal_type
   72                | ordinal_type

   73 record_type: "record" "end"
   74            | "record" field_list "end"

   75 field_list: fixed_part
   76           | fixed_part ';'
   77           | fixed_part ';' variant_part
   78           | fixed_part ';' variant_part ';'
   79           | variant_part
   80           | variant_part ';'

   81 fixed_part: fixed_part ';' field_declaration
   82           | field_declaration

   83 field_declaration: identifier_list ':' type

   84 variant_part: "case" tag_field_type "of" variant_list
   85             | "case" IDENTIFIER ':' tag_field_type "of" variant_list

   86 variant_list: variant_list ';' variant
   87             | variant

   88 variant: constant_list ':' '(' ')'
   89        | constant_list ':' '(' field_list ')'

   90 constant_list: constant_list ',' constant
   91              | constant

   92 tag_field_type: IDENTIFIER

   93 set_type: "set" "of" ordinal_type

   94 file_type: "file"
   95          | "of" type

   96 pointer_type: '^' base_type
   97             | IDENTIFIER

   98 base_type: IDENTIFIER

   99 variable_reference: variable_identifier qualifier_list
  100                   | variable_identifier

  101 variable_identifier: IDENTIFIER

  102 qualifier_list: qualifier_list qualifier
  103               | qualifier

  104 qualifier: index
  105          | field_designator
  106          | file_buffer_symbol
  107          | pointer_object_symbol

  108 index: '[' expression_list ']'

  109 expression_list: expression_list ',' expression
  110                | expression

  111 field_designator: '.' IDENTIFIER

  112 file_buffer_symbol: '^'

  113 pointer_object_symbol: '^'

  114 unsigned_constant: unsigned_number
  115                  | QUOTED_STRING
  116                  | constant_identifier
  117                  | "nil"

  118 unsigned_number: DECIMAL_INT
  119                | HEXADECIMAL
  120                | REAL_DECIMAL

  121 factor: variable_reference
  122       | '@' variable_reference
  123       | unsigned_constant
  124       | function_call
  125       | set_constructor
  126       | '(' expression ')'
  127       | "not" factor

  128 term: term term_operator_list factor
  129     | factor

  130 term_operator_list: '*'
  131                   | '/'
  132                   | "div"
  133                   | "mod"
  134                   | "and"

  135 simple_expression: sign simple_expression_term_operator_iterable
  136                  | simple_expression_term_operator_iterable

  137 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list term
  138                                         | term

  139 simple_expression_term_operator_list: '+'
  140                                     | '-'
  141                                     | "or"

  142 expression: simple_expression
  143           | relational_operator simple_expression

  144 relational_operator: '='
  145                    | '<'
  146                    | '>'
  147                    | LE
  148                    | RE
  149                    | NOTEQUAL
  150                    | "in"

  151 function_call: function_identifier
  152              | function_identifier actual_parameter_list

  153 function_identifier: IDENTIFIER

  154 actual_parameter_list: '(' actual_parameter_iterable ')'

  155 actual_parameter_iterable: actual_parameter_iterable ',' actual_parameter
  156                          | actual_parameter

  157 actual_parameter: expression
  158                 | variable_reference
  159                 | procedure_identifier
  160                 | function_identifier

  161 procedure_identifier: IDENTIFIER

  162 set_constructor: '[' ']'
  163                | '[' member_group_list ']'

  164 member_group_list: member_group_list ',' member_group
  165                  | member_group

  166 member_group: expression
  167             | expression ".." expression

  168 statement: /* empty */
  169          | label ':'
  170          | label ':' simple_statement
  171          | label ':' structured_statement
  172          | simple_statement
  173          | structured_statement

  174 simple_statement: assignment_statement
  175                 | procedure_statement
  176                 | goto_statement

  177 assignment_statement: variable_reference ":=" expression
  178                     | function_identifier ":=" expression

  179 procedure_statement: procedure_identifier
  180                    | procedure_identifier actual_parameter_list

  181 goto_statement: "goto" label

  182 structured_statement: compound_statement
  183                     | conditional_statement
  184                     | repetitive_statement
  185                     | with_statement

  186 compound_statement: "begin" statement_list "end"

  187 statement_list: statement_list ';' statement
  188               | statement

  189 conditional_statement: if_statement
  190                      | case_statement

  191 if_statement: "if" expression "then" statement
  192             | "if" expression "then" statement "else" statement

  193 case_statement: "case" expression "of" case_list "end"
  194               | "case" expression "of" case_list otherwise_clause "end"
  195               | "case" expression "of" case_list otherwise_clause ';' "end"
  196               | "case" expression "of" case_list ';' "end"

  197 case_list: case_list ',' case
  198          | case

  199 case: constant_list ':' statement

  200 otherwise_clause: ';' "otherwise" statement

  201 repetitive_statement: repeat_statement
  202                     | while_statement
  203                     | for_statement

  204 repeat_statement: "repeat" statement_list "until" expression

  205 while_statement: "while" expression "do" statement

  206 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" statement
  207              | "for" control_variable ":=" initial_value "downto" final_value "do" statement

  208 control_variable: IDENTIFIER

  209 initial_value: expression

  210 final_value: expression

  211 with_statement: "with" record_variable_reference_list "do" statement

  212 record_variable_reference_list: record_variable_reference_list ',' variable_reference
  213                               | variable_reference

  214 procedure_declaration: procedure_heading ';' procedure_body ';'

  215 procedure_body: block
  216               | "forward"
  217               | "external"

  218 procedure_heading: "procedure" IDENTIFIER
  219                  | "procedure" IDENTIFIER formal_parameter_list

  220 function_declaration: function_heading ';' function_body ';'

  221 function_body: block
  222              | "forward"
  223              | "external"

  224 function_heading: "function" IDENTIFIER ':' result_type
  225                 | "function" IDENTIFIER formal_parameter_list ':' result_type

  226 result_type: ordinal_type_identifier
  227            | real_type_identifier
  228            | ordinal_type_identifier

  229 formal_parameter_list: '(' formal_parameter_list_iterable ')'

  230 formal_parameter_list_iterable: formal_parameter_list_iterable ';' formal_parameter_list_iterable_list
  231                               | formal_parameter_list_iterable_list

  232 formal_parameter_list_iterable_list: parameter_declaration
  233                                    | procedure_heading
  234                                    | function_heading

  235 parameter_declaration: "var" identifier_list ':' type_identifier
  236                      | identifier_list ':' type_identifier

  237 type_identifier: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 4 57 88 89 126 154 229
')' (41) 4 57 88 89 126 154 229
'*' (42) 130
'+' (43) 43 139
',' (44) 10 45 71 90 109 155 164 197 212
'-' (45) 44 140
'.' (46) 111
'/' (47) 131
':' (58) 35 83 85 88 89 169 170 171 199 224 225 235 236
';' (59) 1 2 8 17 30 35 76 77 78 80 81 86 187 195 196 200 214 220 230
'<' (60) 145
'=' (61) 17 30 144
'>' (62) 146
'@' (64) 122
'[' (91) 61 70 108 162 163
']' (93) 61 70 108 162 163
'^' (94) 96 112 113
error (256)
DECIMAL_INT (258) 12 20 61 118
HEXADECIMAL (259) 21 119
REAL_DECIMAL (260) 22 120
IDENTIFIER (261) 3 4 17 25 30 45 46 56 60 62 65 85 92 97 98 101 111
    153 161 208 218 219 224 225 237
QUOTED_STRING (262) 23 115
QUOTED_CHAR (263) 24
"program" (264) 3 4
"begin" (265) 186
"uses" (266) 6
"unit" (267)
"interface" (268)
"implementation" (269)
"label" (270) 8
"const" (271) 13
"type" (272) 26
"real" (273)
"integer" (274)
"longint" (275)
"word" (276)
"char" (277)
"boolean" (278)
"true" (279)
"false" (280)
"string" (281) 61
"packed" (282) 63
"array" (283) 70
"record" (284) 73 74
"end" (285) 73 74 186 193 194 195 196
"case" (286) 84 85 193 194 195 196
"otherwise" (287) 200
"of" (288) 70 84 85 93 95 193 194 195 196
"set" (289) 93
"var" (290) 31 235
"forward" (291) 216 222
"external" (292) 217 223
"function" (293) 224 225
"procedure" (294) 218 219
"file" (295) 94
"goto" (296) 181
"if" (297) 191 192
"then" (298) 191 192
"else" (299) 192
"repeat" (300) 204
"until" (301) 204
"while" (302) 205
"do" (303) 205 206 207 211
"for" (304) 206 207
"to" (305) 206
"downto" (306) 207
"with" (307) 211
"nil" (308) 117
"read" (309)
"readln" (310)
"write" (311)
"writeln" (312)
"in" (313) 150
"or" (314) 141
"div" (315) 132
"mod" (316) 133
"and" (317) 134
"not" (318) 127
ASSIGNMENT_PRECEDENCE (319)
":=" (320) 177 178 206 207
".." (321) 58 167
"<>" (322)
"<=" (323)
">=" (324)
RE (325) 148
LE (326) 147
NOTEQUAL (327) 149
POSITIVE (328)
NEGATIVE (329)


Nonterminals, with rules where they appear

$accept (92)
    on left: 0
program (93)
    on left: 1 2, on right: 0
program_heading (94)
    on left: 3 4, on right: 1 2
program_parameters (95)
    on left: 5, on right: 4
uses_clause (96)
    on left: 6, on right: 2
block (97)
    on left: 7, on right: 1 2 215 221
label_declaration_part (98)
    on left: 8 9, on right: 7
label_list (99)
    on left: 10 11, on right: 8 10
label (100)
    on left: 12, on right: 10 11 169 170 171 181
constant_declaration_part (101)
    on left: 13 14, on right: 7
constant_declaration_list (102)
    on left: 15 16, on right: 13 15
constant_declaration (103)
    on left: 17, on right: 15 16
constant (104)
    on left: 18 19 20 21 22 23 24, on right: 17 58 90 91
constant_identifier (105)
    on left: 25, on right: 18 19 116
type_declaration_part (106)
    on left: 26 27, on right: 7
type_declaration_list (107)
    on left: 28 29, on right: 26 28
type_declaration (108)
    on left: 30, on right: 28 29
variable_declaration_part (109)
    on left: 31 32, on right: 7
variable_declaration_list (110)
    on left: 33 34, on right: 31 33
variable_declaration (111)
    on left: 35, on right: 33 34
procedure_and_function_declaration_part (112)
    on left: 36 37, on right: 7
procedure_and_function_declaration_list (113)
    on left: 38 39, on right: 36 38
procedure_and_function_declaration (114)
    on left: 40 41, on right: 38 39
statement_part (115)
    on left: 42, on right: 7
sign (116)
    on left: 43 44, on right: 19 135
identifier_list (117)
    on left: 45 46, on right: 5 6 35 45 57 83 235 236
type (118)
    on left: 47 48 49, on right: 30 35 70 83 95
simple_type (119)
    on left: 50 51 52, on right: 47
ordinal_type (120)
    on left: 53 54 55, on right: 50 71 72 93
ordinal_type_identifier (121)
    on left: 56, on right: 55 226 228
enumerated_type (122)
    on left: 57, on right: 54
subrange_type (123)
    on left: 58, on right: 53
real_type (124)
    on left: 59, on right: 51
real_type_identifier (125)
    on left: 60, on right: 59 227
string_type (126)
    on left: 61 62, on right: 52
structured_type (127)
    on left: 63 64 65, on right: 48
type_list (128)
    on left: 66 67 68 69, on right: 63 64
array_type (129)
    on left: 70, on right: 66
index_type_list (130)
    on left: 71 72, on right: 70 71
record_type (131)
    on left: 73 74, on right: 69
field_list (132)
    on left: 75 76 77 78 79 80, on right: 74 89
fixed_part (133)
    on left: 81 82, on right: 75 76 77 78 81
field_declaration (134)
    on left: 83, on right: 81 82
variant_part (135)
    on left: 84 85, on right: 77 78 79 80
variant_list (136)
    on left: 86 87, on right: 84 85 86
variant (137)
    on left: 88 89, on right: 86 87
constant_list (138)
    on left: 90 91, on right: 88 89 90 199
tag_field_type (139)
    on left: 92, on right: 84 85
set_type (140)
    on left: 93, on right: 67
file_type (141)
    on left: 94 95, on right: 68
pointer_type (142)
    on left: 96 97, on right: 49
base_type (143)
    on left: 98, on right: 96
variable_reference (144)
    on left: 99 100, on right: 121 122 158 177 212 213
variable_identifier (145)
    on left: 101, on right: 99 100
qualifier_list (146)
    on left: 102 103, on right: 99 102
qualifier (147)
    on left: 104 105 106 107, on right: 102 103
index (148)
    on left: 108, on right: 104
expression_list (149)
    on left: 109 110, on right: 108 109
field_designator (150)
    on left: 111, on right: 105
file_buffer_symbol (151)
    on left: 112, on right: 106
pointer_object_symbol (152)
    on left: 113, on right: 107
unsigned_constant (153)
    on left: 114 115 116 117, on right: 123
unsigned_number (154)
    on left: 118 119 120, on right: 114
factor (155)
    on left: 121 122 123 124 125 126 127, on right: 127 128 129
term (156)
    on left: 128 129, on right: 128 137 138
term_operator_list (157)
    on left: 130 131 132 133 134, on right: 128
simple_expression (158)
    on left: 135 136, on right: 142 143
simple_expression_term_operator_iterable (159)
    on left: 137 138, on right: 135 136 137
simple_expression_term_operator_list (160)
    on left: 139 140 141, on right: 137
expression (161)
    on left: 142 143, on right: 109 110 126 157 166 167 177 178 191
    192 193 194 195 196 204 205 209 210
relational_operator (162)
    on left: 144 145 146 147 148 149 150, on right: 143
function_call (163)
    on left: 151 152, on right: 124
function_identifier (164)
    on left: 153, on right: 151 152 160 178
actual_parameter_list (165)
    on left: 154, on right: 152 180
actual_parameter_iterable (166)
    on left: 155 156, on right: 154 155
actual_parameter (167)
    on left: 157 158 159 160, on right: 155 156
procedure_identifier (168)
    on left: 161, on right: 159 179 180
set_constructor (169)
    on left: 162 163, on right: 125
member_group_list (170)
    on left: 164 165, on right: 163 164
member_group (171)
    on left: 166 167, on right: 164 165
statement (172)
    on left: 168 169 170 171 172 173, on right: 187 188 191 192 199
    200 205 206 207 211
simple_statement (173)
    on left: 174 175 176, on right: 170 172
assignment_statement (174)
    on left: 177 178, on right: 174
procedure_statement (175)
    on left: 179 180, on right: 175
goto_statement (176)
    on left: 181, on right: 176
structured_statement (177)
    on left: 182 183 184 185, on right: 171 173
compound_statement (178)
    on left: 186, on right: 42 182
statement_list (179)
    on left: 187 188, on right: 186 187 204
conditional_statement (180)
    on left: 189 190, on right: 183
if_statement (181)
    on left: 191 192, on right: 189
case_statement (182)
    on left: 193 194 195 196, on right: 190
case_list (183)
    on left: 197 198, on right: 193 194 195 196 197
case (184)
    on left: 199, on right: 197 198
otherwise_clause (185)
    on left: 200, on right: 194 195
repetitive_statement (186)
    on left: 201 202 203, on right: 184
repeat_statement (187)
    on left: 204, on right: 201
while_statement (188)
    on left: 205, on right: 202
for_statement (189)
    on left: 206 207, on right: 203
control_variable (190)
    on left: 208, on right: 206 207
initial_value (191)
    on left: 209, on right: 206 207
final_value (192)
    on left: 210, on right: 206 207
with_statement (193)
    on left: 211, on right: 185
record_variable_reference_list (194)
    on left: 212 213, on right: 211 212
procedure_declaration (195)
    on left: 214, on right: 40
procedure_body (196)
    on left: 215 216 217, on right: 214
procedure_heading (197)
    on left: 218 219, on right: 214 233
function_declaration (198)
    on left: 220, on right: 41
function_body (199)
    on left: 221 222 223, on right: 220
function_heading (200)
    on left: 224 225, on right: 220 234
result_type (201)
    on left: 226 227 228, on right: 224 225
formal_parameter_list (202)
    on left: 229, on right: 219 225
formal_parameter_list_iterable (203)
    on left: 230 231, on right: 229 230
formal_parameter_list_iterable_list (204)
    on left: 232 233 234, on right: 230 231
parameter_declaration (205)
    on left: 235 236, on right: 232
type_identifier (206)
    on left: 237, on right: 235 236


state 0

    0 $accept: . program $end

    "program"  shift, and go to state 1

    program          go to state 2
    program_heading  go to state 3


state 1

    3 program_heading: "program" . IDENTIFIER
    4                | "program" . IDENTIFIER '(' program_parameters ')'

    IDENTIFIER  shift, and go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: program_heading . ';' block
    2        | program_heading . ';' uses_clause ';' block

    ';'  shift, and go to state 6


state 4

    3 program_heading: "program" IDENTIFIER .
    4                | "program" IDENTIFIER . '(' program_parameters ')'

    '('  shift, and go to state 7

    $default  reduce using rule 3 (program_heading)


state 5

    0 $accept: program $end .

    $default  accept


state 6

    1 program: program_heading ';' . block
    2        | program_heading ';' . uses_clause ';' block

    "uses"   shift, and go to state 8
    "label"  shift, and go to state 9

    $default  reduce using rule 9 (label_declaration_part)

    uses_clause             go to state 10
    block                   go to state 11
    label_declaration_part  go to state 12


state 7

    4 program_heading: "program" IDENTIFIER '(' . program_parameters ')'

    IDENTIFIER  shift, and go to state 13

    program_parameters  go to state 14
    identifier_list     go to state 15


state 8

    6 uses_clause: "uses" . identifier_list

    IDENTIFIER  shift, and go to state 13

    identifier_list  go to state 16


state 9

    8 label_declaration_part: "label" . label_list ';'

    DECIMAL_INT  shift, and go to state 17

    label_list  go to state 18
    label       go to state 19


state 10

    2 program: program_heading ';' uses_clause . ';' block

    ';'  shift, and go to state 20


state 11

    1 program: program_heading ';' block .

    $default  reduce using rule 1 (program)


state 12

    7 block: label_declaration_part . constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part

    "const"  shift, and go to state 21

    $default  reduce using rule 14 (constant_declaration_part)

    constant_declaration_part  go to state 22


state 13

   46 identifier_list: IDENTIFIER .

    $default  reduce using rule 46 (identifier_list)


state 14

    4 program_heading: "program" IDENTIFIER '(' program_parameters . ')'

    ')'  shift, and go to state 23


state 15

    5 program_parameters: identifier_list .
   45 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 24

    $default  reduce using rule 5 (program_parameters)


state 16

    6 uses_clause: "uses" identifier_list .
   45 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 24

    $default  reduce using rule 6 (uses_clause)


state 17

   12 label: DECIMAL_INT .

    $default  reduce using rule 12 (label)


state 18

    8 label_declaration_part: "label" label_list . ';'
   10 label_list: label_list . ',' label

    ';'  shift, and go to state 25
    ','  shift, and go to state 26


state 19

   11 label_list: label .

    $default  reduce using rule 11 (label_list)


state 20

    2 program: program_heading ';' uses_clause ';' . block

    "label"  shift, and go to state 9

    $default  reduce using rule 9 (label_declaration_part)

    block                   go to state 27
    label_declaration_part  go to state 12


state 21

   13 constant_declaration_part: "const" . constant_declaration_list

    IDENTIFIER  shift, and go to state 28

    constant_declaration_list  go to state 29
    constant_declaration       go to state 30


state 22

    7 block: label_declaration_part constant_declaration_part . type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part

    "type"  shift, and go to state 31

    $default  reduce using rule 27 (type_declaration_part)

    type_declaration_part  go to state 32


state 23

    4 program_heading: "program" IDENTIFIER '(' program_parameters ')' .

    $default  reduce using rule 4 (program_heading)


state 24

   45 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 33


state 25

    8 label_declaration_part: "label" label_list ';' .

    $default  reduce using rule 8 (label_declaration_part)


state 26

   10 label_list: label_list ',' . label

    DECIMAL_INT  shift, and go to state 17

    label  go to state 34


state 27

    2 program: program_heading ';' uses_clause ';' block .

    $default  reduce using rule 2 (program)


state 28

   17 constant_declaration: IDENTIFIER . '=' constant ';'

    '='  shift, and go to state 35


state 29

   13 constant_declaration_part: "const" constant_declaration_list .
   15 constant_declaration_list: constant_declaration_list . constant_declaration

    IDENTIFIER  shift, and go to state 28

    $default  reduce using rule 13 (constant_declaration_part)

    constant_declaration  go to state 36


state 30

   16 constant_declaration_list: constant_declaration .

    $default  reduce using rule 16 (constant_declaration_list)


state 31

   26 type_declaration_part: "type" . type_declaration_list

    IDENTIFIER  shift, and go to state 37

    type_declaration_list  go to state 38
    type_declaration       go to state 39


state 32

    7 block: label_declaration_part constant_declaration_part type_declaration_part . variable_declaration_part procedure_and_function_declaration_part statement_part

    "var"  shift, and go to state 40

    $default  reduce using rule 32 (variable_declaration_part)

    variable_declaration_part  go to state 41


state 33

   45 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 45 (identifier_list)


state 34

   10 label_list: label_list ',' label .

    $default  reduce using rule 10 (label_list)


state 35

   17 constant_declaration: IDENTIFIER '=' . constant ';'

    DECIMAL_INT    shift, and go to state 42
    HEXADECIMAL    shift, and go to state 43
    REAL_DECIMAL   shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    QUOTED_STRING  shift, and go to state 46
    QUOTED_CHAR    shift, and go to state 47
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49

    constant             go to state 50
    constant_identifier  go to state 51
    sign                 go to state 52


state 36

   15 constant_declaration_list: constant_declaration_list constant_declaration .

    $default  reduce using rule 15 (constant_declaration_list)


state 37

   30 type_declaration: IDENTIFIER . '=' type ';'

    '='  shift, and go to state 53


state 38

   26 type_declaration_part: "type" type_declaration_list .
   28 type_declaration_list: type_declaration_list . type_declaration

    IDENTIFIER  shift, and go to state 37

    $default  reduce using rule 26 (type_declaration_part)

    type_declaration  go to state 54


state 39

   29 type_declaration_list: type_declaration .

    $default  reduce using rule 29 (type_declaration_list)


state 40

   31 variable_declaration_part: "var" . variable_declaration_list

    IDENTIFIER  shift, and go to state 13

    variable_declaration_list  go to state 55
    variable_declaration       go to state 56
    identifier_list            go to state 57


state 41

    7 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part . procedure_and_function_declaration_part statement_part

    "function"   shift, and go to state 58
    "procedure"  shift, and go to state 59

    $default  reduce using rule 37 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 60
    procedure_and_function_declaration_list  go to state 61
    procedure_and_function_declaration       go to state 62
    procedure_declaration                    go to state 63
    procedure_heading                        go to state 64
    function_declaration                     go to state 65
    function_heading                         go to state 66


state 42

   20 constant: DECIMAL_INT .

    $default  reduce using rule 20 (constant)


state 43

   21 constant: HEXADECIMAL .

    $default  reduce using rule 21 (constant)


state 44

   22 constant: REAL_DECIMAL .

    $default  reduce using rule 22 (constant)


state 45

   25 constant_identifier: IDENTIFIER .

    $default  reduce using rule 25 (constant_identifier)


state 46

   23 constant: QUOTED_STRING .

    $default  reduce using rule 23 (constant)


state 47

   24 constant: QUOTED_CHAR .

    $default  reduce using rule 24 (constant)


state 48

   43 sign: '+' .

    $default  reduce using rule 43 (sign)


state 49

   44 sign: '-' .

    $default  reduce using rule 44 (sign)


state 50

   17 constant_declaration: IDENTIFIER '=' constant . ';'

    ';'  shift, and go to state 67


state 51

   18 constant: constant_identifier .

    $default  reduce using rule 18 (constant)


state 52

   19 constant: sign . constant_identifier

    IDENTIFIER  shift, and go to state 45

    constant_identifier  go to state 68


state 53

   30 type_declaration: IDENTIFIER '=' . type ';'

    DECIMAL_INT    shift, and go to state 42
    HEXADECIMAL    shift, and go to state 43
    REAL_DECIMAL   shift, and go to state 44
    IDENTIFIER     shift, and go to state 69
    QUOTED_STRING  shift, and go to state 46
    QUOTED_CHAR    shift, and go to state 47
    "string"       shift, and go to state 70
    "packed"       shift, and go to state 71
    "array"        shift, and go to state 72
    "record"       shift, and go to state 73
    "of"           shift, and go to state 74
    "set"          shift, and go to state 75
    "file"         shift, and go to state 76
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '('            shift, and go to state 77
    '^'            shift, and go to state 78

    constant                 go to state 79
    constant_identifier      go to state 51
    sign                     go to state 52
    type                     go to state 80
    simple_type              go to state 81
    ordinal_type             go to state 82
    ordinal_type_identifier  go to state 83
    enumerated_type          go to state 84
    subrange_type            go to state 85
    real_type                go to state 86
    real_type_identifier     go to state 87
    string_type              go to state 88
    structured_type          go to state 89
    type_list                go to state 90
    array_type               go to state 91
    record_type              go to state 92
    set_type                 go to state 93
    file_type                go to state 94
    pointer_type             go to state 95


state 54

   28 type_declaration_list: type_declaration_list type_declaration .

    $default  reduce using rule 28 (type_declaration_list)


state 55

   31 variable_declaration_part: "var" variable_declaration_list .
   33 variable_declaration_list: variable_declaration_list . variable_declaration

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 31 (variable_declaration_part)

    variable_declaration  go to state 96
    identifier_list       go to state 57


state 56

   34 variable_declaration_list: variable_declaration .

    $default  reduce using rule 34 (variable_declaration_list)


state 57

   35 variable_declaration: identifier_list . ':' type ';'
   45 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 24
    ':'  shift, and go to state 97


state 58

  224 function_heading: "function" . IDENTIFIER ':' result_type
  225                 | "function" . IDENTIFIER formal_parameter_list ':' result_type

    IDENTIFIER  shift, and go to state 98


state 59

  218 procedure_heading: "procedure" . IDENTIFIER
  219                  | "procedure" . IDENTIFIER formal_parameter_list

    IDENTIFIER  shift, and go to state 99


state 60

    7 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part . statement_part

    "begin"  shift, and go to state 100

    statement_part      go to state 101
    compound_statement  go to state 102


state 61

   36 procedure_and_function_declaration_part: procedure_and_function_declaration_list .
   38 procedure_and_function_declaration_list: procedure_and_function_declaration_list . procedure_and_function_declaration

    "function"   shift, and go to state 58
    "procedure"  shift, and go to state 59

    $default  reduce using rule 36 (procedure_and_function_declaration_part)

    procedure_and_function_declaration  go to state 103
    procedure_declaration               go to state 63
    procedure_heading                   go to state 64
    function_declaration                go to state 65
    function_heading                    go to state 66


state 62

   39 procedure_and_function_declaration_list: procedure_and_function_declaration .

    $default  reduce using rule 39 (procedure_and_function_declaration_list)


state 63

   40 procedure_and_function_declaration: procedure_declaration .

    $default  reduce using rule 40 (procedure_and_function_declaration)


state 64

  214 procedure_declaration: procedure_heading . ';' procedure_body ';'

    ';'  shift, and go to state 104


state 65

   41 procedure_and_function_declaration: function_declaration .

    $default  reduce using rule 41 (procedure_and_function_declaration)


state 66

  220 function_declaration: function_heading . ';' function_body ';'

    ';'  shift, and go to state 105


state 67

   17 constant_declaration: IDENTIFIER '=' constant ';' .

    $default  reduce using rule 17 (constant_declaration)


state 68

   19 constant: sign constant_identifier .

    $default  reduce using rule 19 (constant)


state 69

   25 constant_identifier: IDENTIFIER .
   56 ordinal_type_identifier: IDENTIFIER .
   60 real_type_identifier: IDENTIFIER .
   62 string_type: IDENTIFIER .
   65 structured_type: IDENTIFIER .
   97 pointer_type: IDENTIFIER .

    "end"     reduce using rule 56 (ordinal_type_identifier)
    "end"     [reduce using rule 60 (real_type_identifier)]
    "end"     [reduce using rule 62 (string_type)]
    "end"     [reduce using rule 65 (structured_type)]
    "end"     [reduce using rule 97 (pointer_type)]
    ".."      reduce using rule 25 (constant_identifier)
    ';'       reduce using rule 56 (ordinal_type_identifier)
    ';'       [reduce using rule 60 (real_type_identifier)]
    ';'       [reduce using rule 62 (string_type)]
    ';'       [reduce using rule 65 (structured_type)]
    ';'       [reduce using rule 97 (pointer_type)]
    ')'       reduce using rule 56 (ordinal_type_identifier)
    ')'       [reduce using rule 60 (real_type_identifier)]
    ')'       [reduce using rule 62 (string_type)]
    ')'       [reduce using rule 65 (structured_type)]
    ')'       [reduce using rule 97 (pointer_type)]
    $default  reduce using rule 56 (ordinal_type_identifier)


state 70

   61 string_type: "string" . '[' DECIMAL_INT ']'

    '['  shift, and go to state 106


state 71

   63 structured_type: "packed" . type_list

    "array"   shift, and go to state 72
    "record"  shift, and go to state 73
    "of"      shift, and go to state 74
    "set"     shift, and go to state 75
    "file"    shift, and go to state 76

    type_list    go to state 107
    array_type   go to state 91
    record_type  go to state 92
    set_type     go to state 93
    file_type    go to state 94


state 72

   70 array_type: "array" . '[' index_type_list ']' "of" type

    '['  shift, and go to state 108


state 73

   73 record_type: "record" . "end"
   74            | "record" . field_list "end"

    IDENTIFIER  shift, and go to state 13
    "end"       shift, and go to state 109
    "case"      shift, and go to state 110

    identifier_list    go to state 111
    field_list         go to state 112
    fixed_part         go to state 113
    field_declaration  go to state 114
    variant_part       go to state 115


state 74

   95 file_type: "of" . type

    DECIMAL_INT    shift, and go to state 42
    HEXADECIMAL    shift, and go to state 43
    REAL_DECIMAL   shift, and go to state 44
    IDENTIFIER     shift, and go to state 69
    QUOTED_STRING  shift, and go to state 46
    QUOTED_CHAR    shift, and go to state 47
    "string"       shift, and go to state 70
    "packed"       shift, and go to state 71
    "array"        shift, and go to state 72
    "record"       shift, and go to state 73
    "of"           shift, and go to state 74
    "set"          shift, and go to state 75
    "file"         shift, and go to state 76
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '('            shift, and go to state 77
    '^'            shift, and go to state 78

    constant                 go to state 79
    constant_identifier      go to state 51
    sign                     go to state 52
    type                     go to state 116
    simple_type              go to state 81
    ordinal_type             go to state 82
    ordinal_type_identifier  go to state 83
    enumerated_type          go to state 84
    subrange_type            go to state 85
    real_type                go to state 86
    real_type_identifier     go to state 87
    string_type              go to state 88
    structured_type          go to state 89
    type_list                go to state 90
    array_type               go to state 91
    record_type              go to state 92
    set_type                 go to state 93
    file_type                go to state 94
    pointer_type             go to state 95


state 75

   93 set_type: "set" . "of" ordinal_type

    "of"  shift, and go to state 117


state 76

   94 file_type: "file" .

    $default  reduce using rule 94 (file_type)


state 77

   57 enumerated_type: '(' . identifier_list ')'

    IDENTIFIER  shift, and go to state 13

    identifier_list  go to state 118


state 78

   96 pointer_type: '^' . base_type

    IDENTIFIER  shift, and go to state 119

    base_type  go to state 120


state 79

   58 subrange_type: constant . ".." constant

    ".."  shift, and go to state 121


state 80

   30 type_declaration: IDENTIFIER '=' type . ';'

    ';'  shift, and go to state 122


state 81

   47 type: simple_type .

    $default  reduce using rule 47 (type)


state 82

   50 simple_type: ordinal_type .

    $default  reduce using rule 50 (simple_type)


state 83

   55 ordinal_type: ordinal_type_identifier .

    $default  reduce using rule 55 (ordinal_type)


state 84

   54 ordinal_type: enumerated_type .

    $default  reduce using rule 54 (ordinal_type)


state 85

   53 ordinal_type: subrange_type .

    $default  reduce using rule 53 (ordinal_type)


state 86

   51 simple_type: real_type .

    $default  reduce using rule 51 (simple_type)


state 87

   59 real_type: real_type_identifier .

    $default  reduce using rule 59 (real_type)


state 88

   52 simple_type: string_type .

    $default  reduce using rule 52 (simple_type)


state 89

   48 type: structured_type .

    $default  reduce using rule 48 (type)


state 90

   64 structured_type: type_list .

    $default  reduce using rule 64 (structured_type)


state 91

   66 type_list: array_type .

    $default  reduce using rule 66 (type_list)


state 92

   69 type_list: record_type .

    $default  reduce using rule 69 (type_list)


state 93

   67 type_list: set_type .

    $default  reduce using rule 67 (type_list)


state 94

   68 type_list: file_type .

    $default  reduce using rule 68 (type_list)


state 95

   49 type: pointer_type .

    $default  reduce using rule 49 (type)


state 96

   33 variable_declaration_list: variable_declaration_list variable_declaration .

    $default  reduce using rule 33 (variable_declaration_list)


state 97

   35 variable_declaration: identifier_list ':' . type ';'

    DECIMAL_INT    shift, and go to state 42
    HEXADECIMAL    shift, and go to state 43
    REAL_DECIMAL   shift, and go to state 44
    IDENTIFIER     shift, and go to state 69
    QUOTED_STRING  shift, and go to state 46
    QUOTED_CHAR    shift, and go to state 47
    "string"       shift, and go to state 70
    "packed"       shift, and go to state 71
    "array"        shift, and go to state 72
    "record"       shift, and go to state 73
    "of"           shift, and go to state 74
    "set"          shift, and go to state 75
    "file"         shift, and go to state 76
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '('            shift, and go to state 77
    '^'            shift, and go to state 78

    constant                 go to state 79
    constant_identifier      go to state 51
    sign                     go to state 52
    type                     go to state 123
    simple_type              go to state 81
    ordinal_type             go to state 82
    ordinal_type_identifier  go to state 83
    enumerated_type          go to state 84
    subrange_type            go to state 85
    real_type                go to state 86
    real_type_identifier     go to state 87
    string_type              go to state 88
    structured_type          go to state 89
    type_list                go to state 90
    array_type               go to state 91
    record_type              go to state 92
    set_type                 go to state 93
    file_type                go to state 94
    pointer_type             go to state 95


state 98

  224 function_heading: "function" IDENTIFIER . ':' result_type
  225                 | "function" IDENTIFIER . formal_parameter_list ':' result_type

    '('  shift, and go to state 124
    ':'  shift, and go to state 125

    formal_parameter_list  go to state 126


state 99

  218 procedure_heading: "procedure" IDENTIFIER .
  219                  | "procedure" IDENTIFIER . formal_parameter_list

    '('  shift, and go to state 124

    $default  reduce using rule 218 (procedure_heading)

    formal_parameter_list  go to state 127


state 100

  186 compound_statement: "begin" . statement_list "end"

    DECIMAL_INT  shift, and go to state 17
    IDENTIFIER   shift, and go to state 128
    "begin"      shift, and go to state 100
    "case"       shift, and go to state 129
    "goto"       shift, and go to state 130
    "if"         shift, and go to state 131
    "repeat"     shift, and go to state 132
    "while"      shift, and go to state 133
    "for"        shift, and go to state 134
    "with"       shift, and go to state 135

    $default  reduce using rule 168 (statement)

    label                  go to state 136
    variable_reference     go to state 137
    variable_identifier    go to state 138
    function_identifier    go to state 139
    procedure_identifier   go to state 140
    statement              go to state 141
    simple_statement       go to state 142
    assignment_statement   go to state 143
    procedure_statement    go to state 144
    goto_statement         go to state 145
    structured_statement   go to state 146
    compound_statement     go to state 147
    statement_list         go to state 148
    conditional_statement  go to state 149
    if_statement           go to state 150
    case_statement         go to state 151
    repetitive_statement   go to state 152
    repeat_statement       go to state 153
    while_statement        go to state 154
    for_statement          go to state 155
    with_statement         go to state 156


state 101

    7 block: label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part .

    $default  reduce using rule 7 (block)


state 102

   42 statement_part: compound_statement .

    $default  reduce using rule 42 (statement_part)


state 103

   38 procedure_and_function_declaration_list: procedure_and_function_declaration_list procedure_and_function_declaration .

    $default  reduce using rule 38 (procedure_and_function_declaration_list)


state 104

  214 procedure_declaration: procedure_heading ';' . procedure_body ';'

    "label"     shift, and go to state 9
    "forward"   shift, and go to state 157
    "external"  shift, and go to state 158

    $default  reduce using rule 9 (label_declaration_part)

    block                   go to state 159
    label_declaration_part  go to state 12
    procedure_body          go to state 160


state 105

  220 function_declaration: function_heading ';' . function_body ';'

    "label"     shift, and go to state 9
    "forward"   shift, and go to state 161
    "external"  shift, and go to state 162

    $default  reduce using rule 9 (label_declaration_part)

    block                   go to state 163
    label_declaration_part  go to state 12
    function_body           go to state 164


state 106

   61 string_type: "string" '[' . DECIMAL_INT ']'

    DECIMAL_INT  shift, and go to state 165


state 107

   63 structured_type: "packed" type_list .

    $default  reduce using rule 63 (structured_type)


state 108

   70 array_type: "array" '[' . index_type_list ']' "of" type

    DECIMAL_INT    shift, and go to state 42
    HEXADECIMAL    shift, and go to state 43
    REAL_DECIMAL   shift, and go to state 44
    IDENTIFIER     shift, and go to state 166
    QUOTED_STRING  shift, and go to state 46
    QUOTED_CHAR    shift, and go to state 47
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '('            shift, and go to state 77

    constant                 go to state 79
    constant_identifier      go to state 51
    sign                     go to state 52
    ordinal_type             go to state 167
    ordinal_type_identifier  go to state 83
    enumerated_type          go to state 84
    subrange_type            go to state 85
    index_type_list          go to state 168


state 109

   73 record_type: "record" "end" .

    $default  reduce using rule 73 (record_type)


state 110

   84 variant_part: "case" . tag_field_type "of" variant_list
   85             | "case" . IDENTIFIER ':' tag_field_type "of" variant_list

    IDENTIFIER  shift, and go to state 169

    tag_field_type  go to state 170


state 111

   45 identifier_list: identifier_list . ',' IDENTIFIER
   83 field_declaration: identifier_list . ':' type

    ','  shift, and go to state 24
    ':'  shift, and go to state 171


state 112

   74 record_type: "record" field_list . "end"

    "end"  shift, and go to state 172


state 113

   75 field_list: fixed_part .
   76           | fixed_part . ';'
   77           | fixed_part . ';' variant_part
   78           | fixed_part . ';' variant_part ';'
   81 fixed_part: fixed_part . ';' field_declaration

    ';'  shift, and go to state 173

    $default  reduce using rule 75 (field_list)


state 114

   82 fixed_part: field_declaration .

    $default  reduce using rule 82 (fixed_part)


state 115

   79 field_list: variant_part .
   80           | variant_part . ';'

    ';'  shift, and go to state 174

    $default  reduce using rule 79 (field_list)


state 116

   95 file_type: "of" type .

    $default  reduce using rule 95 (file_type)


state 117

   93 set_type: "set" "of" . ordinal_type

    DECIMAL_INT    shift, and go to state 42
    HEXADECIMAL    shift, and go to state 43
    REAL_DECIMAL   shift, and go to state 44
    IDENTIFIER     shift, and go to state 166
    QUOTED_STRING  shift, and go to state 46
    QUOTED_CHAR    shift, and go to state 47
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '('            shift, and go to state 77

    constant                 go to state 79
    constant_identifier      go to state 51
    sign                     go to state 52
    ordinal_type             go to state 175
    ordinal_type_identifier  go to state 83
    enumerated_type          go to state 84
    subrange_type            go to state 85


state 118

   45 identifier_list: identifier_list . ',' IDENTIFIER
   57 enumerated_type: '(' identifier_list . ')'

    ')'  shift, and go to state 176
    ','  shift, and go to state 24


state 119

   98 base_type: IDENTIFIER .

    $default  reduce using rule 98 (base_type)


state 120

   96 pointer_type: '^' base_type .

    $default  reduce using rule 96 (pointer_type)


state 121

   58 subrange_type: constant ".." . constant

    DECIMAL_INT    shift, and go to state 42
    HEXADECIMAL    shift, and go to state 43
    REAL_DECIMAL   shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    QUOTED_STRING  shift, and go to state 46
    QUOTED_CHAR    shift, and go to state 47
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49

    constant             go to state 177
    constant_identifier  go to state 51
    sign                 go to state 52


state 122

   30 type_declaration: IDENTIFIER '=' type ';' .

    $default  reduce using rule 30 (type_declaration)


state 123

   35 variable_declaration: identifier_list ':' type . ';'

    ';'  shift, and go to state 178


state 124

  229 formal_parameter_list: '(' . formal_parameter_list_iterable ')'

    IDENTIFIER   shift, and go to state 13
    "var"        shift, and go to state 179
    "function"   shift, and go to state 58
    "procedure"  shift, and go to state 59

    identifier_list                      go to state 180
    procedure_heading                    go to state 181
    function_heading                     go to state 182
    formal_parameter_list_iterable       go to state 183
    formal_parameter_list_iterable_list  go to state 184
    parameter_declaration                go to state 185


state 125

  224 function_heading: "function" IDENTIFIER ':' . result_type

    IDENTIFIER  shift, and go to state 186

    ordinal_type_identifier  go to state 187
    real_type_identifier     go to state 188
    result_type              go to state 189


state 126

  225 function_heading: "function" IDENTIFIER formal_parameter_list . ':' result_type

    ':'  shift, and go to state 190


state 127

  219 procedure_heading: "procedure" IDENTIFIER formal_parameter_list .

    $default  reduce using rule 219 (procedure_heading)


state 128

  101 variable_identifier: IDENTIFIER .
  153 function_identifier: IDENTIFIER .
  161 procedure_identifier: IDENTIFIER .

    ":="      reduce using rule 101 (variable_identifier)
    ":="      [reduce using rule 153 (function_identifier)]
    '['       reduce using rule 101 (variable_identifier)
    '^'       reduce using rule 101 (variable_identifier)
    '.'       reduce using rule 101 (variable_identifier)
    $default  reduce using rule 161 (procedure_identifier)


state 129

  193 case_statement: "case" . expression "of" case_list "end"
  194               | "case" . expression "of" case_list otherwise_clause "end"
  195               | "case" . expression "of" case_list otherwise_clause ';' "end"
  196               | "case" . expression "of" case_list ';' "end"

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "in"           shift, and go to state 197
    "not"          shift, and go to state 198
    '='            shift, and go to state 199
    '<'            shift, and go to state 200
    '>'            shift, and go to state 201
    RE             shift, and go to state 202
    LE             shift, and go to state 203
    NOTEQUAL       shift, and go to state 204
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 215
    simple_expression_term_operator_iterable  go to state 216
    expression                                go to state 217
    relational_operator                       go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 220
    set_constructor                           go to state 221


state 130

  181 goto_statement: "goto" . label

    DECIMAL_INT  shift, and go to state 17

    label  go to state 222


state 131

  191 if_statement: "if" . expression "then" statement
  192             | "if" . expression "then" statement "else" statement

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "in"           shift, and go to state 197
    "not"          shift, and go to state 198
    '='            shift, and go to state 199
    '<'            shift, and go to state 200
    '>'            shift, and go to state 201
    RE             shift, and go to state 202
    LE             shift, and go to state 203
    NOTEQUAL       shift, and go to state 204
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 215
    simple_expression_term_operator_iterable  go to state 216
    expression                                go to state 223
    relational_operator                       go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 220
    set_constructor                           go to state 221


state 132

  204 repeat_statement: "repeat" . statement_list "until" expression

    DECIMAL_INT  shift, and go to state 17
    IDENTIFIER   shift, and go to state 128
    "begin"      shift, and go to state 100
    "case"       shift, and go to state 129
    "goto"       shift, and go to state 130
    "if"         shift, and go to state 131
    "repeat"     shift, and go to state 132
    "while"      shift, and go to state 133
    "for"        shift, and go to state 134
    "with"       shift, and go to state 135

    $default  reduce using rule 168 (statement)

    label                  go to state 136
    variable_reference     go to state 137
    variable_identifier    go to state 138
    function_identifier    go to state 139
    procedure_identifier   go to state 140
    statement              go to state 141
    simple_statement       go to state 142
    assignment_statement   go to state 143
    procedure_statement    go to state 144
    goto_statement         go to state 145
    structured_statement   go to state 146
    compound_statement     go to state 147
    statement_list         go to state 224
    conditional_statement  go to state 149
    if_statement           go to state 150
    case_statement         go to state 151
    repetitive_statement   go to state 152
    repeat_statement       go to state 153
    while_statement        go to state 154
    for_statement          go to state 155
    with_statement         go to state 156


state 133

  205 while_statement: "while" . expression "do" statement

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "in"           shift, and go to state 197
    "not"          shift, and go to state 198
    '='            shift, and go to state 199
    '<'            shift, and go to state 200
    '>'            shift, and go to state 201
    RE             shift, and go to state 202
    LE             shift, and go to state 203
    NOTEQUAL       shift, and go to state 204
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 215
    simple_expression_term_operator_iterable  go to state 216
    expression                                go to state 225
    relational_operator                       go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 220
    set_constructor                           go to state 221


state 134

  206 for_statement: "for" . control_variable ":=" initial_value "to" final_value "do" statement
  207              | "for" . control_variable ":=" initial_value "downto" final_value "do" statement

    IDENTIFIER  shift, and go to state 226

    control_variable  go to state 227


state 135

  211 with_statement: "with" . record_variable_reference_list "do" statement

    IDENTIFIER  shift, and go to state 228

    variable_reference              go to state 229
    variable_identifier             go to state 138
    record_variable_reference_list  go to state 230


state 136

  169 statement: label . ':'
  170          | label . ':' simple_statement
  171          | label . ':' structured_statement

    ':'  shift, and go to state 231


state 137

  177 assignment_statement: variable_reference . ":=" expression

    ":="  shift, and go to state 232


state 138

   99 variable_reference: variable_identifier . qualifier_list
  100                   | variable_identifier .

    '['  shift, and go to state 233
    '^'  shift, and go to state 234
    '.'  shift, and go to state 235

    $default  reduce using rule 100 (variable_reference)

    qualifier_list         go to state 236
    qualifier              go to state 237
    index                  go to state 238
    field_designator       go to state 239
    file_buffer_symbol     go to state 240
    pointer_object_symbol  go to state 241


state 139

  178 assignment_statement: function_identifier . ":=" expression

    ":="  shift, and go to state 242


state 140

  179 procedure_statement: procedure_identifier .
  180                    | procedure_identifier . actual_parameter_list

    '('  shift, and go to state 243

    $default  reduce using rule 179 (procedure_statement)

    actual_parameter_list  go to state 244


state 141

  188 statement_list: statement .

    $default  reduce using rule 188 (statement_list)


state 142

  172 statement: simple_statement .

    $default  reduce using rule 172 (statement)


state 143

  174 simple_statement: assignment_statement .

    $default  reduce using rule 174 (simple_statement)


state 144

  175 simple_statement: procedure_statement .

    $default  reduce using rule 175 (simple_statement)


state 145

  176 simple_statement: goto_statement .

    $default  reduce using rule 176 (simple_statement)


state 146

  173 statement: structured_statement .

    $default  reduce using rule 173 (statement)


state 147

  182 structured_statement: compound_statement .

    $default  reduce using rule 182 (structured_statement)


state 148

  186 compound_statement: "begin" statement_list . "end"
  187 statement_list: statement_list . ';' statement

    "end"  shift, and go to state 245
    ';'    shift, and go to state 246


state 149

  183 structured_statement: conditional_statement .

    $default  reduce using rule 183 (structured_statement)


state 150

  189 conditional_statement: if_statement .

    $default  reduce using rule 189 (conditional_statement)


state 151

  190 conditional_statement: case_statement .

    $default  reduce using rule 190 (conditional_statement)


state 152

  184 structured_statement: repetitive_statement .

    $default  reduce using rule 184 (structured_statement)


state 153

  201 repetitive_statement: repeat_statement .

    $default  reduce using rule 201 (repetitive_statement)


state 154

  202 repetitive_statement: while_statement .

    $default  reduce using rule 202 (repetitive_statement)


state 155

  203 repetitive_statement: for_statement .

    $default  reduce using rule 203 (repetitive_statement)


state 156

  185 structured_statement: with_statement .

    $default  reduce using rule 185 (structured_statement)


state 157

  216 procedure_body: "forward" .

    $default  reduce using rule 216 (procedure_body)


state 158

  217 procedure_body: "external" .

    $default  reduce using rule 217 (procedure_body)


state 159

  215 procedure_body: block .

    $default  reduce using rule 215 (procedure_body)


state 160

  214 procedure_declaration: procedure_heading ';' procedure_body . ';'

    ';'  shift, and go to state 247


state 161

  222 function_body: "forward" .

    $default  reduce using rule 222 (function_body)


state 162

  223 function_body: "external" .

    $default  reduce using rule 223 (function_body)


state 163

  221 function_body: block .

    $default  reduce using rule 221 (function_body)


state 164

  220 function_declaration: function_heading ';' function_body . ';'

    ';'  shift, and go to state 248


state 165

   61 string_type: "string" '[' DECIMAL_INT . ']'

    ']'  shift, and go to state 249


state 166

   25 constant_identifier: IDENTIFIER .
   56 ordinal_type_identifier: IDENTIFIER .

    ".."      reduce using rule 25 (constant_identifier)
    $default  reduce using rule 56 (ordinal_type_identifier)


state 167

   72 index_type_list: ordinal_type .

    $default  reduce using rule 72 (index_type_list)


state 168

   70 array_type: "array" '[' index_type_list . ']' "of" type
   71 index_type_list: index_type_list . ',' ordinal_type

    ','  shift, and go to state 250
    ']'  shift, and go to state 251


state 169

   85 variant_part: "case" IDENTIFIER . ':' tag_field_type "of" variant_list
   92 tag_field_type: IDENTIFIER .

    ':'  shift, and go to state 252

    $default  reduce using rule 92 (tag_field_type)


state 170

   84 variant_part: "case" tag_field_type . "of" variant_list

    "of"  shift, and go to state 253


state 171

   83 field_declaration: identifier_list ':' . type

    DECIMAL_INT    shift, and go to state 42
    HEXADECIMAL    shift, and go to state 43
    REAL_DECIMAL   shift, and go to state 44
    IDENTIFIER     shift, and go to state 69
    QUOTED_STRING  shift, and go to state 46
    QUOTED_CHAR    shift, and go to state 47
    "string"       shift, and go to state 70
    "packed"       shift, and go to state 71
    "array"        shift, and go to state 72
    "record"       shift, and go to state 73
    "of"           shift, and go to state 74
    "set"          shift, and go to state 75
    "file"         shift, and go to state 76
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '('            shift, and go to state 77
    '^'            shift, and go to state 78

    constant                 go to state 79
    constant_identifier      go to state 51
    sign                     go to state 52
    type                     go to state 254
    simple_type              go to state 81
    ordinal_type             go to state 82
    ordinal_type_identifier  go to state 83
    enumerated_type          go to state 84
    subrange_type            go to state 85
    real_type                go to state 86
    real_type_identifier     go to state 87
    string_type              go to state 88
    structured_type          go to state 89
    type_list                go to state 90
    array_type               go to state 91
    record_type              go to state 92
    set_type                 go to state 93
    file_type                go to state 94
    pointer_type             go to state 95


state 172

   74 record_type: "record" field_list "end" .

    $default  reduce using rule 74 (record_type)


state 173

   76 field_list: fixed_part ';' .
   77           | fixed_part ';' . variant_part
   78           | fixed_part ';' . variant_part ';'
   81 fixed_part: fixed_part ';' . field_declaration

    IDENTIFIER  shift, and go to state 13
    "case"      shift, and go to state 110

    $default  reduce using rule 76 (field_list)

    identifier_list    go to state 111
    field_declaration  go to state 255
    variant_part       go to state 256


state 174

   80 field_list: variant_part ';' .

    $default  reduce using rule 80 (field_list)


state 175

   93 set_type: "set" "of" ordinal_type .

    $default  reduce using rule 93 (set_type)


state 176

   57 enumerated_type: '(' identifier_list ')' .

    $default  reduce using rule 57 (enumerated_type)


state 177

   58 subrange_type: constant ".." constant .

    $default  reduce using rule 58 (subrange_type)


state 178

   35 variable_declaration: identifier_list ':' type ';' .

    $default  reduce using rule 35 (variable_declaration)


state 179

  235 parameter_declaration: "var" . identifier_list ':' type_identifier

    IDENTIFIER  shift, and go to state 13

    identifier_list  go to state 257


state 180

   45 identifier_list: identifier_list . ',' IDENTIFIER
  236 parameter_declaration: identifier_list . ':' type_identifier

    ','  shift, and go to state 24
    ':'  shift, and go to state 258


state 181

  233 formal_parameter_list_iterable_list: procedure_heading .

    $default  reduce using rule 233 (formal_parameter_list_iterable_list)


state 182

  234 formal_parameter_list_iterable_list: function_heading .

    $default  reduce using rule 234 (formal_parameter_list_iterable_list)


state 183

  229 formal_parameter_list: '(' formal_parameter_list_iterable . ')'
  230 formal_parameter_list_iterable: formal_parameter_list_iterable . ';' formal_parameter_list_iterable_list

    ';'  shift, and go to state 259
    ')'  shift, and go to state 260


state 184

  231 formal_parameter_list_iterable: formal_parameter_list_iterable_list .

    $default  reduce using rule 231 (formal_parameter_list_iterable)


state 185

  232 formal_parameter_list_iterable_list: parameter_declaration .

    $default  reduce using rule 232 (formal_parameter_list_iterable_list)


state 186

   56 ordinal_type_identifier: IDENTIFIER .
   60 real_type_identifier: IDENTIFIER .

    ';'       reduce using rule 56 (ordinal_type_identifier)
    ';'       [reduce using rule 60 (real_type_identifier)]
    ')'       reduce using rule 56 (ordinal_type_identifier)
    ')'       [reduce using rule 60 (real_type_identifier)]
    $default  reduce using rule 56 (ordinal_type_identifier)


state 187

  226 result_type: ordinal_type_identifier .
  228            | ordinal_type_identifier .

    ';'       reduce using rule 226 (result_type)
    ';'       [reduce using rule 228 (result_type)]
    ')'       reduce using rule 226 (result_type)
    ')'       [reduce using rule 228 (result_type)]
    $default  reduce using rule 226 (result_type)


state 188

  227 result_type: real_type_identifier .

    $default  reduce using rule 227 (result_type)


state 189

  224 function_heading: "function" IDENTIFIER ':' result_type .

    $default  reduce using rule 224 (function_heading)


state 190

  225 function_heading: "function" IDENTIFIER formal_parameter_list ':' . result_type

    IDENTIFIER  shift, and go to state 186

    ordinal_type_identifier  go to state 187
    real_type_identifier     go to state 188
    result_type              go to state 261


state 191

  118 unsigned_number: DECIMAL_INT .

    $default  reduce using rule 118 (unsigned_number)


state 192

  119 unsigned_number: HEXADECIMAL .

    $default  reduce using rule 119 (unsigned_number)


state 193

  120 unsigned_number: REAL_DECIMAL .

    $default  reduce using rule 120 (unsigned_number)


state 194

   25 constant_identifier: IDENTIFIER .
  101 variable_identifier: IDENTIFIER .
  153 function_identifier: IDENTIFIER .

    "end"     reduce using rule 25 (constant_identifier)
    "end"     [reduce using rule 101 (variable_identifier)]
    "end"     [reduce using rule 153 (function_identifier)]
    "of"      reduce using rule 25 (constant_identifier)
    "of"      [reduce using rule 101 (variable_identifier)]
    "of"      [reduce using rule 153 (function_identifier)]
    "then"    reduce using rule 25 (constant_identifier)
    "then"    [reduce using rule 101 (variable_identifier)]
    "then"    [reduce using rule 153 (function_identifier)]
    "else"    reduce using rule 25 (constant_identifier)
    "else"    [reduce using rule 101 (variable_identifier)]
    "else"    [reduce using rule 153 (function_identifier)]
    "until"   reduce using rule 25 (constant_identifier)
    "until"   [reduce using rule 101 (variable_identifier)]
    "until"   [reduce using rule 153 (function_identifier)]
    "do"      reduce using rule 25 (constant_identifier)
    "do"      [reduce using rule 101 (variable_identifier)]
    "do"      [reduce using rule 153 (function_identifier)]
    "to"      reduce using rule 25 (constant_identifier)
    "to"      [reduce using rule 101 (variable_identifier)]
    "to"      [reduce using rule 153 (function_identifier)]
    "downto"  reduce using rule 25 (constant_identifier)
    "downto"  [reduce using rule 101 (variable_identifier)]
    "downto"  [reduce using rule 153 (function_identifier)]
    "or"      reduce using rule 25 (constant_identifier)
    "or"      [reduce using rule 101 (variable_identifier)]
    "or"      [reduce using rule 153 (function_identifier)]
    "div"     reduce using rule 25 (constant_identifier)
    "div"     [reduce using rule 101 (variable_identifier)]
    "div"     [reduce using rule 153 (function_identifier)]
    "mod"     reduce using rule 25 (constant_identifier)
    "mod"     [reduce using rule 101 (variable_identifier)]
    "mod"     [reduce using rule 153 (function_identifier)]
    "and"     reduce using rule 25 (constant_identifier)
    "and"     [reduce using rule 101 (variable_identifier)]
    "and"     [reduce using rule 153 (function_identifier)]
    ".."      reduce using rule 25 (constant_identifier)
    ".."      [reduce using rule 101 (variable_identifier)]
    ".."      [reduce using rule 153 (function_identifier)]
    '+'       reduce using rule 25 (constant_identifier)
    '+'       [reduce using rule 101 (variable_identifier)]
    '+'       [reduce using rule 153 (function_identifier)]
    '-'       reduce using rule 25 (constant_identifier)
    '-'       [reduce using rule 101 (variable_identifier)]
    '-'       [reduce using rule 153 (function_identifier)]
    '*'       reduce using rule 25 (constant_identifier)
    '*'       [reduce using rule 101 (variable_identifier)]
    '*'       [reduce using rule 153 (function_identifier)]
    '/'       reduce using rule 25 (constant_identifier)
    '/'       [reduce using rule 101 (variable_identifier)]
    '/'       [reduce using rule 153 (function_identifier)]
    ';'       reduce using rule 25 (constant_identifier)
    ';'       [reduce using rule 101 (variable_identifier)]
    ';'       [reduce using rule 153 (function_identifier)]
    '('       reduce using rule 153 (function_identifier)
    ')'       reduce using rule 25 (constant_identifier)
    ')'       [reduce using rule 101 (variable_identifier)]
    ')'       [reduce using rule 153 (function_identifier)]
    ','       reduce using rule 25 (constant_identifier)
    ','       [reduce using rule 101 (variable_identifier)]
    ','       [reduce using rule 153 (function_identifier)]
    '['       reduce using rule 101 (variable_identifier)
    ']'       reduce using rule 25 (constant_identifier)
    ']'       [reduce using rule 101 (variable_identifier)]
    ']'       [reduce using rule 153 (function_identifier)]
    '^'       reduce using rule 101 (variable_identifier)
    '.'       reduce using rule 101 (variable_identifier)
    $default  reduce using rule 25 (constant_identifier)


state 195

  115 unsigned_constant: QUOTED_STRING .

    $default  reduce using rule 115 (unsigned_constant)


state 196

  117 unsigned_constant: "nil" .

    $default  reduce using rule 117 (unsigned_constant)


state 197

  150 relational_operator: "in" .

    $default  reduce using rule 150 (relational_operator)


state 198

  127 factor: "not" . factor

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "not"          shift, and go to state 198
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier  go to state 208
    variable_reference   go to state 210
    variable_identifier  go to state 138
    unsigned_constant    go to state 211
    unsigned_number      go to state 212
    factor               go to state 262
    function_call        go to state 219
    function_identifier  go to state 220
    set_constructor      go to state 221


state 199

  144 relational_operator: '=' .

    $default  reduce using rule 144 (relational_operator)


state 200

  145 relational_operator: '<' .

    $default  reduce using rule 145 (relational_operator)


state 201

  146 relational_operator: '>' .

    $default  reduce using rule 146 (relational_operator)


state 202

  148 relational_operator: RE .

    $default  reduce using rule 148 (relational_operator)


state 203

  147 relational_operator: LE .

    $default  reduce using rule 147 (relational_operator)


state 204

  149 relational_operator: NOTEQUAL .

    $default  reduce using rule 149 (relational_operator)


state 205

  122 factor: '@' . variable_reference

    IDENTIFIER  shift, and go to state 228

    variable_reference   go to state 263
    variable_identifier  go to state 138


state 206

  126 factor: '(' . expression ')'

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "in"           shift, and go to state 197
    "not"          shift, and go to state 198
    '='            shift, and go to state 199
    '<'            shift, and go to state 200
    '>'            shift, and go to state 201
    RE             shift, and go to state 202
    LE             shift, and go to state 203
    NOTEQUAL       shift, and go to state 204
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 215
    simple_expression_term_operator_iterable  go to state 216
    expression                                go to state 264
    relational_operator                       go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 220
    set_constructor                           go to state 221


state 207

  162 set_constructor: '[' . ']'
  163                | '[' . member_group_list ']'

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "in"           shift, and go to state 197
    "not"          shift, and go to state 198
    '='            shift, and go to state 199
    '<'            shift, and go to state 200
    '>'            shift, and go to state 201
    RE             shift, and go to state 202
    LE             shift, and go to state 203
    NOTEQUAL       shift, and go to state 204
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207
    ']'            shift, and go to state 265

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 215
    simple_expression_term_operator_iterable  go to state 216
    expression                                go to state 266
    relational_operator                       go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 220
    set_constructor                           go to state 221
    member_group_list                         go to state 267
    member_group                              go to state 268


state 208

  116 unsigned_constant: constant_identifier .

    $default  reduce using rule 116 (unsigned_constant)


state 209

  135 simple_expression: sign . simple_expression_term_operator_iterable

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "not"          shift, and go to state 198
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    variable_reference                        go to state 210
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression_term_operator_iterable  go to state 269
    function_call                             go to state 219
    function_identifier                       go to state 220
    set_constructor                           go to state 221


state 210

  121 factor: variable_reference .

    $default  reduce using rule 121 (factor)


state 211

  123 factor: unsigned_constant .

    $default  reduce using rule 123 (factor)


state 212

  114 unsigned_constant: unsigned_number .

    $default  reduce using rule 114 (unsigned_constant)


state 213

  129 term: factor .

    $default  reduce using rule 129 (term)


state 214

  128 term: term . term_operator_list factor
  138 simple_expression_term_operator_iterable: term .

    "div"  shift, and go to state 270
    "mod"  shift, and go to state 271
    "and"  shift, and go to state 272
    '*'    shift, and go to state 273
    '/'    shift, and go to state 274

    $default  reduce using rule 138 (simple_expression_term_operator_iterable)

    term_operator_list  go to state 275


state 215

  142 expression: simple_expression .

    $default  reduce using rule 142 (expression)


state 216

  136 simple_expression: simple_expression_term_operator_iterable .
  137 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable . simple_expression_term_operator_list term

    "or"  shift, and go to state 276
    '+'   shift, and go to state 277
    '-'   shift, and go to state 278

    $default  reduce using rule 136 (simple_expression)

    simple_expression_term_operator_list  go to state 279


state 217

  193 case_statement: "case" expression . "of" case_list "end"
  194               | "case" expression . "of" case_list otherwise_clause "end"
  195               | "case" expression . "of" case_list otherwise_clause ';' "end"
  196               | "case" expression . "of" case_list ';' "end"

    "of"  shift, and go to state 280


state 218

  143 expression: relational_operator . simple_expression

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "not"          shift, and go to state 198
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 281
    simple_expression_term_operator_iterable  go to state 216
    function_call                             go to state 219
    function_identifier                       go to state 220
    set_constructor                           go to state 221


state 219

  124 factor: function_call .

    $default  reduce using rule 124 (factor)


state 220

  151 function_call: function_identifier .
  152              | function_identifier . actual_parameter_list

    '('  shift, and go to state 243

    $default  reduce using rule 151 (function_call)

    actual_parameter_list  go to state 282


state 221

  125 factor: set_constructor .

    $default  reduce using rule 125 (factor)


state 222

  181 goto_statement: "goto" label .

    $default  reduce using rule 181 (goto_statement)


state 223

  191 if_statement: "if" expression . "then" statement
  192             | "if" expression . "then" statement "else" statement

    "then"  shift, and go to state 283


state 224

  187 statement_list: statement_list . ';' statement
  204 repeat_statement: "repeat" statement_list . "until" expression

    "until"  shift, and go to state 284
    ';'      shift, and go to state 246


state 225

  205 while_statement: "while" expression . "do" statement

    "do"  shift, and go to state 285


state 226

  208 control_variable: IDENTIFIER .

    $default  reduce using rule 208 (control_variable)


state 227

  206 for_statement: "for" control_variable . ":=" initial_value "to" final_value "do" statement
  207              | "for" control_variable . ":=" initial_value "downto" final_value "do" statement

    ":="  shift, and go to state 286


state 228

  101 variable_identifier: IDENTIFIER .

    $default  reduce using rule 101 (variable_identifier)


state 229

  213 record_variable_reference_list: variable_reference .

    $default  reduce using rule 213 (record_variable_reference_list)


state 230

  211 with_statement: "with" record_variable_reference_list . "do" statement
  212 record_variable_reference_list: record_variable_reference_list . ',' variable_reference

    "do"  shift, and go to state 287
    ','   shift, and go to state 288


state 231

  169 statement: label ':' .
  170          | label ':' . simple_statement
  171          | label ':' . structured_statement

    IDENTIFIER  shift, and go to state 128
    "begin"     shift, and go to state 100
    "case"      shift, and go to state 129
    "goto"      shift, and go to state 130
    "if"        shift, and go to state 131
    "repeat"    shift, and go to state 132
    "while"     shift, and go to state 133
    "for"       shift, and go to state 134
    "with"      shift, and go to state 135

    $default  reduce using rule 169 (statement)

    variable_reference     go to state 137
    variable_identifier    go to state 138
    function_identifier    go to state 139
    procedure_identifier   go to state 140
    simple_statement       go to state 289
    assignment_statement   go to state 143
    procedure_statement    go to state 144
    goto_statement         go to state 145
    structured_statement   go to state 290
    compound_statement     go to state 147
    conditional_statement  go to state 149
    if_statement           go to state 150
    case_statement         go to state 151
    repetitive_statement   go to state 152
    repeat_statement       go to state 153
    while_statement        go to state 154
    for_statement          go to state 155
    with_statement         go to state 156


state 232

  177 assignment_statement: variable_reference ":=" . expression

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "in"           shift, and go to state 197
    "not"          shift, and go to state 198
    '='            shift, and go to state 199
    '<'            shift, and go to state 200
    '>'            shift, and go to state 201
    RE             shift, and go to state 202
    LE             shift, and go to state 203
    NOTEQUAL       shift, and go to state 204
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 215
    simple_expression_term_operator_iterable  go to state 216
    expression                                go to state 291
    relational_operator                       go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 220
    set_constructor                           go to state 221


state 233

  108 index: '[' . expression_list ']'

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "in"           shift, and go to state 197
    "not"          shift, and go to state 198
    '='            shift, and go to state 199
    '<'            shift, and go to state 200
    '>'            shift, and go to state 201
    RE             shift, and go to state 202
    LE             shift, and go to state 203
    NOTEQUAL       shift, and go to state 204
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 138
    expression_list                           go to state 292
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 215
    simple_expression_term_operator_iterable  go to state 216
    expression                                go to state 293
    relational_operator                       go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 220
    set_constructor                           go to state 221


state 234

  112 file_buffer_symbol: '^' .
  113 pointer_object_symbol: '^' .

    "end"     reduce using rule 112 (file_buffer_symbol)
    "end"     [reduce using rule 113 (pointer_object_symbol)]
    "of"      reduce using rule 112 (file_buffer_symbol)
    "of"      [reduce using rule 113 (pointer_object_symbol)]
    "then"    reduce using rule 112 (file_buffer_symbol)
    "then"    [reduce using rule 113 (pointer_object_symbol)]
    "else"    reduce using rule 112 (file_buffer_symbol)
    "else"    [reduce using rule 113 (pointer_object_symbol)]
    "until"   reduce using rule 112 (file_buffer_symbol)
    "until"   [reduce using rule 113 (pointer_object_symbol)]
    "do"      reduce using rule 112 (file_buffer_symbol)
    "do"      [reduce using rule 113 (pointer_object_symbol)]
    "to"      reduce using rule 112 (file_buffer_symbol)
    "to"      [reduce using rule 113 (pointer_object_symbol)]
    "downto"  reduce using rule 112 (file_buffer_symbol)
    "downto"  [reduce using rule 113 (pointer_object_symbol)]
    "or"      reduce using rule 112 (file_buffer_symbol)
    "or"      [reduce using rule 113 (pointer_object_symbol)]
    "div"     reduce using rule 112 (file_buffer_symbol)
    "div"     [reduce using rule 113 (pointer_object_symbol)]
    "mod"     reduce using rule 112 (file_buffer_symbol)
    "mod"     [reduce using rule 113 (pointer_object_symbol)]
    "and"     reduce using rule 112 (file_buffer_symbol)
    "and"     [reduce using rule 113 (pointer_object_symbol)]
    ":="      reduce using rule 112 (file_buffer_symbol)
    ":="      [reduce using rule 113 (pointer_object_symbol)]
    ".."      reduce using rule 112 (file_buffer_symbol)
    ".."      [reduce using rule 113 (pointer_object_symbol)]
    '+'       reduce using rule 112 (file_buffer_symbol)
    '+'       [reduce using rule 113 (pointer_object_symbol)]
    '-'       reduce using rule 112 (file_buffer_symbol)
    '-'       [reduce using rule 113 (pointer_object_symbol)]
    '*'       reduce using rule 112 (file_buffer_symbol)
    '*'       [reduce using rule 113 (pointer_object_symbol)]
    '/'       reduce using rule 112 (file_buffer_symbol)
    '/'       [reduce using rule 113 (pointer_object_symbol)]
    ';'       reduce using rule 112 (file_buffer_symbol)
    ';'       [reduce using rule 113 (pointer_object_symbol)]
    ')'       reduce using rule 112 (file_buffer_symbol)
    ')'       [reduce using rule 113 (pointer_object_symbol)]
    ','       reduce using rule 112 (file_buffer_symbol)
    ','       [reduce using rule 113 (pointer_object_symbol)]
    '['       reduce using rule 112 (file_buffer_symbol)
    '['       [reduce using rule 113 (pointer_object_symbol)]
    ']'       reduce using rule 112 (file_buffer_symbol)
    ']'       [reduce using rule 113 (pointer_object_symbol)]
    '^'       reduce using rule 112 (file_buffer_symbol)
    '^'       [reduce using rule 113 (pointer_object_symbol)]
    '.'       reduce using rule 112 (file_buffer_symbol)
    '.'       [reduce using rule 113 (pointer_object_symbol)]
    $default  reduce using rule 112 (file_buffer_symbol)


state 235

  111 field_designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 294


state 236

   99 variable_reference: variable_identifier qualifier_list .
  102 qualifier_list: qualifier_list . qualifier

    '['  shift, and go to state 233
    '^'  shift, and go to state 234
    '.'  shift, and go to state 235

    $default  reduce using rule 99 (variable_reference)

    qualifier              go to state 295
    index                  go to state 238
    field_designator       go to state 239
    file_buffer_symbol     go to state 240
    pointer_object_symbol  go to state 241


state 237

  103 qualifier_list: qualifier .

    $default  reduce using rule 103 (qualifier_list)


state 238

  104 qualifier: index .

    $default  reduce using rule 104 (qualifier)


state 239

  105 qualifier: field_designator .

    $default  reduce using rule 105 (qualifier)


state 240

  106 qualifier: file_buffer_symbol .

    $default  reduce using rule 106 (qualifier)


state 241

  107 qualifier: pointer_object_symbol .

    $default  reduce using rule 107 (qualifier)


state 242

  178 assignment_statement: function_identifier ":=" . expression

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "in"           shift, and go to state 197
    "not"          shift, and go to state 198
    '='            shift, and go to state 199
    '<'            shift, and go to state 200
    '>'            shift, and go to state 201
    RE             shift, and go to state 202
    LE             shift, and go to state 203
    NOTEQUAL       shift, and go to state 204
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 215
    simple_expression_term_operator_iterable  go to state 216
    expression                                go to state 296
    relational_operator                       go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 220
    set_constructor                           go to state 221


state 243

  154 actual_parameter_list: '(' . actual_parameter_iterable ')'

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 297
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "in"           shift, and go to state 197
    "not"          shift, and go to state 198
    '='            shift, and go to state 199
    '<'            shift, and go to state 200
    '>'            shift, and go to state 201
    RE             shift, and go to state 202
    LE             shift, and go to state 203
    NOTEQUAL       shift, and go to state 204
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 298
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 215
    simple_expression_term_operator_iterable  go to state 216
    expression                                go to state 299
    relational_operator                       go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 300
    actual_parameter_iterable                 go to state 301
    actual_parameter                          go to state 302
    procedure_identifier                      go to state 303
    set_constructor                           go to state 221


state 244

  180 procedure_statement: procedure_identifier actual_parameter_list .

    $default  reduce using rule 180 (procedure_statement)


state 245

  186 compound_statement: "begin" statement_list "end" .

    $default  reduce using rule 186 (compound_statement)


state 246

  187 statement_list: statement_list ';' . statement

    DECIMAL_INT  shift, and go to state 17
    IDENTIFIER   shift, and go to state 128
    "begin"      shift, and go to state 100
    "case"       shift, and go to state 129
    "goto"       shift, and go to state 130
    "if"         shift, and go to state 131
    "repeat"     shift, and go to state 132
    "while"      shift, and go to state 133
    "for"        shift, and go to state 134
    "with"       shift, and go to state 135

    $default  reduce using rule 168 (statement)

    label                  go to state 136
    variable_reference     go to state 137
    variable_identifier    go to state 138
    function_identifier    go to state 139
    procedure_identifier   go to state 140
    statement              go to state 304
    simple_statement       go to state 142
    assignment_statement   go to state 143
    procedure_statement    go to state 144
    goto_statement         go to state 145
    structured_statement   go to state 146
    compound_statement     go to state 147
    conditional_statement  go to state 149
    if_statement           go to state 150
    case_statement         go to state 151
    repetitive_statement   go to state 152
    repeat_statement       go to state 153
    while_statement        go to state 154
    for_statement          go to state 155
    with_statement         go to state 156


state 247

  214 procedure_declaration: procedure_heading ';' procedure_body ';' .

    $default  reduce using rule 214 (procedure_declaration)


state 248

  220 function_declaration: function_heading ';' function_body ';' .

    $default  reduce using rule 220 (function_declaration)


state 249

   61 string_type: "string" '[' DECIMAL_INT ']' .

    $default  reduce using rule 61 (string_type)


state 250

   71 index_type_list: index_type_list ',' . ordinal_type

    DECIMAL_INT    shift, and go to state 42
    HEXADECIMAL    shift, and go to state 43
    REAL_DECIMAL   shift, and go to state 44
    IDENTIFIER     shift, and go to state 166
    QUOTED_STRING  shift, and go to state 46
    QUOTED_CHAR    shift, and go to state 47
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '('            shift, and go to state 77

    constant                 go to state 79
    constant_identifier      go to state 51
    sign                     go to state 52
    ordinal_type             go to state 305
    ordinal_type_identifier  go to state 83
    enumerated_type          go to state 84
    subrange_type            go to state 85


state 251

   70 array_type: "array" '[' index_type_list ']' . "of" type

    "of"  shift, and go to state 306


state 252

   85 variant_part: "case" IDENTIFIER ':' . tag_field_type "of" variant_list

    IDENTIFIER  shift, and go to state 307

    tag_field_type  go to state 308


state 253

   84 variant_part: "case" tag_field_type "of" . variant_list

    DECIMAL_INT    shift, and go to state 42
    HEXADECIMAL    shift, and go to state 43
    REAL_DECIMAL   shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    QUOTED_STRING  shift, and go to state 46
    QUOTED_CHAR    shift, and go to state 47
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49

    constant             go to state 309
    constant_identifier  go to state 51
    sign                 go to state 52
    variant_list         go to state 310
    variant              go to state 311
    constant_list        go to state 312


state 254

   83 field_declaration: identifier_list ':' type .

    $default  reduce using rule 83 (field_declaration)


state 255

   81 fixed_part: fixed_part ';' field_declaration .

    $default  reduce using rule 81 (fixed_part)


state 256

   77 field_list: fixed_part ';' variant_part .
   78           | fixed_part ';' variant_part . ';'

    ';'  shift, and go to state 313

    $default  reduce using rule 77 (field_list)


state 257

   45 identifier_list: identifier_list . ',' IDENTIFIER
  235 parameter_declaration: "var" identifier_list . ':' type_identifier

    ','  shift, and go to state 24
    ':'  shift, and go to state 314


state 258

  236 parameter_declaration: identifier_list ':' . type_identifier

    IDENTIFIER  shift, and go to state 315

    type_identifier  go to state 316


state 259

  230 formal_parameter_list_iterable: formal_parameter_list_iterable ';' . formal_parameter_list_iterable_list

    IDENTIFIER   shift, and go to state 13
    "var"        shift, and go to state 179
    "function"   shift, and go to state 58
    "procedure"  shift, and go to state 59

    identifier_list                      go to state 180
    procedure_heading                    go to state 181
    function_heading                     go to state 182
    formal_parameter_list_iterable_list  go to state 317
    parameter_declaration                go to state 185


state 260

  229 formal_parameter_list: '(' formal_parameter_list_iterable ')' .

    $default  reduce using rule 229 (formal_parameter_list)


state 261

  225 function_heading: "function" IDENTIFIER formal_parameter_list ':' result_type .

    $default  reduce using rule 225 (function_heading)


state 262

  127 factor: "not" factor .

    $default  reduce using rule 127 (factor)


state 263

  122 factor: '@' variable_reference .

    $default  reduce using rule 122 (factor)


state 264

  126 factor: '(' expression . ')'

    ')'  shift, and go to state 318


state 265

  162 set_constructor: '[' ']' .

    $default  reduce using rule 162 (set_constructor)


state 266

  166 member_group: expression .
  167             | expression . ".." expression

    ".."  shift, and go to state 319

    $default  reduce using rule 166 (member_group)


state 267

  163 set_constructor: '[' member_group_list . ']'
  164 member_group_list: member_group_list . ',' member_group

    ','  shift, and go to state 320
    ']'  shift, and go to state 321


state 268

  165 member_group_list: member_group .

    $default  reduce using rule 165 (member_group_list)


state 269

  135 simple_expression: sign simple_expression_term_operator_iterable .
  137 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable . simple_expression_term_operator_list term

    "or"  shift, and go to state 276
    '+'   shift, and go to state 277
    '-'   shift, and go to state 278

    $default  reduce using rule 135 (simple_expression)

    simple_expression_term_operator_list  go to state 279


state 270

  132 term_operator_list: "div" .

    $default  reduce using rule 132 (term_operator_list)


state 271

  133 term_operator_list: "mod" .

    $default  reduce using rule 133 (term_operator_list)


state 272

  134 term_operator_list: "and" .

    $default  reduce using rule 134 (term_operator_list)


state 273

  130 term_operator_list: '*' .

    $default  reduce using rule 130 (term_operator_list)


state 274

  131 term_operator_list: '/' .

    $default  reduce using rule 131 (term_operator_list)


state 275

  128 term: term term_operator_list . factor

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "not"          shift, and go to state 198
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier  go to state 208
    variable_reference   go to state 210
    variable_identifier  go to state 138
    unsigned_constant    go to state 211
    unsigned_number      go to state 212
    factor               go to state 322
    function_call        go to state 219
    function_identifier  go to state 220
    set_constructor      go to state 221


state 276

  141 simple_expression_term_operator_list: "or" .

    $default  reduce using rule 141 (simple_expression_term_operator_list)


state 277

  139 simple_expression_term_operator_list: '+' .

    $default  reduce using rule 139 (simple_expression_term_operator_list)


state 278

  140 simple_expression_term_operator_list: '-' .

    $default  reduce using rule 140 (simple_expression_term_operator_list)


state 279

  137 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list . term

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "not"          shift, and go to state 198
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier  go to state 208
    variable_reference   go to state 210
    variable_identifier  go to state 138
    unsigned_constant    go to state 211
    unsigned_number      go to state 212
    factor               go to state 213
    term                 go to state 323
    function_call        go to state 219
    function_identifier  go to state 220
    set_constructor      go to state 221


state 280

  193 case_statement: "case" expression "of" . case_list "end"
  194               | "case" expression "of" . case_list otherwise_clause "end"
  195               | "case" expression "of" . case_list otherwise_clause ';' "end"
  196               | "case" expression "of" . case_list ';' "end"

    DECIMAL_INT    shift, and go to state 42
    HEXADECIMAL    shift, and go to state 43
    REAL_DECIMAL   shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    QUOTED_STRING  shift, and go to state 46
    QUOTED_CHAR    shift, and go to state 47
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49

    constant             go to state 309
    constant_identifier  go to state 51
    sign                 go to state 52
    constant_list        go to state 324
    case_list            go to state 325
    case                 go to state 326


state 281

  143 expression: relational_operator simple_expression .

    $default  reduce using rule 143 (expression)


state 282

  152 function_call: function_identifier actual_parameter_list .

    $default  reduce using rule 152 (function_call)


state 283

  191 if_statement: "if" expression "then" . statement
  192             | "if" expression "then" . statement "else" statement

    DECIMAL_INT  shift, and go to state 17
    IDENTIFIER   shift, and go to state 128
    "begin"      shift, and go to state 100
    "case"       shift, and go to state 129
    "goto"       shift, and go to state 130
    "if"         shift, and go to state 131
    "repeat"     shift, and go to state 132
    "while"      shift, and go to state 133
    "for"        shift, and go to state 134
    "with"       shift, and go to state 135

    $default  reduce using rule 168 (statement)

    label                  go to state 136
    variable_reference     go to state 137
    variable_identifier    go to state 138
    function_identifier    go to state 139
    procedure_identifier   go to state 140
    statement              go to state 327
    simple_statement       go to state 142
    assignment_statement   go to state 143
    procedure_statement    go to state 144
    goto_statement         go to state 145
    structured_statement   go to state 146
    compound_statement     go to state 147
    conditional_statement  go to state 149
    if_statement           go to state 150
    case_statement         go to state 151
    repetitive_statement   go to state 152
    repeat_statement       go to state 153
    while_statement        go to state 154
    for_statement          go to state 155
    with_statement         go to state 156


state 284

  204 repeat_statement: "repeat" statement_list "until" . expression

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "in"           shift, and go to state 197
    "not"          shift, and go to state 198
    '='            shift, and go to state 199
    '<'            shift, and go to state 200
    '>'            shift, and go to state 201
    RE             shift, and go to state 202
    LE             shift, and go to state 203
    NOTEQUAL       shift, and go to state 204
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 215
    simple_expression_term_operator_iterable  go to state 216
    expression                                go to state 328
    relational_operator                       go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 220
    set_constructor                           go to state 221


state 285

  205 while_statement: "while" expression "do" . statement

    DECIMAL_INT  shift, and go to state 17
    IDENTIFIER   shift, and go to state 128
    "begin"      shift, and go to state 100
    "case"       shift, and go to state 129
    "goto"       shift, and go to state 130
    "if"         shift, and go to state 131
    "repeat"     shift, and go to state 132
    "while"      shift, and go to state 133
    "for"        shift, and go to state 134
    "with"       shift, and go to state 135

    $default  reduce using rule 168 (statement)

    label                  go to state 136
    variable_reference     go to state 137
    variable_identifier    go to state 138
    function_identifier    go to state 139
    procedure_identifier   go to state 140
    statement              go to state 329
    simple_statement       go to state 142
    assignment_statement   go to state 143
    procedure_statement    go to state 144
    goto_statement         go to state 145
    structured_statement   go to state 146
    compound_statement     go to state 147
    conditional_statement  go to state 149
    if_statement           go to state 150
    case_statement         go to state 151
    repetitive_statement   go to state 152
    repeat_statement       go to state 153
    while_statement        go to state 154
    for_statement          go to state 155
    with_statement         go to state 156


state 286

  206 for_statement: "for" control_variable ":=" . initial_value "to" final_value "do" statement
  207              | "for" control_variable ":=" . initial_value "downto" final_value "do" statement

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "in"           shift, and go to state 197
    "not"          shift, and go to state 198
    '='            shift, and go to state 199
    '<'            shift, and go to state 200
    '>'            shift, and go to state 201
    RE             shift, and go to state 202
    LE             shift, and go to state 203
    NOTEQUAL       shift, and go to state 204
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 215
    simple_expression_term_operator_iterable  go to state 216
    expression                                go to state 330
    relational_operator                       go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 220
    set_constructor                           go to state 221
    initial_value                             go to state 331


state 287

  211 with_statement: "with" record_variable_reference_list "do" . statement

    DECIMAL_INT  shift, and go to state 17
    IDENTIFIER   shift, and go to state 128
    "begin"      shift, and go to state 100
    "case"       shift, and go to state 129
    "goto"       shift, and go to state 130
    "if"         shift, and go to state 131
    "repeat"     shift, and go to state 132
    "while"      shift, and go to state 133
    "for"        shift, and go to state 134
    "with"       shift, and go to state 135

    $default  reduce using rule 168 (statement)

    label                  go to state 136
    variable_reference     go to state 137
    variable_identifier    go to state 138
    function_identifier    go to state 139
    procedure_identifier   go to state 140
    statement              go to state 332
    simple_statement       go to state 142
    assignment_statement   go to state 143
    procedure_statement    go to state 144
    goto_statement         go to state 145
    structured_statement   go to state 146
    compound_statement     go to state 147
    conditional_statement  go to state 149
    if_statement           go to state 150
    case_statement         go to state 151
    repetitive_statement   go to state 152
    repeat_statement       go to state 153
    while_statement        go to state 154
    for_statement          go to state 155
    with_statement         go to state 156


state 288

  212 record_variable_reference_list: record_variable_reference_list ',' . variable_reference

    IDENTIFIER  shift, and go to state 228

    variable_reference   go to state 333
    variable_identifier  go to state 138


state 289

  170 statement: label ':' simple_statement .

    $default  reduce using rule 170 (statement)


state 290

  171 statement: label ':' structured_statement .

    $default  reduce using rule 171 (statement)


state 291

  177 assignment_statement: variable_reference ":=" expression .

    $default  reduce using rule 177 (assignment_statement)


state 292

  108 index: '[' expression_list . ']'
  109 expression_list: expression_list . ',' expression

    ','  shift, and go to state 334
    ']'  shift, and go to state 335


state 293

  110 expression_list: expression .

    $default  reduce using rule 110 (expression_list)


state 294

  111 field_designator: '.' IDENTIFIER .

    $default  reduce using rule 111 (field_designator)


state 295

  102 qualifier_list: qualifier_list qualifier .

    $default  reduce using rule 102 (qualifier_list)


state 296

  178 assignment_statement: function_identifier ":=" expression .

    $default  reduce using rule 178 (assignment_statement)


state 297

   25 constant_identifier: IDENTIFIER .
  101 variable_identifier: IDENTIFIER .
  153 function_identifier: IDENTIFIER .
  161 procedure_identifier: IDENTIFIER .

    "or"      reduce using rule 25 (constant_identifier)
    "or"      [reduce using rule 101 (variable_identifier)]
    "or"      [reduce using rule 153 (function_identifier)]
    "div"     reduce using rule 25 (constant_identifier)
    "div"     [reduce using rule 101 (variable_identifier)]
    "div"     [reduce using rule 153 (function_identifier)]
    "mod"     reduce using rule 25 (constant_identifier)
    "mod"     [reduce using rule 101 (variable_identifier)]
    "mod"     [reduce using rule 153 (function_identifier)]
    "and"     reduce using rule 25 (constant_identifier)
    "and"     [reduce using rule 101 (variable_identifier)]
    "and"     [reduce using rule 153 (function_identifier)]
    '+'       reduce using rule 25 (constant_identifier)
    '+'       [reduce using rule 101 (variable_identifier)]
    '+'       [reduce using rule 153 (function_identifier)]
    '-'       reduce using rule 25 (constant_identifier)
    '-'       [reduce using rule 101 (variable_identifier)]
    '-'       [reduce using rule 153 (function_identifier)]
    '*'       reduce using rule 25 (constant_identifier)
    '*'       [reduce using rule 101 (variable_identifier)]
    '*'       [reduce using rule 153 (function_identifier)]
    '/'       reduce using rule 25 (constant_identifier)
    '/'       [reduce using rule 101 (variable_identifier)]
    '/'       [reduce using rule 153 (function_identifier)]
    '('       reduce using rule 153 (function_identifier)
    ')'       reduce using rule 25 (constant_identifier)
    ')'       [reduce using rule 101 (variable_identifier)]
    ')'       [reduce using rule 153 (function_identifier)]
    ')'       [reduce using rule 161 (procedure_identifier)]
    ','       reduce using rule 25 (constant_identifier)
    ','       [reduce using rule 101 (variable_identifier)]
    ','       [reduce using rule 153 (function_identifier)]
    ','       [reduce using rule 161 (procedure_identifier)]
    '['       reduce using rule 101 (variable_identifier)
    '^'       reduce using rule 101 (variable_identifier)
    '.'       reduce using rule 101 (variable_identifier)
    $default  reduce using rule 25 (constant_identifier)


state 298

  121 factor: variable_reference .
  158 actual_parameter: variable_reference .

    ')'       reduce using rule 121 (factor)
    ')'       [reduce using rule 158 (actual_parameter)]
    ','       reduce using rule 121 (factor)
    ','       [reduce using rule 158 (actual_parameter)]
    $default  reduce using rule 121 (factor)


state 299

  157 actual_parameter: expression .

    $default  reduce using rule 157 (actual_parameter)


state 300

  151 function_call: function_identifier .
  152              | function_identifier . actual_parameter_list
  160 actual_parameter: function_identifier .

    '('  shift, and go to state 243

    ')'       reduce using rule 151 (function_call)
    ')'       [reduce using rule 160 (actual_parameter)]
    ','       reduce using rule 151 (function_call)
    ','       [reduce using rule 160 (actual_parameter)]
    $default  reduce using rule 151 (function_call)

    actual_parameter_list  go to state 282


state 301

  154 actual_parameter_list: '(' actual_parameter_iterable . ')'
  155 actual_parameter_iterable: actual_parameter_iterable . ',' actual_parameter

    ')'  shift, and go to state 336
    ','  shift, and go to state 337


state 302

  156 actual_parameter_iterable: actual_parameter .

    $default  reduce using rule 156 (actual_parameter_iterable)


state 303

  159 actual_parameter: procedure_identifier .

    $default  reduce using rule 159 (actual_parameter)


state 304

  187 statement_list: statement_list ';' statement .

    $default  reduce using rule 187 (statement_list)


state 305

   71 index_type_list: index_type_list ',' ordinal_type .

    $default  reduce using rule 71 (index_type_list)


state 306

   70 array_type: "array" '[' index_type_list ']' "of" . type

    DECIMAL_INT    shift, and go to state 42
    HEXADECIMAL    shift, and go to state 43
    REAL_DECIMAL   shift, and go to state 44
    IDENTIFIER     shift, and go to state 69
    QUOTED_STRING  shift, and go to state 46
    QUOTED_CHAR    shift, and go to state 47
    "string"       shift, and go to state 70
    "packed"       shift, and go to state 71
    "array"        shift, and go to state 72
    "record"       shift, and go to state 73
    "of"           shift, and go to state 74
    "set"          shift, and go to state 75
    "file"         shift, and go to state 76
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '('            shift, and go to state 77
    '^'            shift, and go to state 78

    constant                 go to state 79
    constant_identifier      go to state 51
    sign                     go to state 52
    type                     go to state 338
    simple_type              go to state 81
    ordinal_type             go to state 82
    ordinal_type_identifier  go to state 83
    enumerated_type          go to state 84
    subrange_type            go to state 85
    real_type                go to state 86
    real_type_identifier     go to state 87
    string_type              go to state 88
    structured_type          go to state 89
    type_list                go to state 90
    array_type               go to state 91
    record_type              go to state 92
    set_type                 go to state 93
    file_type                go to state 94
    pointer_type             go to state 95


state 307

   92 tag_field_type: IDENTIFIER .

    $default  reduce using rule 92 (tag_field_type)


state 308

   85 variant_part: "case" IDENTIFIER ':' tag_field_type . "of" variant_list

    "of"  shift, and go to state 339


state 309

   91 constant_list: constant .

    $default  reduce using rule 91 (constant_list)


state 310

   84 variant_part: "case" tag_field_type "of" variant_list .
   86 variant_list: variant_list . ';' variant

    ';'  shift, and go to state 340

    ';'       [reduce using rule 84 (variant_part)]
    $default  reduce using rule 84 (variant_part)


state 311

   87 variant_list: variant .

    $default  reduce using rule 87 (variant_list)


state 312

   88 variant: constant_list . ':' '(' ')'
   89        | constant_list . ':' '(' field_list ')'
   90 constant_list: constant_list . ',' constant

    ','  shift, and go to state 341
    ':'  shift, and go to state 342


state 313

   78 field_list: fixed_part ';' variant_part ';' .

    $default  reduce using rule 78 (field_list)


state 314

  235 parameter_declaration: "var" identifier_list ':' . type_identifier

    IDENTIFIER  shift, and go to state 315

    type_identifier  go to state 343


state 315

  237 type_identifier: IDENTIFIER .

    $default  reduce using rule 237 (type_identifier)


state 316

  236 parameter_declaration: identifier_list ':' type_identifier .

    $default  reduce using rule 236 (parameter_declaration)


state 317

  230 formal_parameter_list_iterable: formal_parameter_list_iterable ';' formal_parameter_list_iterable_list .

    $default  reduce using rule 230 (formal_parameter_list_iterable)


state 318

  126 factor: '(' expression ')' .

    $default  reduce using rule 126 (factor)


state 319

  167 member_group: expression ".." . expression

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "in"           shift, and go to state 197
    "not"          shift, and go to state 198
    '='            shift, and go to state 199
    '<'            shift, and go to state 200
    '>'            shift, and go to state 201
    RE             shift, and go to state 202
    LE             shift, and go to state 203
    NOTEQUAL       shift, and go to state 204
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 215
    simple_expression_term_operator_iterable  go to state 216
    expression                                go to state 344
    relational_operator                       go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 220
    set_constructor                           go to state 221


state 320

  164 member_group_list: member_group_list ',' . member_group

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "in"           shift, and go to state 197
    "not"          shift, and go to state 198
    '='            shift, and go to state 199
    '<'            shift, and go to state 200
    '>'            shift, and go to state 201
    RE             shift, and go to state 202
    LE             shift, and go to state 203
    NOTEQUAL       shift, and go to state 204
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 215
    simple_expression_term_operator_iterable  go to state 216
    expression                                go to state 266
    relational_operator                       go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 220
    set_constructor                           go to state 221
    member_group                              go to state 345


state 321

  163 set_constructor: '[' member_group_list ']' .

    $default  reduce using rule 163 (set_constructor)


state 322

  128 term: term term_operator_list factor .

    $default  reduce using rule 128 (term)


state 323

  128 term: term . term_operator_list factor
  137 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list term .

    "div"  shift, and go to state 270
    "mod"  shift, and go to state 271
    "and"  shift, and go to state 272
    '*'    shift, and go to state 273
    '/'    shift, and go to state 274

    $default  reduce using rule 137 (simple_expression_term_operator_iterable)

    term_operator_list  go to state 275


state 324

   90 constant_list: constant_list . ',' constant
  199 case: constant_list . ':' statement

    ','  shift, and go to state 341
    ':'  shift, and go to state 346


state 325

  193 case_statement: "case" expression "of" case_list . "end"
  194               | "case" expression "of" case_list . otherwise_clause "end"
  195               | "case" expression "of" case_list . otherwise_clause ';' "end"
  196               | "case" expression "of" case_list . ';' "end"
  197 case_list: case_list . ',' case

    "end"  shift, and go to state 347
    ';'    shift, and go to state 348
    ','    shift, and go to state 349

    otherwise_clause  go to state 350


state 326

  198 case_list: case .

    $default  reduce using rule 198 (case_list)


state 327

  191 if_statement: "if" expression "then" statement .
  192             | "if" expression "then" statement . "else" statement

    "else"  shift, and go to state 351

    "else"    [reduce using rule 191 (if_statement)]
    $default  reduce using rule 191 (if_statement)


state 328

  204 repeat_statement: "repeat" statement_list "until" expression .

    $default  reduce using rule 204 (repeat_statement)


state 329

  205 while_statement: "while" expression "do" statement .

    $default  reduce using rule 205 (while_statement)


state 330

  209 initial_value: expression .

    $default  reduce using rule 209 (initial_value)


state 331

  206 for_statement: "for" control_variable ":=" initial_value . "to" final_value "do" statement
  207              | "for" control_variable ":=" initial_value . "downto" final_value "do" statement

    "to"      shift, and go to state 352
    "downto"  shift, and go to state 353


state 332

  211 with_statement: "with" record_variable_reference_list "do" statement .

    $default  reduce using rule 211 (with_statement)


state 333

  212 record_variable_reference_list: record_variable_reference_list ',' variable_reference .

    $default  reduce using rule 212 (record_variable_reference_list)


state 334

  109 expression_list: expression_list ',' . expression

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "in"           shift, and go to state 197
    "not"          shift, and go to state 198
    '='            shift, and go to state 199
    '<'            shift, and go to state 200
    '>'            shift, and go to state 201
    RE             shift, and go to state 202
    LE             shift, and go to state 203
    NOTEQUAL       shift, and go to state 204
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 215
    simple_expression_term_operator_iterable  go to state 216
    expression                                go to state 354
    relational_operator                       go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 220
    set_constructor                           go to state 221


state 335

  108 index: '[' expression_list ']' .

    $default  reduce using rule 108 (index)


state 336

  154 actual_parameter_list: '(' actual_parameter_iterable ')' .

    $default  reduce using rule 154 (actual_parameter_list)


state 337

  155 actual_parameter_iterable: actual_parameter_iterable ',' . actual_parameter

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 297
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "in"           shift, and go to state 197
    "not"          shift, and go to state 198
    '='            shift, and go to state 199
    '<'            shift, and go to state 200
    '>'            shift, and go to state 201
    RE             shift, and go to state 202
    LE             shift, and go to state 203
    NOTEQUAL       shift, and go to state 204
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 298
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 215
    simple_expression_term_operator_iterable  go to state 216
    expression                                go to state 299
    relational_operator                       go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 300
    actual_parameter                          go to state 355
    procedure_identifier                      go to state 303
    set_constructor                           go to state 221


state 338

   70 array_type: "array" '[' index_type_list ']' "of" type .

    $default  reduce using rule 70 (array_type)


state 339

   85 variant_part: "case" IDENTIFIER ':' tag_field_type "of" . variant_list

    DECIMAL_INT    shift, and go to state 42
    HEXADECIMAL    shift, and go to state 43
    REAL_DECIMAL   shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    QUOTED_STRING  shift, and go to state 46
    QUOTED_CHAR    shift, and go to state 47
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49

    constant             go to state 309
    constant_identifier  go to state 51
    sign                 go to state 52
    variant_list         go to state 356
    variant              go to state 311
    constant_list        go to state 312


state 340

   86 variant_list: variant_list ';' . variant

    DECIMAL_INT    shift, and go to state 42
    HEXADECIMAL    shift, and go to state 43
    REAL_DECIMAL   shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    QUOTED_STRING  shift, and go to state 46
    QUOTED_CHAR    shift, and go to state 47
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49

    constant             go to state 309
    constant_identifier  go to state 51
    sign                 go to state 52
    variant              go to state 357
    constant_list        go to state 312


state 341

   90 constant_list: constant_list ',' . constant

    DECIMAL_INT    shift, and go to state 42
    HEXADECIMAL    shift, and go to state 43
    REAL_DECIMAL   shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    QUOTED_STRING  shift, and go to state 46
    QUOTED_CHAR    shift, and go to state 47
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49

    constant             go to state 358
    constant_identifier  go to state 51
    sign                 go to state 52


state 342

   88 variant: constant_list ':' . '(' ')'
   89        | constant_list ':' . '(' field_list ')'

    '('  shift, and go to state 359


state 343

  235 parameter_declaration: "var" identifier_list ':' type_identifier .

    $default  reduce using rule 235 (parameter_declaration)


state 344

  167 member_group: expression ".." expression .

    $default  reduce using rule 167 (member_group)


state 345

  164 member_group_list: member_group_list ',' member_group .

    $default  reduce using rule 164 (member_group_list)


state 346

  199 case: constant_list ':' . statement

    DECIMAL_INT  shift, and go to state 17
    IDENTIFIER   shift, and go to state 128
    "begin"      shift, and go to state 100
    "case"       shift, and go to state 129
    "goto"       shift, and go to state 130
    "if"         shift, and go to state 131
    "repeat"     shift, and go to state 132
    "while"      shift, and go to state 133
    "for"        shift, and go to state 134
    "with"       shift, and go to state 135

    $default  reduce using rule 168 (statement)

    label                  go to state 136
    variable_reference     go to state 137
    variable_identifier    go to state 138
    function_identifier    go to state 139
    procedure_identifier   go to state 140
    statement              go to state 360
    simple_statement       go to state 142
    assignment_statement   go to state 143
    procedure_statement    go to state 144
    goto_statement         go to state 145
    structured_statement   go to state 146
    compound_statement     go to state 147
    conditional_statement  go to state 149
    if_statement           go to state 150
    case_statement         go to state 151
    repetitive_statement   go to state 152
    repeat_statement       go to state 153
    while_statement        go to state 154
    for_statement          go to state 155
    with_statement         go to state 156


state 347

  193 case_statement: "case" expression "of" case_list "end" .

    $default  reduce using rule 193 (case_statement)


state 348

  196 case_statement: "case" expression "of" case_list ';' . "end"
  200 otherwise_clause: ';' . "otherwise" statement

    "end"        shift, and go to state 361
    "otherwise"  shift, and go to state 362


state 349

  197 case_list: case_list ',' . case

    DECIMAL_INT    shift, and go to state 42
    HEXADECIMAL    shift, and go to state 43
    REAL_DECIMAL   shift, and go to state 44
    IDENTIFIER     shift, and go to state 45
    QUOTED_STRING  shift, and go to state 46
    QUOTED_CHAR    shift, and go to state 47
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49

    constant             go to state 309
    constant_identifier  go to state 51
    sign                 go to state 52
    constant_list        go to state 324
    case                 go to state 363


state 350

  194 case_statement: "case" expression "of" case_list otherwise_clause . "end"
  195               | "case" expression "of" case_list otherwise_clause . ';' "end"

    "end"  shift, and go to state 364
    ';'    shift, and go to state 365


state 351

  192 if_statement: "if" expression "then" statement "else" . statement

    DECIMAL_INT  shift, and go to state 17
    IDENTIFIER   shift, and go to state 128
    "begin"      shift, and go to state 100
    "case"       shift, and go to state 129
    "goto"       shift, and go to state 130
    "if"         shift, and go to state 131
    "repeat"     shift, and go to state 132
    "while"      shift, and go to state 133
    "for"        shift, and go to state 134
    "with"       shift, and go to state 135

    $default  reduce using rule 168 (statement)

    label                  go to state 136
    variable_reference     go to state 137
    variable_identifier    go to state 138
    function_identifier    go to state 139
    procedure_identifier   go to state 140
    statement              go to state 366
    simple_statement       go to state 142
    assignment_statement   go to state 143
    procedure_statement    go to state 144
    goto_statement         go to state 145
    structured_statement   go to state 146
    compound_statement     go to state 147
    conditional_statement  go to state 149
    if_statement           go to state 150
    case_statement         go to state 151
    repetitive_statement   go to state 152
    repeat_statement       go to state 153
    while_statement        go to state 154
    for_statement          go to state 155
    with_statement         go to state 156


state 352

  206 for_statement: "for" control_variable ":=" initial_value "to" . final_value "do" statement

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "in"           shift, and go to state 197
    "not"          shift, and go to state 198
    '='            shift, and go to state 199
    '<'            shift, and go to state 200
    '>'            shift, and go to state 201
    RE             shift, and go to state 202
    LE             shift, and go to state 203
    NOTEQUAL       shift, and go to state 204
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 215
    simple_expression_term_operator_iterable  go to state 216
    expression                                go to state 367
    relational_operator                       go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 220
    set_constructor                           go to state 221
    final_value                               go to state 368


state 353

  207 for_statement: "for" control_variable ":=" initial_value "downto" . final_value "do" statement

    DECIMAL_INT    shift, and go to state 191
    HEXADECIMAL    shift, and go to state 192
    REAL_DECIMAL   shift, and go to state 193
    IDENTIFIER     shift, and go to state 194
    QUOTED_STRING  shift, and go to state 195
    "nil"          shift, and go to state 196
    "in"           shift, and go to state 197
    "not"          shift, and go to state 198
    '='            shift, and go to state 199
    '<'            shift, and go to state 200
    '>'            shift, and go to state 201
    RE             shift, and go to state 202
    LE             shift, and go to state 203
    NOTEQUAL       shift, and go to state 204
    '+'            shift, and go to state 48
    '-'            shift, and go to state 49
    '@'            shift, and go to state 205
    '('            shift, and go to state 206
    '['            shift, and go to state 207

    constant_identifier                       go to state 208
    sign                                      go to state 209
    variable_reference                        go to state 210
    variable_identifier                       go to state 138
    unsigned_constant                         go to state 211
    unsigned_number                           go to state 212
    factor                                    go to state 213
    term                                      go to state 214
    simple_expression                         go to state 215
    simple_expression_term_operator_iterable  go to state 216
    expression                                go to state 367
    relational_operator                       go to state 218
    function_call                             go to state 219
    function_identifier                       go to state 220
    set_constructor                           go to state 221
    final_value                               go to state 369


state 354

  109 expression_list: expression_list ',' expression .

    $default  reduce using rule 109 (expression_list)


state 355

  155 actual_parameter_iterable: actual_parameter_iterable ',' actual_parameter .

    $default  reduce using rule 155 (actual_parameter_iterable)


state 356

   85 variant_part: "case" IDENTIFIER ':' tag_field_type "of" variant_list .
   86 variant_list: variant_list . ';' variant

    ';'  shift, and go to state 340

    ';'       [reduce using rule 85 (variant_part)]
    $default  reduce using rule 85 (variant_part)


state 357

   86 variant_list: variant_list ';' variant .

    $default  reduce using rule 86 (variant_list)


state 358

   90 constant_list: constant_list ',' constant .

    $default  reduce using rule 90 (constant_list)


state 359

   88 variant: constant_list ':' '(' . ')'
   89        | constant_list ':' '(' . field_list ')'

    IDENTIFIER  shift, and go to state 13
    "case"      shift, and go to state 110
    ')'         shift, and go to state 370

    identifier_list    go to state 111
    field_list         go to state 371
    fixed_part         go to state 113
    field_declaration  go to state 114
    variant_part       go to state 115


state 360

  199 case: constant_list ':' statement .

    $default  reduce using rule 199 (case)


state 361

  196 case_statement: "case" expression "of" case_list ';' "end" .

    $default  reduce using rule 196 (case_statement)


state 362

  200 otherwise_clause: ';' "otherwise" . statement

    DECIMAL_INT  shift, and go to state 17
    IDENTIFIER   shift, and go to state 128
    "begin"      shift, and go to state 100
    "case"       shift, and go to state 129
    "goto"       shift, and go to state 130
    "if"         shift, and go to state 131
    "repeat"     shift, and go to state 132
    "while"      shift, and go to state 133
    "for"        shift, and go to state 134
    "with"       shift, and go to state 135

    $default  reduce using rule 168 (statement)

    label                  go to state 136
    variable_reference     go to state 137
    variable_identifier    go to state 138
    function_identifier    go to state 139
    procedure_identifier   go to state 140
    statement              go to state 372
    simple_statement       go to state 142
    assignment_statement   go to state 143
    procedure_statement    go to state 144
    goto_statement         go to state 145
    structured_statement   go to state 146
    compound_statement     go to state 147
    conditional_statement  go to state 149
    if_statement           go to state 150
    case_statement         go to state 151
    repetitive_statement   go to state 152
    repeat_statement       go to state 153
    while_statement        go to state 154
    for_statement          go to state 155
    with_statement         go to state 156


state 363

  197 case_list: case_list ',' case .

    $default  reduce using rule 197 (case_list)


state 364

  194 case_statement: "case" expression "of" case_list otherwise_clause "end" .

    $default  reduce using rule 194 (case_statement)


state 365

  195 case_statement: "case" expression "of" case_list otherwise_clause ';' . "end"

    "end"  shift, and go to state 373


state 366

  192 if_statement: "if" expression "then" statement "else" statement .

    $default  reduce using rule 192 (if_statement)


state 367

  210 final_value: expression .

    $default  reduce using rule 210 (final_value)


state 368

  206 for_statement: "for" control_variable ":=" initial_value "to" final_value . "do" statement

    "do"  shift, and go to state 374


state 369

  207 for_statement: "for" control_variable ":=" initial_value "downto" final_value . "do" statement

    "do"  shift, and go to state 375


state 370

   88 variant: constant_list ':' '(' ')' .

    $default  reduce using rule 88 (variant)


state 371

   89 variant: constant_list ':' '(' field_list . ')'

    ')'  shift, and go to state 376


state 372

  200 otherwise_clause: ';' "otherwise" statement .

    $default  reduce using rule 200 (otherwise_clause)


state 373

  195 case_statement: "case" expression "of" case_list otherwise_clause ';' "end" .

    $default  reduce using rule 195 (case_statement)


state 374

  206 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" . statement

    DECIMAL_INT  shift, and go to state 17
    IDENTIFIER   shift, and go to state 128
    "begin"      shift, and go to state 100
    "case"       shift, and go to state 129
    "goto"       shift, and go to state 130
    "if"         shift, and go to state 131
    "repeat"     shift, and go to state 132
    "while"      shift, and go to state 133
    "for"        shift, and go to state 134
    "with"       shift, and go to state 135

    $default  reduce using rule 168 (statement)

    label                  go to state 136
    variable_reference     go to state 137
    variable_identifier    go to state 138
    function_identifier    go to state 139
    procedure_identifier   go to state 140
    statement              go to state 377
    simple_statement       go to state 142
    assignment_statement   go to state 143
    procedure_statement    go to state 144
    goto_statement         go to state 145
    structured_statement   go to state 146
    compound_statement     go to state 147
    conditional_statement  go to state 149
    if_statement           go to state 150
    case_statement         go to state 151
    repetitive_statement   go to state 152
    repeat_statement       go to state 153
    while_statement        go to state 154
    for_statement          go to state 155
    with_statement         go to state 156


state 375

  207 for_statement: "for" control_variable ":=" initial_value "downto" final_value "do" . statement

    DECIMAL_INT  shift, and go to state 17
    IDENTIFIER   shift, and go to state 128
    "begin"      shift, and go to state 100
    "case"       shift, and go to state 129
    "goto"       shift, and go to state 130
    "if"         shift, and go to state 131
    "repeat"     shift, and go to state 132
    "while"      shift, and go to state 133
    "for"        shift, and go to state 134
    "with"       shift, and go to state 135

    $default  reduce using rule 168 (statement)

    label                  go to state 136
    variable_reference     go to state 137
    variable_identifier    go to state 138
    function_identifier    go to state 139
    procedure_identifier   go to state 140
    statement              go to state 378
    simple_statement       go to state 142
    assignment_statement   go to state 143
    procedure_statement    go to state 144
    goto_statement         go to state 145
    structured_statement   go to state 146
    compound_statement     go to state 147
    conditional_statement  go to state 149
    if_statement           go to state 150
    case_statement         go to state 151
    repetitive_statement   go to state 152
    repeat_statement       go to state 153
    while_statement        go to state 154
    for_statement          go to state 155
    with_statement         go to state 156


state 376

   89 variant: constant_list ':' '(' field_list ')' .

    $default  reduce using rule 89 (variant)


state 377

  206 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" statement .

    $default  reduce using rule 206 (for_statement)


state 378

  207 for_statement: "for" control_variable ":=" initial_value "downto" final_value "do" statement .

    $default  reduce using rule 207 (for_statement)
