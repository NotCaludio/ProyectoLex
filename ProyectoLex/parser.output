Nonterminals useless in grammar

   file_buffer_symbol
   pointer_object_symbol
   result_type


Terminals unused in grammar

   ASSIGNMENT_PRECEDENCE
   "<>"
   "<="
   ">="
   POSITIVE
   NEGATIVE


Rules useless in grammar

  264 file_buffer_symbol: '^'

  265 pointer_object_symbol: '^'

  266 result_type: ordinal_type_identifier
  267            | real_type_identifier
  268            | pointer_type_identifier


Rules useless in parser due to conflicts

  238 procedure_body: block

  244 function_body: block


State 16 conflicts: 1 shift/reduce, 1 reduce/reduce
State 25 conflicts: 1 shift/reduce
State 32 conflicts: 1 shift/reduce, 1 reduce/reduce
State 37 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 60 conflicts: 2 shift/reduce
State 83 conflicts: 1 shift/reduce
State 84 conflicts: 2 shift/reduce
State 212 conflicts: 1 shift/reduce, 1 reduce/reduce
State 216 conflicts: 1 shift/reduce, 1 reduce/reduce
State 355 conflicts: 1 shift/reduce
State 374 conflicts: 1 shift/reduce
State 399 conflicts: 1 shift/reduce


Grammar

    0 $accept: pascal $end

    1 pascal: program
    2       | regular_unit

    3 program: program_heading ';' block
    4        | program_heading ';' uses_clause ';' block

    5 program_heading: "program" IDENTIFIER
    6                | "program" IDENTIFIER '(' program_parameters ')'

    7 program_parameters: identifier_list

    8 uses_clause: "uses" identifier_list

    9 block: block label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part
   10      | /* empty */

   11 label_declaration_part: "label" label_list ';'
   12                       | /* empty */

   13 label_list: label_list ',' label
   14           | label

   15 $@1: /* empty */

   16 label: DECIMAL_INT $@1

   17 constant_declaration_part: "const" constant_declaration_list
   18                          | /* empty */

   19 constant_declaration_list: constant_declaration_list constant_declaration
   20                          | constant_declaration

   21 constant_declaration: IDENTIFIER '=' constant ';'

   22 $@2: /* empty */

   23 constant: constant_identifier $@2
   24         | sign constant_identifier
   25         | signed_number
   26         | QUOTED_STRING
   27         | QUOTED_CHAR

   28 constant_identifier: IDENTIFIER

   29 type_declaration_part: "type" type_declaration_list
   30                      | /* empty */

   31 type_declaration_list: type_declaration_list type_declaration
   32                      | type_declaration

   33 type_declaration: IDENTIFIER '=' type ';'

   34 variable_declaration_part: "var" variable_declaration_list
   35                          | /* empty */

   36 variable_declaration_list: variable_declaration_list variable_declaration
   37                          | variable_declaration

   38 variable_declaration: identifier_list ':' type ';'

   39 procedure_and_function_declaration_part: procedure_and_function_declaration_list
   40                                        | /* empty */

   41 procedure_and_function_declaration_list: procedure_and_function_declaration_list procedure_and_function_declaration
   42                                        | procedure_and_function_declaration

   43 procedure_and_function_declaration: procedure_declaration
   44                                   | function_declaration

   45 statement_part: compound_statement
   46               | /* empty */

   47 sign: '+'
   48     | '-'

   49 identifier_list: identifier_list ',' IDENTIFIER
   50                | IDENTIFIER

   51 type: simple_type
   52     | structured_type
   53     | pointer_type
   54     | IDENTIFIER

   55 simple_type: ordinal_type
   56            | real_type
   57            | string_type

   58 ordinal_type: subrange_type
   59             | enumerated_type
   60             | ordinal_type_identifier

   61 ordinal_type_identifier: "integer"
   62                        | "word"
   63                        | "longint"
   64                        | "char"
   65                        | "boolean"
   66                        | function_call

   67 type_boolean: "true"
   68             | "false"

   69 enumerated_type: '(' identifier_list ')'

   70 subrange_type: constant ".." constant

   71 real_type: real_type_identifier

   72 real_type_identifier: "real"

   73 string_type: "string" '[' DECIMAL_INT ']'

   74 structured_type: "packed" type_list
   75                | type_list

   76 type_list: array_type
   77          | set_type
   78          | file_type
   79          | record_type

   80 array_type: "array" '[' index_type_list ']' "of" type

   81 index_type_list: index_type_list ',' ordinal_type
   82                | ordinal_type

   83 record_type: "record" "end"
   84            | "record" field_list "end"

   85 field_list: fixed_part
   86           | fixed_part ';'
   87           | fixed_part ';' variant_part
   88           | fixed_part ';' variant_part ';'
   89           | variant_part
   90           | variant_part ';'

   91 fixed_part: fixed_part ';' field_declaration
   92           | field_declaration

   93 field_declaration: identifier_list ':' type

   94 variant_part: "case" tag_field_type "of" variant_list
   95             | "case" IDENTIFIER ':' tag_field_type "of" variant_list

   96 variant_list: variant_list ';' variant
   97             | variant

   98 variant: constant_list ':' '(' ')'
   99        | constant_list ':' '(' field_list ')'

  100 constant_list: constant_list ',' constant
  101              | constant

  102 tag_field_type: IDENTIFIER

  103 set_type: "set" "of" ordinal_type

  104 file_type: "file"
  105          | "of" type

  106 pointer_type: '^' base_type
  107             | pointer_type_identifier

  108 pointer_type_identifier: "nil"

  109 base_type: "integer"
  110          | "longint"
  111          | "char"
  112          | "boolean"
  113          | "string"
  114          | "record"
  115          | "file"
  116          | "array"
  117          | IDENTIFIER
  118          | "function"

  119 variable_reference: variable_identifier qualifier_list

  120 variable_identifier: IDENTIFIER

  121 qualifier_list: qualifier_list qualifier
  122               | qualifier

  123 qualifier: index
  124          | field_designator
  125          | '^'

  126 index: '[' expression_list ']'

  127 expression_list: expression_list ',' expression
  128                | expression

  129 field_designator: '.' IDENTIFIER

  130 unsigned_constant: unsigned_number
  131                  | QUOTED_STRING
  132                  | QUOTED_CHAR
  133                  | "nil"

  134 unsigned_number: DECIMAL_INT
  135                | HEXADECIMAL
  136                | REAL_DECIMAL

  137 signed_number: sign unsigned_number
  138              | unsigned_number

  139 factor: variable_reference
  140       | '@' variable_reference
  141       | unsigned_constant
  142       | function_call
  143       | set_constructor
  144       | '(' expression ')'
  145       | "not" factor
  146       | IDENTIFIER
  147       | type_boolean

  148 term: term term_operator_list factor
  149     | factor

  150 term_operator_list: '*'
  151                   | '/'
  152                   | "div"
  153                   | "mod"
  154                   | "and"

  155 simple_expression: sign simple_expression_term_operator_iterable
  156                  | simple_expression_term_operator_iterable

  157 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list term
  158                                         | term

  159 simple_expression_term_operator_list: '+'
  160                                     | '-'
  161                                     | "or"

  162 expression: simple_expression
  163           | simple_expression relational_operator simple_expression

  164 relational_operator: '='
  165                    | '<'
  166                    | '>'
  167                    | LE
  168                    | RE
  169                    | NOTEQUAL
  170                    | "in"

  171 function_call: function_identifier actual_parameter_list

  172 function_identifier: "function"
  173                    | IDENTIFIER

  174 actual_parameter_list: '(' actual_parameter_iterable ')'

  175 actual_parameter_iterable: actual_parameter_iterable ',' actual_parameter
  176                          | actual_parameter

  177 actual_parameter: expression
  178                 | procedure_identifier

  179 procedure_identifier: "write"
  180                     | "writeln"
  181                     | "read"
  182                     | "readln"

  183 set_constructor: '[' ']'
  184                | '[' member_group_list ']'

  185 member_group_list: member_group_list ',' member_group
  186                  | member_group

  187 member_group: expression
  188             | expression ".." expression

  189 statement: /* empty */
  190          | label ':'
  191          | label ':' simple_statement
  192          | label ':' structured_statement
  193          | simple_statement
  194          | structured_statement
  195          | IDENTIFIER

  196 simple_statement: assignment_statement
  197                 | procedure_statement
  198                 | goto_statement

  199 assignment_statement: variable_reference ":=" expression
  200                     | function_identifier ":=" expression

  201 procedure_statement: procedure_identifier
  202                    | procedure_identifier actual_parameter_list
  203                    | IDENTIFIER actual_parameter_list

  204 goto_statement: "goto" label

  205 structured_statement: compound_statement
  206                     | conditional_statement
  207                     | repetitive_statement
  208                     | with_statement

  209 compound_statement: "begin" statement_list "end"

  210 statement_list: statement_list ';' statement
  211               | statement

  212 conditional_statement: if_statement
  213                      | case_statement

  214 if_statement: "if" expression "then" statement
  215             | "if" expression "then" statement "else" statement

  216 case_statement: "case" expression "of" case_list "end"
  217               | "case" expression "of" case_list otherwise_clause "end"
  218               | "case" expression "of" case_list otherwise_clause ';' "end"
  219               | "case" expression "of" case_list ';' "end"

  220 case_list: case_list ';' case
  221          | case

  222 case: constant_list ':' statement

  223 otherwise_clause: ';' "otherwise" statement

  224 repetitive_statement: repeat_statement
  225                     | while_statement
  226                     | for_statement

  227 repeat_statement: "repeat" statement_list "until" expression

  228 while_statement: "while" expression "do" statement

  229 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" statement
  230              | "for" control_variable ":=" initial_value "downto" final_value "do" statement

  231 control_variable: IDENTIFIER

  232 initial_value: expression

  233 final_value: expression

  234 with_statement: "with" record_variable_reference_list "do" statement

  235 record_variable_reference_list: record_variable_reference_list ',' variable_reference
  236                               | variable_reference

  237 procedure_declaration: procedure_heading ';' procedure_body ';'

  238 procedure_body: block
  239               | "forward"
  240               | "external"

  241 procedure_heading: "procedure" IDENTIFIER
  242                  | "procedure" IDENTIFIER formal_parameter_list

  243 function_declaration: function_heading ';' function_body ';'

  244 function_body: block
  245              | "forward"
  246              | "external"

  247 function_heading: "function" IDENTIFIER ':' type
  248                 | "function" IDENTIFIER formal_parameter_list ':' type

  249 formal_parameter_list: '(' formal_parameter_list_iterable ')'

  250 formal_parameter_list_iterable: formal_parameter_list_iterable ';' formal_parameter_list_iterable_list
  251                               | formal_parameter_list_iterable_list

  252 formal_parameter_list_iterable_list: parameter_declaration
  253                                    | procedure_heading
  254                                    | function_heading

  255 parameter_declaration: "var" identifier_list ':' type_identifier
  256                      | identifier_list ':' type_identifier

  257 type_identifier: IDENTIFIER

  258 regular_unit: unit_heading ';' interface_part implementation_part "end" '.'

  259 unit_heading: "unit" IDENTIFIER

  260 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

  261 uses_clause_empty: uses_clause
  262                  | /* empty */

  263 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 69 98 99 144 174 249
')' (41) 6 69 98 99 144 174 249
'*' (42) 150
'+' (43) 47 159
',' (44) 13 49 81 100 127 175 185 235
'-' (45) 48 160
'.' (46) 129 258
'/' (47) 151
':' (58) 38 93 95 98 99 190 191 192 222 247 248 255 256
';' (59) 3 4 11 21 33 38 86 87 88 90 91 96 210 218 219 220 223 237
    243 250 258
'<' (60) 165
'=' (61) 21 33 164
'>' (62) 166
'@' (64) 140
'[' (91) 73 80 126 183 184
']' (93) 73 80 126 183 184
'^' (94) 106 125
error (256)
DECIMAL_INT (258) 16 73 134
HEXADECIMAL (259) 135
REAL_DECIMAL (260) 136
IDENTIFIER (261) 5 6 21 28 33 49 50 54 95 102 117 120 129 146 173 195
    203 231 241 242 247 248 257 259
QUOTED_STRING (262) 26 131
QUOTED_CHAR (263) 27 132
"program" (264) 5 6
"begin" (265) 209
"uses" (266) 8
"unit" (267) 259
"interface" (268) 260
"implementation" (269) 263
"label" (270) 11
"const" (271) 17
"type" (272) 29
"real" (273) 72
"integer" (274) 61 109
"longint" (275) 63 110
"word" (276) 62
"char" (277) 64 111
"boolean" (278) 65 112
"true" (279) 67
"false" (280) 68
"string" (281) 73 113
"packed" (282) 74
"array" (283) 80 116
"record" (284) 83 84 114
"end" (285) 83 84 209 216 217 218 219 258
"case" (286) 94 95 216 217 218 219
"otherwise" (287) 223
"of" (288) 80 94 95 103 105 216 217 218 219
"set" (289) 103
"var" (290) 34 255
"forward" (291) 239 245
"external" (292) 240 246
"function" (293) 118 172 247 248
"procedure" (294) 241 242
"file" (295) 104 115
"goto" (296) 204
"if" (297) 214 215
"then" (298) 214 215
"else" (299) 215
"repeat" (300) 227
"until" (301) 227
"while" (302) 228
"do" (303) 228 229 230 234
"for" (304) 229 230
"to" (305) 229
"downto" (306) 230
"with" (307) 234
"nil" (308) 108 133
"read" (309) 181
"readln" (310) 182
"write" (311) 179
"writeln" (312) 180
"in" (313) 170
"or" (314) 161
"div" (315) 152
"mod" (316) 153
"and" (317) 154
"not" (318) 145
ASSIGNMENT_PRECEDENCE (319)
":=" (320) 199 200 229 230
".." (321) 70 188
"<>" (322)
"<=" (323)
">=" (324)
RE (325) 168
LE (326) 167
NOTEQUAL (327) 169
POSITIVE (328)
NEGATIVE (329)


Nonterminals, with rules where they appear

$accept (92)
    on left: 0
pascal (93)
    on left: 1 2, on right: 0
program (94)
    on left: 3 4, on right: 1
program_heading (95)
    on left: 5 6, on right: 3 4
program_parameters (96)
    on left: 7, on right: 6
uses_clause (97)
    on left: 8, on right: 4 261
block (98)
    on left: 9 10, on right: 3 4 9 238 244
label_declaration_part (99)
    on left: 11 12, on right: 9
label_list (100)
    on left: 13 14, on right: 11 13
label (101)
    on left: 16, on right: 13 14 190 191 192 204
$@1 (102)
    on left: 15, on right: 16
constant_declaration_part (103)
    on left: 17 18, on right: 9 260 263
constant_declaration_list (104)
    on left: 19 20, on right: 17 19
constant_declaration (105)
    on left: 21, on right: 19 20
constant (106)
    on left: 23 24 25 26 27, on right: 21 70 100 101
$@2 (107)
    on left: 22, on right: 23
constant_identifier (108)
    on left: 28, on right: 23 24
type_declaration_part (109)
    on left: 29 30, on right: 9 260 263
type_declaration_list (110)
    on left: 31 32, on right: 29 31
type_declaration (111)
    on left: 33, on right: 31 32
variable_declaration_part (112)
    on left: 34 35, on right: 9 260 263
variable_declaration_list (113)
    on left: 36 37, on right: 34 36
variable_declaration (114)
    on left: 38, on right: 36 37
procedure_and_function_declaration_part (115)
    on left: 39 40, on right: 9 260 263
procedure_and_function_declaration_list (116)
    on left: 41 42, on right: 39 41
procedure_and_function_declaration (117)
    on left: 43 44, on right: 41 42
statement_part (118)
    on left: 45 46, on right: 9
sign (119)
    on left: 47 48, on right: 24 137 155
identifier_list (120)
    on left: 49 50, on right: 7 8 38 49 69 93 255 256
type (121)
    on left: 51 52 53 54, on right: 33 38 80 93 105 247 248
simple_type (122)
    on left: 55 56 57, on right: 51
ordinal_type (123)
    on left: 58 59 60, on right: 55 81 82 103
ordinal_type_identifier (124)
    on left: 61 62 63 64 65 66, on right: 60
type_boolean (125)
    on left: 67 68, on right: 147
enumerated_type (126)
    on left: 69, on right: 59
subrange_type (127)
    on left: 70, on right: 58
real_type (128)
    on left: 71, on right: 56
real_type_identifier (129)
    on left: 72, on right: 71
string_type (130)
    on left: 73, on right: 57
structured_type (131)
    on left: 74 75, on right: 52
type_list (132)
    on left: 76 77 78 79, on right: 74 75
array_type (133)
    on left: 80, on right: 76
index_type_list (134)
    on left: 81 82, on right: 80 81
record_type (135)
    on left: 83 84, on right: 79
field_list (136)
    on left: 85 86 87 88 89 90, on right: 84 99
fixed_part (137)
    on left: 91 92, on right: 85 86 87 88 91
field_declaration (138)
    on left: 93, on right: 91 92
variant_part (139)
    on left: 94 95, on right: 87 88 89 90
variant_list (140)
    on left: 96 97, on right: 94 95 96
variant (141)
    on left: 98 99, on right: 96 97
constant_list (142)
    on left: 100 101, on right: 98 99 100 222
tag_field_type (143)
    on left: 102, on right: 94 95
set_type (144)
    on left: 103, on right: 77
file_type (145)
    on left: 104 105, on right: 78
pointer_type (146)
    on left: 106 107, on right: 53
pointer_type_identifier (147)
    on left: 108, on right: 107
base_type (148)
    on left: 109 110 111 112 113 114 115 116 117 118, on right: 106
variable_reference (149)
    on left: 119, on right: 139 140 199 235 236
variable_identifier (150)
    on left: 120, on right: 119
qualifier_list (151)
    on left: 121 122, on right: 119 121
qualifier (152)
    on left: 123 124 125, on right: 121 122
index (153)
    on left: 126, on right: 123
expression_list (154)
    on left: 127 128, on right: 126 127
field_designator (155)
    on left: 129, on right: 124
unsigned_constant (156)
    on left: 130 131 132 133, on right: 141
unsigned_number (157)
    on left: 134 135 136, on right: 130 137 138
signed_number (158)
    on left: 137 138, on right: 25
factor (159)
    on left: 139 140 141 142 143 144 145 146 147, on right: 145 148
    149
term (160)
    on left: 148 149, on right: 148 157 158
term_operator_list (161)
    on left: 150 151 152 153 154, on right: 148
simple_expression (162)
    on left: 155 156, on right: 162 163
simple_expression_term_operator_iterable (163)
    on left: 157 158, on right: 155 156 157
simple_expression_term_operator_list (164)
    on left: 159 160 161, on right: 157
expression (165)
    on left: 162 163, on right: 127 128 144 177 187 188 199 200 214
    215 216 217 218 219 227 228 232 233
relational_operator (166)
    on left: 164 165 166 167 168 169 170, on right: 163
function_call (167)
    on left: 171, on right: 66 142
function_identifier (168)
    on left: 172 173, on right: 171 200
actual_parameter_list (169)
    on left: 174, on right: 171 202 203
actual_parameter_iterable (170)
    on left: 175 176, on right: 174 175
actual_parameter (171)
    on left: 177 178, on right: 175 176
procedure_identifier (172)
    on left: 179 180 181 182, on right: 178 201 202
set_constructor (173)
    on left: 183 184, on right: 143
member_group_list (174)
    on left: 185 186, on right: 184 185
member_group (175)
    on left: 187 188, on right: 185 186
statement (176)
    on left: 189 190 191 192 193 194 195, on right: 210 211 214 215
    222 223 228 229 230 234
simple_statement (177)
    on left: 196 197 198, on right: 191 193
assignment_statement (178)
    on left: 199 200, on right: 196
procedure_statement (179)
    on left: 201 202 203, on right: 197
goto_statement (180)
    on left: 204, on right: 198
structured_statement (181)
    on left: 205 206 207 208, on right: 192 194
compound_statement (182)
    on left: 209, on right: 45 205
statement_list (183)
    on left: 210 211, on right: 209 210 227
conditional_statement (184)
    on left: 212 213, on right: 206
if_statement (185)
    on left: 214 215, on right: 212
case_statement (186)
    on left: 216 217 218 219, on right: 213
case_list (187)
    on left: 220 221, on right: 216 217 218 219 220
case (188)
    on left: 222, on right: 220 221
otherwise_clause (189)
    on left: 223, on right: 217 218
repetitive_statement (190)
    on left: 224 225 226, on right: 207
repeat_statement (191)
    on left: 227, on right: 224
while_statement (192)
    on left: 228, on right: 225
for_statement (193)
    on left: 229 230, on right: 226
control_variable (194)
    on left: 231, on right: 229 230
initial_value (195)
    on left: 232, on right: 229 230
final_value (196)
    on left: 233, on right: 229 230
with_statement (197)
    on left: 234, on right: 208
record_variable_reference_list (198)
    on left: 235 236, on right: 234 235
procedure_declaration (199)
    on left: 237, on right: 43
procedure_body (200)
    on left: 238 239 240, on right: 237
procedure_heading (201)
    on left: 241 242, on right: 237 253
function_declaration (202)
    on left: 243, on right: 44
function_body (203)
    on left: 244 245 246, on right: 243
function_heading (204)
    on left: 247 248, on right: 243 254
formal_parameter_list (205)
    on left: 249, on right: 242 248
formal_parameter_list_iterable (206)
    on left: 250 251, on right: 249 250
formal_parameter_list_iterable_list (207)
    on left: 252 253 254, on right: 250 251
parameter_declaration (208)
    on left: 255 256, on right: 252
type_identifier (209)
    on left: 257, on right: 255 256
regular_unit (210)
    on left: 258, on right: 2
unit_heading (211)
    on left: 259, on right: 258
interface_part (212)
    on left: 260, on right: 258
uses_clause_empty (213)
    on left: 261 262, on right: 260
implementation_part (214)
    on left: 263, on right: 258


state 0

    0 $accept: . pascal $end

    "program"  shift, and go to state 1
    "unit"     shift, and go to state 2

    pascal           go to state 3
    program          go to state 4
    program_heading  go to state 5
    regular_unit     go to state 6
    unit_heading     go to state 7


state 1

    5 program_heading: "program" . IDENTIFIER
    6                | "program" . IDENTIFIER '(' program_parameters ')'

    IDENTIFIER  shift, and go to state 8


state 2

  259 unit_heading: "unit" . IDENTIFIER

    IDENTIFIER  shift, and go to state 9


state 3

    0 $accept: pascal . $end

    $end  shift, and go to state 10


state 4

    1 pascal: program .

    $default  reduce using rule 1 (pascal)


state 5

    3 program: program_heading . ';' block
    4        | program_heading . ';' uses_clause ';' block

    ';'  shift, and go to state 11


state 6

    2 pascal: regular_unit .

    $default  reduce using rule 2 (pascal)


state 7

  258 regular_unit: unit_heading . ';' interface_part implementation_part "end" '.'

    ';'  shift, and go to state 12


state 8

    5 program_heading: "program" IDENTIFIER .
    6                | "program" IDENTIFIER . '(' program_parameters ')'

    '('  shift, and go to state 13

    $default  reduce using rule 5 (program_heading)


state 9

  259 unit_heading: "unit" IDENTIFIER .

    $default  reduce using rule 259 (unit_heading)


state 10

    0 $accept: pascal $end .

    $default  accept


state 11

    3 program: program_heading ';' . block
    4        | program_heading ';' . uses_clause ';' block

    "uses"  shift, and go to state 14

    $default  reduce using rule 10 (block)

    uses_clause  go to state 15
    block        go to state 16


state 12

  258 regular_unit: unit_heading ';' . interface_part implementation_part "end" '.'

    "interface"  shift, and go to state 17

    interface_part  go to state 18


state 13

    6 program_heading: "program" IDENTIFIER '(' . program_parameters ')'

    IDENTIFIER  shift, and go to state 19

    program_parameters  go to state 20
    identifier_list     go to state 21


state 14

    8 uses_clause: "uses" . identifier_list

    IDENTIFIER  shift, and go to state 19

    identifier_list  go to state 22


state 15

    4 program: program_heading ';' uses_clause . ';' block

    ';'  shift, and go to state 23


state 16

    3 program: program_heading ';' block .
    9 block: block . label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part

    "label"  shift, and go to state 24

    $end      reduce using rule 3 (program)
    $end      [reduce using rule 12 (label_declaration_part)]
    "label"   [reduce using rule 12 (label_declaration_part)]
    $default  reduce using rule 12 (label_declaration_part)

    label_declaration_part  go to state 25


state 17

  260 interface_part: "interface" . uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "uses"  shift, and go to state 14

    $default  reduce using rule 262 (uses_clause_empty)

    uses_clause        go to state 26
    uses_clause_empty  go to state 27


state 18

  258 regular_unit: unit_heading ';' interface_part . implementation_part "end" '.'

    "implementation"  shift, and go to state 28

    implementation_part  go to state 29


state 19

   50 identifier_list: IDENTIFIER .

    $default  reduce using rule 50 (identifier_list)


state 20

    6 program_heading: "program" IDENTIFIER '(' program_parameters . ')'

    ')'  shift, and go to state 30


state 21

    7 program_parameters: identifier_list .
   49 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 31

    $default  reduce using rule 7 (program_parameters)


state 22

    8 uses_clause: "uses" identifier_list .
   49 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 31

    $default  reduce using rule 8 (uses_clause)


state 23

    4 program: program_heading ';' uses_clause ';' . block

    $default  reduce using rule 10 (block)

    block  go to state 32


state 24

   11 label_declaration_part: "label" . label_list ';'

    DECIMAL_INT  shift, and go to state 33

    label_list  go to state 34
    label       go to state 35


state 25

    9 block: block label_declaration_part . constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part

    "const"  shift, and go to state 36

    "const"   [reduce using rule 18 (constant_declaration_part)]
    $default  reduce using rule 18 (constant_declaration_part)

    constant_declaration_part  go to state 37


state 26

  261 uses_clause_empty: uses_clause .

    $default  reduce using rule 261 (uses_clause_empty)


state 27

  260 interface_part: "interface" uses_clause_empty . constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "const"  shift, and go to state 36

    $default  reduce using rule 18 (constant_declaration_part)

    constant_declaration_part  go to state 38


state 28

  263 implementation_part: "implementation" . constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "const"  shift, and go to state 36

    $default  reduce using rule 18 (constant_declaration_part)

    constant_declaration_part  go to state 39


state 29

  258 regular_unit: unit_heading ';' interface_part implementation_part . "end" '.'

    "end"  shift, and go to state 40


state 30

    6 program_heading: "program" IDENTIFIER '(' program_parameters ')' .

    $default  reduce using rule 6 (program_heading)


state 31

   49 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 41


state 32

    4 program: program_heading ';' uses_clause ';' block .
    9 block: block . label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part

    "label"  shift, and go to state 24

    $end      reduce using rule 4 (program)
    $end      [reduce using rule 12 (label_declaration_part)]
    "label"   [reduce using rule 12 (label_declaration_part)]
    $default  reduce using rule 12 (label_declaration_part)

    label_declaration_part  go to state 25


state 33

   16 label: DECIMAL_INT . $@1

    $default  reduce using rule 15 ($@1)

    $@1  go to state 42


state 34

   11 label_declaration_part: "label" label_list . ';'
   13 label_list: label_list . ',' label

    ';'  shift, and go to state 43
    ','  shift, and go to state 44


state 35

   14 label_list: label .

    $default  reduce using rule 14 (label_list)


state 36

   17 constant_declaration_part: "const" . constant_declaration_list

    IDENTIFIER  shift, and go to state 45

    constant_declaration_list  go to state 46
    constant_declaration       go to state 47


state 37

    9 block: block label_declaration_part constant_declaration_part . type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part

    "type"  shift, and go to state 48

    "type"    [reduce using rule 30 (type_declaration_part)]
    $default  reduce using rule 30 (type_declaration_part)

    type_declaration_part  go to state 49


state 38

  260 interface_part: "interface" uses_clause_empty constant_declaration_part . type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "type"  shift, and go to state 48

    $default  reduce using rule 30 (type_declaration_part)

    type_declaration_part  go to state 50


state 39

  263 implementation_part: "implementation" constant_declaration_part . type_declaration_part variable_declaration_part procedure_and_function_declaration_part

    "type"  shift, and go to state 48

    $default  reduce using rule 30 (type_declaration_part)

    type_declaration_part  go to state 51


state 40

  258 regular_unit: unit_heading ';' interface_part implementation_part "end" . '.'

    '.'  shift, and go to state 52


state 41

   49 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 49 (identifier_list)


state 42

   16 label: DECIMAL_INT $@1 .

    $default  reduce using rule 16 (label)


state 43

   11 label_declaration_part: "label" label_list ';' .

    $default  reduce using rule 11 (label_declaration_part)


state 44

   13 label_list: label_list ',' . label

    DECIMAL_INT  shift, and go to state 33

    label  go to state 53


state 45

   21 constant_declaration: IDENTIFIER . '=' constant ';'

    '='  shift, and go to state 54


state 46

   17 constant_declaration_part: "const" constant_declaration_list .
   19 constant_declaration_list: constant_declaration_list . constant_declaration

    IDENTIFIER  shift, and go to state 45

    $default  reduce using rule 17 (constant_declaration_part)

    constant_declaration  go to state 55


state 47

   20 constant_declaration_list: constant_declaration .

    $default  reduce using rule 20 (constant_declaration_list)


state 48

   29 type_declaration_part: "type" . type_declaration_list

    IDENTIFIER  shift, and go to state 56

    type_declaration_list  go to state 57
    type_declaration       go to state 58


state 49

    9 block: block label_declaration_part constant_declaration_part type_declaration_part . variable_declaration_part procedure_and_function_declaration_part statement_part

    "var"  shift, and go to state 59

    "var"     [reduce using rule 35 (variable_declaration_part)]
    $default  reduce using rule 35 (variable_declaration_part)

    variable_declaration_part  go to state 60


state 50

  260 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part . variable_declaration_part procedure_and_function_declaration_part

    "var"  shift, and go to state 59

    $default  reduce using rule 35 (variable_declaration_part)

    variable_declaration_part  go to state 61


state 51

  263 implementation_part: "implementation" constant_declaration_part type_declaration_part . variable_declaration_part procedure_and_function_declaration_part

    "var"  shift, and go to state 59

    $default  reduce using rule 35 (variable_declaration_part)

    variable_declaration_part  go to state 62


state 52

  258 regular_unit: unit_heading ';' interface_part implementation_part "end" '.' .

    $default  reduce using rule 258 (regular_unit)


state 53

   13 label_list: label_list ',' label .

    $default  reduce using rule 13 (label_list)


state 54

   21 constant_declaration: IDENTIFIER '=' . constant ';'

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 66
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70

    constant             go to state 71
    constant_identifier  go to state 72
    sign                 go to state 73
    unsigned_number      go to state 74
    signed_number        go to state 75


state 55

   19 constant_declaration_list: constant_declaration_list constant_declaration .

    $default  reduce using rule 19 (constant_declaration_list)


state 56

   33 type_declaration: IDENTIFIER . '=' type ';'

    '='  shift, and go to state 76


state 57

   29 type_declaration_part: "type" type_declaration_list .
   31 type_declaration_list: type_declaration_list . type_declaration

    IDENTIFIER  shift, and go to state 56

    $default  reduce using rule 29 (type_declaration_part)

    type_declaration  go to state 77


state 58

   32 type_declaration_list: type_declaration .

    $default  reduce using rule 32 (type_declaration_list)


state 59

   34 variable_declaration_part: "var" . variable_declaration_list

    IDENTIFIER  shift, and go to state 19

    variable_declaration_list  go to state 78
    variable_declaration       go to state 79
    identifier_list            go to state 80


state 60

    9 block: block label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part . procedure_and_function_declaration_part statement_part

    "function"   shift, and go to state 81
    "procedure"  shift, and go to state 82

    "function"   [reduce using rule 40 (procedure_and_function_declaration_part)]
    "procedure"  [reduce using rule 40 (procedure_and_function_declaration_part)]
    $default     reduce using rule 40 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 83
    procedure_and_function_declaration_list  go to state 84
    procedure_and_function_declaration       go to state 85
    procedure_declaration                    go to state 86
    procedure_heading                        go to state 87
    function_declaration                     go to state 88
    function_heading                         go to state 89


state 61

  260 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part . procedure_and_function_declaration_part

    "function"   shift, and go to state 81
    "procedure"  shift, and go to state 82

    $default  reduce using rule 40 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 90
    procedure_and_function_declaration_list  go to state 84
    procedure_and_function_declaration       go to state 85
    procedure_declaration                    go to state 86
    procedure_heading                        go to state 87
    function_declaration                     go to state 88
    function_heading                         go to state 89


state 62

  263 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part . procedure_and_function_declaration_part

    "function"   shift, and go to state 81
    "procedure"  shift, and go to state 82

    $default  reduce using rule 40 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 91
    procedure_and_function_declaration_list  go to state 84
    procedure_and_function_declaration       go to state 85
    procedure_declaration                    go to state 86
    procedure_heading                        go to state 87
    function_declaration                     go to state 88
    function_heading                         go to state 89


state 63

  134 unsigned_number: DECIMAL_INT .

    $default  reduce using rule 134 (unsigned_number)


state 64

  135 unsigned_number: HEXADECIMAL .

    $default  reduce using rule 135 (unsigned_number)


state 65

  136 unsigned_number: REAL_DECIMAL .

    $default  reduce using rule 136 (unsigned_number)


state 66

   28 constant_identifier: IDENTIFIER .

    $default  reduce using rule 28 (constant_identifier)


state 67

   26 constant: QUOTED_STRING .

    $default  reduce using rule 26 (constant)


state 68

   27 constant: QUOTED_CHAR .

    $default  reduce using rule 27 (constant)


state 69

   47 sign: '+' .

    $default  reduce using rule 47 (sign)


state 70

   48 sign: '-' .

    $default  reduce using rule 48 (sign)


state 71

   21 constant_declaration: IDENTIFIER '=' constant . ';'

    ';'  shift, and go to state 92


state 72

   23 constant: constant_identifier . $@2

    $default  reduce using rule 22 ($@2)

    $@2  go to state 93


state 73

   24 constant: sign . constant_identifier
  137 signed_number: sign . unsigned_number

    DECIMAL_INT   shift, and go to state 63
    HEXADECIMAL   shift, and go to state 64
    REAL_DECIMAL  shift, and go to state 65
    IDENTIFIER    shift, and go to state 66

    constant_identifier  go to state 94
    unsigned_number      go to state 95


state 74

  138 signed_number: unsigned_number .

    $default  reduce using rule 138 (signed_number)


state 75

   25 constant: signed_number .

    $default  reduce using rule 25 (constant)


state 76

   33 type_declaration: IDENTIFIER '=' . type ';'

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 96
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "real"         shift, and go to state 97
    "integer"      shift, and go to state 98
    "longint"      shift, and go to state 99
    "word"         shift, and go to state 100
    "char"         shift, and go to state 101
    "boolean"      shift, and go to state 102
    "string"       shift, and go to state 103
    "packed"       shift, and go to state 104
    "array"        shift, and go to state 105
    "record"       shift, and go to state 106
    "of"           shift, and go to state 107
    "set"          shift, and go to state 108
    "function"     shift, and go to state 109
    "file"         shift, and go to state 110
    "nil"          shift, and go to state 111
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 112
    '^'            shift, and go to state 113

    constant                 go to state 114
    constant_identifier      go to state 72
    sign                     go to state 73
    type                     go to state 115
    simple_type              go to state 116
    ordinal_type             go to state 117
    ordinal_type_identifier  go to state 118
    enumerated_type          go to state 119
    subrange_type            go to state 120
    real_type                go to state 121
    real_type_identifier     go to state 122
    string_type              go to state 123
    structured_type          go to state 124
    type_list                go to state 125
    array_type               go to state 126
    record_type              go to state 127
    set_type                 go to state 128
    file_type                go to state 129
    pointer_type             go to state 130
    pointer_type_identifier  go to state 131
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 132
    function_identifier      go to state 133


state 77

   31 type_declaration_list: type_declaration_list type_declaration .

    $default  reduce using rule 31 (type_declaration_list)


state 78

   34 variable_declaration_part: "var" variable_declaration_list .
   36 variable_declaration_list: variable_declaration_list . variable_declaration

    IDENTIFIER  shift, and go to state 19

    $default  reduce using rule 34 (variable_declaration_part)

    variable_declaration  go to state 134
    identifier_list       go to state 80


state 79

   37 variable_declaration_list: variable_declaration .

    $default  reduce using rule 37 (variable_declaration_list)


state 80

   38 variable_declaration: identifier_list . ':' type ';'
   49 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 31
    ':'  shift, and go to state 135


state 81

  247 function_heading: "function" . IDENTIFIER ':' type
  248                 | "function" . IDENTIFIER formal_parameter_list ':' type

    IDENTIFIER  shift, and go to state 136


state 82

  241 procedure_heading: "procedure" . IDENTIFIER
  242                  | "procedure" . IDENTIFIER formal_parameter_list

    IDENTIFIER  shift, and go to state 137


state 83

    9 block: block label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part . statement_part

    "begin"  shift, and go to state 138

    "begin"   [reduce using rule 46 (statement_part)]
    $default  reduce using rule 46 (statement_part)

    statement_part      go to state 139
    compound_statement  go to state 140


state 84

   39 procedure_and_function_declaration_part: procedure_and_function_declaration_list .
   41 procedure_and_function_declaration_list: procedure_and_function_declaration_list . procedure_and_function_declaration

    "function"   shift, and go to state 81
    "procedure"  shift, and go to state 82

    "function"   [reduce using rule 39 (procedure_and_function_declaration_part)]
    "procedure"  [reduce using rule 39 (procedure_and_function_declaration_part)]
    $default     reduce using rule 39 (procedure_and_function_declaration_part)

    procedure_and_function_declaration  go to state 141
    procedure_declaration               go to state 86
    procedure_heading                   go to state 87
    function_declaration                go to state 88
    function_heading                    go to state 89


state 85

   42 procedure_and_function_declaration_list: procedure_and_function_declaration .

    $default  reduce using rule 42 (procedure_and_function_declaration_list)


state 86

   43 procedure_and_function_declaration: procedure_declaration .

    $default  reduce using rule 43 (procedure_and_function_declaration)


state 87

  237 procedure_declaration: procedure_heading . ';' procedure_body ';'

    ';'  shift, and go to state 142


state 88

   44 procedure_and_function_declaration: function_declaration .

    $default  reduce using rule 44 (procedure_and_function_declaration)


state 89

  243 function_declaration: function_heading . ';' function_body ';'

    ';'  shift, and go to state 143


state 90

  260 interface_part: "interface" uses_clause_empty constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part .

    $default  reduce using rule 260 (interface_part)


state 91

  263 implementation_part: "implementation" constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part .

    $default  reduce using rule 263 (implementation_part)


state 92

   21 constant_declaration: IDENTIFIER '=' constant ';' .

    $default  reduce using rule 21 (constant_declaration)


state 93

   23 constant: constant_identifier $@2 .

    $default  reduce using rule 23 (constant)


state 94

   24 constant: sign constant_identifier .

    $default  reduce using rule 24 (constant)


state 95

  137 signed_number: sign unsigned_number .

    $default  reduce using rule 137 (signed_number)


state 96

   28 constant_identifier: IDENTIFIER .
   54 type: IDENTIFIER .
  173 function_identifier: IDENTIFIER .

    ".."      reduce using rule 28 (constant_identifier)
    '('       reduce using rule 173 (function_identifier)
    $default  reduce using rule 54 (type)


state 97

   72 real_type_identifier: "real" .

    $default  reduce using rule 72 (real_type_identifier)


state 98

   61 ordinal_type_identifier: "integer" .

    $default  reduce using rule 61 (ordinal_type_identifier)


state 99

   63 ordinal_type_identifier: "longint" .

    $default  reduce using rule 63 (ordinal_type_identifier)


state 100

   62 ordinal_type_identifier: "word" .

    $default  reduce using rule 62 (ordinal_type_identifier)


state 101

   64 ordinal_type_identifier: "char" .

    $default  reduce using rule 64 (ordinal_type_identifier)


state 102

   65 ordinal_type_identifier: "boolean" .

    $default  reduce using rule 65 (ordinal_type_identifier)


state 103

   73 string_type: "string" . '[' DECIMAL_INT ']'

    '['  shift, and go to state 144


state 104

   74 structured_type: "packed" . type_list

    "array"   shift, and go to state 105
    "record"  shift, and go to state 106
    "of"      shift, and go to state 107
    "set"     shift, and go to state 108
    "file"    shift, and go to state 110

    type_list    go to state 145
    array_type   go to state 126
    record_type  go to state 127
    set_type     go to state 128
    file_type    go to state 129


state 105

   80 array_type: "array" . '[' index_type_list ']' "of" type

    '['  shift, and go to state 146


state 106

   83 record_type: "record" . "end"
   84            | "record" . field_list "end"

    IDENTIFIER  shift, and go to state 19
    "end"       shift, and go to state 147
    "case"      shift, and go to state 148

    identifier_list    go to state 149
    field_list         go to state 150
    fixed_part         go to state 151
    field_declaration  go to state 152
    variant_part       go to state 153


state 107

  105 file_type: "of" . type

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 96
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "real"         shift, and go to state 97
    "integer"      shift, and go to state 98
    "longint"      shift, and go to state 99
    "word"         shift, and go to state 100
    "char"         shift, and go to state 101
    "boolean"      shift, and go to state 102
    "string"       shift, and go to state 103
    "packed"       shift, and go to state 104
    "array"        shift, and go to state 105
    "record"       shift, and go to state 106
    "of"           shift, and go to state 107
    "set"          shift, and go to state 108
    "function"     shift, and go to state 109
    "file"         shift, and go to state 110
    "nil"          shift, and go to state 111
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 112
    '^'            shift, and go to state 113

    constant                 go to state 114
    constant_identifier      go to state 72
    sign                     go to state 73
    type                     go to state 154
    simple_type              go to state 116
    ordinal_type             go to state 117
    ordinal_type_identifier  go to state 118
    enumerated_type          go to state 119
    subrange_type            go to state 120
    real_type                go to state 121
    real_type_identifier     go to state 122
    string_type              go to state 123
    structured_type          go to state 124
    type_list                go to state 125
    array_type               go to state 126
    record_type              go to state 127
    set_type                 go to state 128
    file_type                go to state 129
    pointer_type             go to state 130
    pointer_type_identifier  go to state 131
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 132
    function_identifier      go to state 133


state 108

  103 set_type: "set" . "of" ordinal_type

    "of"  shift, and go to state 155


state 109

  172 function_identifier: "function" .

    $default  reduce using rule 172 (function_identifier)


state 110

  104 file_type: "file" .

    $default  reduce using rule 104 (file_type)


state 111

  108 pointer_type_identifier: "nil" .

    $default  reduce using rule 108 (pointer_type_identifier)


state 112

   69 enumerated_type: '(' . identifier_list ')'

    IDENTIFIER  shift, and go to state 19

    identifier_list  go to state 156


state 113

  106 pointer_type: '^' . base_type

    IDENTIFIER  shift, and go to state 157
    "integer"   shift, and go to state 158
    "longint"   shift, and go to state 159
    "char"      shift, and go to state 160
    "boolean"   shift, and go to state 161
    "string"    shift, and go to state 162
    "array"     shift, and go to state 163
    "record"    shift, and go to state 164
    "function"  shift, and go to state 165
    "file"      shift, and go to state 166

    base_type  go to state 167


state 114

   70 subrange_type: constant . ".." constant

    ".."  shift, and go to state 168


state 115

   33 type_declaration: IDENTIFIER '=' type . ';'

    ';'  shift, and go to state 169


state 116

   51 type: simple_type .

    $default  reduce using rule 51 (type)


state 117

   55 simple_type: ordinal_type .

    $default  reduce using rule 55 (simple_type)


state 118

   60 ordinal_type: ordinal_type_identifier .

    $default  reduce using rule 60 (ordinal_type)


state 119

   59 ordinal_type: enumerated_type .

    $default  reduce using rule 59 (ordinal_type)


state 120

   58 ordinal_type: subrange_type .

    $default  reduce using rule 58 (ordinal_type)


state 121

   56 simple_type: real_type .

    $default  reduce using rule 56 (simple_type)


state 122

   71 real_type: real_type_identifier .

    $default  reduce using rule 71 (real_type)


state 123

   57 simple_type: string_type .

    $default  reduce using rule 57 (simple_type)


state 124

   52 type: structured_type .

    $default  reduce using rule 52 (type)


state 125

   75 structured_type: type_list .

    $default  reduce using rule 75 (structured_type)


state 126

   76 type_list: array_type .

    $default  reduce using rule 76 (type_list)


state 127

   79 type_list: record_type .

    $default  reduce using rule 79 (type_list)


state 128

   77 type_list: set_type .

    $default  reduce using rule 77 (type_list)


state 129

   78 type_list: file_type .

    $default  reduce using rule 78 (type_list)


state 130

   53 type: pointer_type .

    $default  reduce using rule 53 (type)


state 131

  107 pointer_type: pointer_type_identifier .

    $default  reduce using rule 107 (pointer_type)


state 132

   66 ordinal_type_identifier: function_call .

    $default  reduce using rule 66 (ordinal_type_identifier)


state 133

  171 function_call: function_identifier . actual_parameter_list

    '('  shift, and go to state 170

    actual_parameter_list  go to state 171


state 134

   36 variable_declaration_list: variable_declaration_list variable_declaration .

    $default  reduce using rule 36 (variable_declaration_list)


state 135

   38 variable_declaration: identifier_list ':' . type ';'

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 96
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "real"         shift, and go to state 97
    "integer"      shift, and go to state 98
    "longint"      shift, and go to state 99
    "word"         shift, and go to state 100
    "char"         shift, and go to state 101
    "boolean"      shift, and go to state 102
    "string"       shift, and go to state 103
    "packed"       shift, and go to state 104
    "array"        shift, and go to state 105
    "record"       shift, and go to state 106
    "of"           shift, and go to state 107
    "set"          shift, and go to state 108
    "function"     shift, and go to state 109
    "file"         shift, and go to state 110
    "nil"          shift, and go to state 111
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 112
    '^'            shift, and go to state 113

    constant                 go to state 114
    constant_identifier      go to state 72
    sign                     go to state 73
    type                     go to state 172
    simple_type              go to state 116
    ordinal_type             go to state 117
    ordinal_type_identifier  go to state 118
    enumerated_type          go to state 119
    subrange_type            go to state 120
    real_type                go to state 121
    real_type_identifier     go to state 122
    string_type              go to state 123
    structured_type          go to state 124
    type_list                go to state 125
    array_type               go to state 126
    record_type              go to state 127
    set_type                 go to state 128
    file_type                go to state 129
    pointer_type             go to state 130
    pointer_type_identifier  go to state 131
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 132
    function_identifier      go to state 133


state 136

  247 function_heading: "function" IDENTIFIER . ':' type
  248                 | "function" IDENTIFIER . formal_parameter_list ':' type

    '('  shift, and go to state 173
    ':'  shift, and go to state 174

    formal_parameter_list  go to state 175


state 137

  241 procedure_heading: "procedure" IDENTIFIER .
  242                  | "procedure" IDENTIFIER . formal_parameter_list

    '('  shift, and go to state 173

    $default  reduce using rule 241 (procedure_heading)

    formal_parameter_list  go to state 176


state 138

  209 compound_statement: "begin" . statement_list "end"

    DECIMAL_INT  shift, and go to state 33
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 138
    "case"       shift, and go to state 178
    "function"   shift, and go to state 109
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 189 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 194
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    statement_list         go to state 201
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 139

    9 block: block label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part .

    $default  reduce using rule 9 (block)


state 140

   45 statement_part: compound_statement .

    $default  reduce using rule 45 (statement_part)


state 141

   41 procedure_and_function_declaration_list: procedure_and_function_declaration_list procedure_and_function_declaration .

    $default  reduce using rule 41 (procedure_and_function_declaration_list)


state 142

  237 procedure_declaration: procedure_heading ';' . procedure_body ';'

    "forward"   shift, and go to state 210
    "external"  shift, and go to state 211

    $default  reduce using rule 10 (block)

    block           go to state 212
    procedure_body  go to state 213


state 143

  243 function_declaration: function_heading ';' . function_body ';'

    "forward"   shift, and go to state 214
    "external"  shift, and go to state 215

    $default  reduce using rule 10 (block)

    block          go to state 216
    function_body  go to state 217


state 144

   73 string_type: "string" '[' . DECIMAL_INT ']'

    DECIMAL_INT  shift, and go to state 218


state 145

   74 structured_type: "packed" type_list .

    $default  reduce using rule 74 (structured_type)


state 146

   80 array_type: "array" '[' . index_type_list ']' "of" type

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "integer"      shift, and go to state 98
    "longint"      shift, and go to state 99
    "word"         shift, and go to state 100
    "char"         shift, and go to state 101
    "boolean"      shift, and go to state 102
    "function"     shift, and go to state 109
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 112

    constant                 go to state 114
    constant_identifier      go to state 72
    sign                     go to state 73
    ordinal_type             go to state 220
    ordinal_type_identifier  go to state 118
    enumerated_type          go to state 119
    subrange_type            go to state 120
    index_type_list          go to state 221
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 132
    function_identifier      go to state 133


state 147

   83 record_type: "record" "end" .

    $default  reduce using rule 83 (record_type)


state 148

   94 variant_part: "case" . tag_field_type "of" variant_list
   95             | "case" . IDENTIFIER ':' tag_field_type "of" variant_list

    IDENTIFIER  shift, and go to state 222

    tag_field_type  go to state 223


state 149

   49 identifier_list: identifier_list . ',' IDENTIFIER
   93 field_declaration: identifier_list . ':' type

    ','  shift, and go to state 31
    ':'  shift, and go to state 224


state 150

   84 record_type: "record" field_list . "end"

    "end"  shift, and go to state 225


state 151

   85 field_list: fixed_part .
   86           | fixed_part . ';'
   87           | fixed_part . ';' variant_part
   88           | fixed_part . ';' variant_part ';'
   91 fixed_part: fixed_part . ';' field_declaration

    ';'  shift, and go to state 226

    $default  reduce using rule 85 (field_list)


state 152

   92 fixed_part: field_declaration .

    $default  reduce using rule 92 (fixed_part)


state 153

   89 field_list: variant_part .
   90           | variant_part . ';'

    ';'  shift, and go to state 227

    $default  reduce using rule 89 (field_list)


state 154

  105 file_type: "of" type .

    $default  reduce using rule 105 (file_type)


state 155

  103 set_type: "set" "of" . ordinal_type

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "integer"      shift, and go to state 98
    "longint"      shift, and go to state 99
    "word"         shift, and go to state 100
    "char"         shift, and go to state 101
    "boolean"      shift, and go to state 102
    "function"     shift, and go to state 109
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 112

    constant                 go to state 114
    constant_identifier      go to state 72
    sign                     go to state 73
    ordinal_type             go to state 228
    ordinal_type_identifier  go to state 118
    enumerated_type          go to state 119
    subrange_type            go to state 120
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 132
    function_identifier      go to state 133


state 156

   49 identifier_list: identifier_list . ',' IDENTIFIER
   69 enumerated_type: '(' identifier_list . ')'

    ')'  shift, and go to state 229
    ','  shift, and go to state 31


state 157

  117 base_type: IDENTIFIER .

    $default  reduce using rule 117 (base_type)


state 158

  109 base_type: "integer" .

    $default  reduce using rule 109 (base_type)


state 159

  110 base_type: "longint" .

    $default  reduce using rule 110 (base_type)


state 160

  111 base_type: "char" .

    $default  reduce using rule 111 (base_type)


state 161

  112 base_type: "boolean" .

    $default  reduce using rule 112 (base_type)


state 162

  113 base_type: "string" .

    $default  reduce using rule 113 (base_type)


state 163

  116 base_type: "array" .

    $default  reduce using rule 116 (base_type)


state 164

  114 base_type: "record" .

    $default  reduce using rule 114 (base_type)


state 165

  118 base_type: "function" .

    $default  reduce using rule 118 (base_type)


state 166

  115 base_type: "file" .

    $default  reduce using rule 115 (base_type)


state 167

  106 pointer_type: '^' base_type .

    $default  reduce using rule 106 (pointer_type)


state 168

   70 subrange_type: constant ".." . constant

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 66
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70

    constant             go to state 230
    constant_identifier  go to state 72
    sign                 go to state 73
    unsigned_number      go to state 74
    signed_number        go to state 75


state 169

   33 type_declaration: IDENTIFIER '=' type ';' .

    $default  reduce using rule 33 (type_declaration)


state 170

  174 actual_parameter_list: '(' . actual_parameter_iterable ')'

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "read"         shift, and go to state 185
    "readln"       shift, and go to state 186
    "write"        shift, and go to state 187
    "writeln"      shift, and go to state 188
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 250
    function_call                             go to state 251
    function_identifier                       go to state 133
    actual_parameter_iterable                 go to state 252
    actual_parameter                          go to state 253
    procedure_identifier                      go to state 254
    set_constructor                           go to state 255


state 171

  171 function_call: function_identifier actual_parameter_list .

    $default  reduce using rule 171 (function_call)


state 172

   38 variable_declaration: identifier_list ':' type . ';'

    ';'  shift, and go to state 256


state 173

  249 formal_parameter_list: '(' . formal_parameter_list_iterable ')'

    IDENTIFIER   shift, and go to state 19
    "var"        shift, and go to state 257
    "function"   shift, and go to state 81
    "procedure"  shift, and go to state 82

    identifier_list                      go to state 258
    procedure_heading                    go to state 259
    function_heading                     go to state 260
    formal_parameter_list_iterable       go to state 261
    formal_parameter_list_iterable_list  go to state 262
    parameter_declaration                go to state 263


state 174

  247 function_heading: "function" IDENTIFIER ':' . type

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 96
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "real"         shift, and go to state 97
    "integer"      shift, and go to state 98
    "longint"      shift, and go to state 99
    "word"         shift, and go to state 100
    "char"         shift, and go to state 101
    "boolean"      shift, and go to state 102
    "string"       shift, and go to state 103
    "packed"       shift, and go to state 104
    "array"        shift, and go to state 105
    "record"       shift, and go to state 106
    "of"           shift, and go to state 107
    "set"          shift, and go to state 108
    "function"     shift, and go to state 109
    "file"         shift, and go to state 110
    "nil"          shift, and go to state 111
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 112
    '^'            shift, and go to state 113

    constant                 go to state 114
    constant_identifier      go to state 72
    sign                     go to state 73
    type                     go to state 264
    simple_type              go to state 116
    ordinal_type             go to state 117
    ordinal_type_identifier  go to state 118
    enumerated_type          go to state 119
    subrange_type            go to state 120
    real_type                go to state 121
    real_type_identifier     go to state 122
    string_type              go to state 123
    structured_type          go to state 124
    type_list                go to state 125
    array_type               go to state 126
    record_type              go to state 127
    set_type                 go to state 128
    file_type                go to state 129
    pointer_type             go to state 130
    pointer_type_identifier  go to state 131
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 132
    function_identifier      go to state 133


state 175

  248 function_heading: "function" IDENTIFIER formal_parameter_list . ':' type

    ':'  shift, and go to state 265


state 176

  242 procedure_heading: "procedure" IDENTIFIER formal_parameter_list .

    $default  reduce using rule 242 (procedure_heading)


state 177

  120 variable_identifier: IDENTIFIER .
  173 function_identifier: IDENTIFIER .
  195 statement: IDENTIFIER .
  203 procedure_statement: IDENTIFIER . actual_parameter_list

    '('  shift, and go to state 170

    ":="      reduce using rule 173 (function_identifier)
    '['       reduce using rule 120 (variable_identifier)
    '^'       reduce using rule 120 (variable_identifier)
    '.'       reduce using rule 120 (variable_identifier)
    $default  reduce using rule 195 (statement)

    actual_parameter_list  go to state 266


state 178

  216 case_statement: "case" . expression "of" case_list "end"
  217               | "case" . expression "of" case_list otherwise_clause "end"
  218               | "case" . expression "of" case_list otherwise_clause ';' "end"
  219               | "case" . expression "of" case_list ';' "end"

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 267
    function_call                             go to state 251
    function_identifier                       go to state 133
    set_constructor                           go to state 255


state 179

  204 goto_statement: "goto" . label

    DECIMAL_INT  shift, and go to state 33

    label  go to state 268


state 180

  214 if_statement: "if" . expression "then" statement
  215             | "if" . expression "then" statement "else" statement

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 269
    function_call                             go to state 251
    function_identifier                       go to state 133
    set_constructor                           go to state 255


state 181

  227 repeat_statement: "repeat" . statement_list "until" expression

    DECIMAL_INT  shift, and go to state 33
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 138
    "case"       shift, and go to state 178
    "function"   shift, and go to state 109
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 189 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 194
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    statement_list         go to state 270
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 182

  228 while_statement: "while" . expression "do" statement

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 271
    function_call                             go to state 251
    function_identifier                       go to state 133
    set_constructor                           go to state 255


state 183

  229 for_statement: "for" . control_variable ":=" initial_value "to" final_value "do" statement
  230              | "for" . control_variable ":=" initial_value "downto" final_value "do" statement

    IDENTIFIER  shift, and go to state 272

    control_variable  go to state 273


state 184

  234 with_statement: "with" . record_variable_reference_list "do" statement

    IDENTIFIER  shift, and go to state 274

    variable_reference              go to state 275
    variable_identifier             go to state 191
    record_variable_reference_list  go to state 276


state 185

  181 procedure_identifier: "read" .

    $default  reduce using rule 181 (procedure_identifier)


state 186

  182 procedure_identifier: "readln" .

    $default  reduce using rule 182 (procedure_identifier)


state 187

  179 procedure_identifier: "write" .

    $default  reduce using rule 179 (procedure_identifier)


state 188

  180 procedure_identifier: "writeln" .

    $default  reduce using rule 180 (procedure_identifier)


state 189

  190 statement: label . ':'
  191          | label . ':' simple_statement
  192          | label . ':' structured_statement

    ':'  shift, and go to state 277


state 190

  199 assignment_statement: variable_reference . ":=" expression

    ":="  shift, and go to state 278


state 191

  119 variable_reference: variable_identifier . qualifier_list

    '['  shift, and go to state 279
    '^'  shift, and go to state 280
    '.'  shift, and go to state 281

    qualifier_list    go to state 282
    qualifier         go to state 283
    index             go to state 284
    field_designator  go to state 285


state 192

  200 assignment_statement: function_identifier . ":=" expression

    ":="  shift, and go to state 286


state 193

  201 procedure_statement: procedure_identifier .
  202                    | procedure_identifier . actual_parameter_list

    '('  shift, and go to state 170

    $default  reduce using rule 201 (procedure_statement)

    actual_parameter_list  go to state 287


state 194

  211 statement_list: statement .

    $default  reduce using rule 211 (statement_list)


state 195

  193 statement: simple_statement .

    $default  reduce using rule 193 (statement)


state 196

  196 simple_statement: assignment_statement .

    $default  reduce using rule 196 (simple_statement)


state 197

  197 simple_statement: procedure_statement .

    $default  reduce using rule 197 (simple_statement)


state 198

  198 simple_statement: goto_statement .

    $default  reduce using rule 198 (simple_statement)


state 199

  194 statement: structured_statement .

    $default  reduce using rule 194 (statement)


state 200

  205 structured_statement: compound_statement .

    $default  reduce using rule 205 (structured_statement)


state 201

  209 compound_statement: "begin" statement_list . "end"
  210 statement_list: statement_list . ';' statement

    "end"  shift, and go to state 288
    ';'    shift, and go to state 289


state 202

  206 structured_statement: conditional_statement .

    $default  reduce using rule 206 (structured_statement)


state 203

  212 conditional_statement: if_statement .

    $default  reduce using rule 212 (conditional_statement)


state 204

  213 conditional_statement: case_statement .

    $default  reduce using rule 213 (conditional_statement)


state 205

  207 structured_statement: repetitive_statement .

    $default  reduce using rule 207 (structured_statement)


state 206

  224 repetitive_statement: repeat_statement .

    $default  reduce using rule 224 (repetitive_statement)


state 207

  225 repetitive_statement: while_statement .

    $default  reduce using rule 225 (repetitive_statement)


state 208

  226 repetitive_statement: for_statement .

    $default  reduce using rule 226 (repetitive_statement)


state 209

  208 structured_statement: with_statement .

    $default  reduce using rule 208 (structured_statement)


state 210

  239 procedure_body: "forward" .

    $default  reduce using rule 239 (procedure_body)


state 211

  240 procedure_body: "external" .

    $default  reduce using rule 240 (procedure_body)


state 212

    9 block: block . label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part
  238 procedure_body: block .

    "label"  shift, and go to state 24

    "label"   [reduce using rule 12 (label_declaration_part)]
    ';'       reduce using rule 12 (label_declaration_part)
    ';'       [reduce using rule 238 (procedure_body)]
    $default  reduce using rule 12 (label_declaration_part)

    label_declaration_part  go to state 25


state 213

  237 procedure_declaration: procedure_heading ';' procedure_body . ';'

    ';'  shift, and go to state 290


state 214

  245 function_body: "forward" .

    $default  reduce using rule 245 (function_body)


state 215

  246 function_body: "external" .

    $default  reduce using rule 246 (function_body)


state 216

    9 block: block . label_declaration_part constant_declaration_part type_declaration_part variable_declaration_part procedure_and_function_declaration_part statement_part
  244 function_body: block .

    "label"  shift, and go to state 24

    "label"   [reduce using rule 12 (label_declaration_part)]
    ';'       reduce using rule 12 (label_declaration_part)
    ';'       [reduce using rule 244 (function_body)]
    $default  reduce using rule 12 (label_declaration_part)

    label_declaration_part  go to state 25


state 217

  243 function_declaration: function_heading ';' function_body . ';'

    ';'  shift, and go to state 291


state 218

   73 string_type: "string" '[' DECIMAL_INT . ']'

    ']'  shift, and go to state 292


state 219

   28 constant_identifier: IDENTIFIER .
  173 function_identifier: IDENTIFIER .

    '('       reduce using rule 173 (function_identifier)
    $default  reduce using rule 28 (constant_identifier)


state 220

   82 index_type_list: ordinal_type .

    $default  reduce using rule 82 (index_type_list)


state 221

   80 array_type: "array" '[' index_type_list . ']' "of" type
   81 index_type_list: index_type_list . ',' ordinal_type

    ','  shift, and go to state 293
    ']'  shift, and go to state 294


state 222

   95 variant_part: "case" IDENTIFIER . ':' tag_field_type "of" variant_list
  102 tag_field_type: IDENTIFIER .

    ':'  shift, and go to state 295

    $default  reduce using rule 102 (tag_field_type)


state 223

   94 variant_part: "case" tag_field_type . "of" variant_list

    "of"  shift, and go to state 296


state 224

   93 field_declaration: identifier_list ':' . type

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 96
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "real"         shift, and go to state 97
    "integer"      shift, and go to state 98
    "longint"      shift, and go to state 99
    "word"         shift, and go to state 100
    "char"         shift, and go to state 101
    "boolean"      shift, and go to state 102
    "string"       shift, and go to state 103
    "packed"       shift, and go to state 104
    "array"        shift, and go to state 105
    "record"       shift, and go to state 106
    "of"           shift, and go to state 107
    "set"          shift, and go to state 108
    "function"     shift, and go to state 109
    "file"         shift, and go to state 110
    "nil"          shift, and go to state 111
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 112
    '^'            shift, and go to state 113

    constant                 go to state 114
    constant_identifier      go to state 72
    sign                     go to state 73
    type                     go to state 297
    simple_type              go to state 116
    ordinal_type             go to state 117
    ordinal_type_identifier  go to state 118
    enumerated_type          go to state 119
    subrange_type            go to state 120
    real_type                go to state 121
    real_type_identifier     go to state 122
    string_type              go to state 123
    structured_type          go to state 124
    type_list                go to state 125
    array_type               go to state 126
    record_type              go to state 127
    set_type                 go to state 128
    file_type                go to state 129
    pointer_type             go to state 130
    pointer_type_identifier  go to state 131
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 132
    function_identifier      go to state 133


state 225

   84 record_type: "record" field_list "end" .

    $default  reduce using rule 84 (record_type)


state 226

   86 field_list: fixed_part ';' .
   87           | fixed_part ';' . variant_part
   88           | fixed_part ';' . variant_part ';'
   91 fixed_part: fixed_part ';' . field_declaration

    IDENTIFIER  shift, and go to state 19
    "case"      shift, and go to state 148

    $default  reduce using rule 86 (field_list)

    identifier_list    go to state 149
    field_declaration  go to state 298
    variant_part       go to state 299


state 227

   90 field_list: variant_part ';' .

    $default  reduce using rule 90 (field_list)


state 228

  103 set_type: "set" "of" ordinal_type .

    $default  reduce using rule 103 (set_type)


state 229

   69 enumerated_type: '(' identifier_list ')' .

    $default  reduce using rule 69 (enumerated_type)


state 230

   70 subrange_type: constant ".." constant .

    $default  reduce using rule 70 (subrange_type)


state 231

  120 variable_identifier: IDENTIFIER .
  146 factor: IDENTIFIER .
  173 function_identifier: IDENTIFIER .

    '('       reduce using rule 173 (function_identifier)
    '['       reduce using rule 120 (variable_identifier)
    '^'       reduce using rule 120 (variable_identifier)
    '.'       reduce using rule 120 (variable_identifier)
    $default  reduce using rule 146 (factor)


state 232

  131 unsigned_constant: QUOTED_STRING .

    $default  reduce using rule 131 (unsigned_constant)


state 233

  132 unsigned_constant: QUOTED_CHAR .

    $default  reduce using rule 132 (unsigned_constant)


state 234

   67 type_boolean: "true" .

    $default  reduce using rule 67 (type_boolean)


state 235

   68 type_boolean: "false" .

    $default  reduce using rule 68 (type_boolean)


state 236

  133 unsigned_constant: "nil" .

    $default  reduce using rule 133 (unsigned_constant)


state 237

  145 factor: "not" . factor

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    type_boolean         go to state 242
    variable_reference   go to state 243
    variable_identifier  go to state 191
    unsigned_constant    go to state 244
    unsigned_number      go to state 245
    factor               go to state 300
    function_call        go to state 251
    function_identifier  go to state 133
    set_constructor      go to state 255


state 238

  140 factor: '@' . variable_reference

    IDENTIFIER  shift, and go to state 274

    variable_reference   go to state 301
    variable_identifier  go to state 191


state 239

  144 factor: '(' . expression ')'

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 302
    function_call                             go to state 251
    function_identifier                       go to state 133
    set_constructor                           go to state 255


state 240

  183 set_constructor: '[' . ']'
  184                | '[' . member_group_list ']'

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240
    ']'            shift, and go to state 303

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 304
    function_call                             go to state 251
    function_identifier                       go to state 133
    set_constructor                           go to state 255
    member_group_list                         go to state 305
    member_group                              go to state 306


state 241

  155 simple_expression: sign . simple_expression_term_operator_iterable

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression_term_operator_iterable  go to state 307
    function_call                             go to state 251
    function_identifier                       go to state 133
    set_constructor                           go to state 255


state 242

  147 factor: type_boolean .

    $default  reduce using rule 147 (factor)


state 243

  139 factor: variable_reference .

    $default  reduce using rule 139 (factor)


state 244

  141 factor: unsigned_constant .

    $default  reduce using rule 141 (factor)


state 245

  130 unsigned_constant: unsigned_number .

    $default  reduce using rule 130 (unsigned_constant)


state 246

  149 term: factor .

    $default  reduce using rule 149 (term)


state 247

  148 term: term . term_operator_list factor
  158 simple_expression_term_operator_iterable: term .

    "div"  shift, and go to state 308
    "mod"  shift, and go to state 309
    "and"  shift, and go to state 310
    '*'    shift, and go to state 311
    '/'    shift, and go to state 312

    $default  reduce using rule 158 (simple_expression_term_operator_iterable)

    term_operator_list  go to state 313


state 248

  162 expression: simple_expression .
  163           | simple_expression . relational_operator simple_expression

    "in"      shift, and go to state 314
    '='       shift, and go to state 315
    '<'       shift, and go to state 316
    '>'       shift, and go to state 317
    RE        shift, and go to state 318
    LE        shift, and go to state 319
    NOTEQUAL  shift, and go to state 320

    $default  reduce using rule 162 (expression)

    relational_operator  go to state 321


state 249

  156 simple_expression: simple_expression_term_operator_iterable .
  157 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable . simple_expression_term_operator_list term

    "or"  shift, and go to state 322
    '+'   shift, and go to state 323
    '-'   shift, and go to state 324

    $default  reduce using rule 156 (simple_expression)

    simple_expression_term_operator_list  go to state 325


state 250

  177 actual_parameter: expression .

    $default  reduce using rule 177 (actual_parameter)


state 251

  142 factor: function_call .

    $default  reduce using rule 142 (factor)


state 252

  174 actual_parameter_list: '(' actual_parameter_iterable . ')'
  175 actual_parameter_iterable: actual_parameter_iterable . ',' actual_parameter

    ')'  shift, and go to state 326
    ','  shift, and go to state 327


state 253

  176 actual_parameter_iterable: actual_parameter .

    $default  reduce using rule 176 (actual_parameter_iterable)


state 254

  178 actual_parameter: procedure_identifier .

    $default  reduce using rule 178 (actual_parameter)


state 255

  143 factor: set_constructor .

    $default  reduce using rule 143 (factor)


state 256

   38 variable_declaration: identifier_list ':' type ';' .

    $default  reduce using rule 38 (variable_declaration)


state 257

  255 parameter_declaration: "var" . identifier_list ':' type_identifier

    IDENTIFIER  shift, and go to state 19

    identifier_list  go to state 328


state 258

   49 identifier_list: identifier_list . ',' IDENTIFIER
  256 parameter_declaration: identifier_list . ':' type_identifier

    ','  shift, and go to state 31
    ':'  shift, and go to state 329


state 259

  253 formal_parameter_list_iterable_list: procedure_heading .

    $default  reduce using rule 253 (formal_parameter_list_iterable_list)


state 260

  254 formal_parameter_list_iterable_list: function_heading .

    $default  reduce using rule 254 (formal_parameter_list_iterable_list)


state 261

  249 formal_parameter_list: '(' formal_parameter_list_iterable . ')'
  250 formal_parameter_list_iterable: formal_parameter_list_iterable . ';' formal_parameter_list_iterable_list

    ';'  shift, and go to state 330
    ')'  shift, and go to state 331


state 262

  251 formal_parameter_list_iterable: formal_parameter_list_iterable_list .

    $default  reduce using rule 251 (formal_parameter_list_iterable)


state 263

  252 formal_parameter_list_iterable_list: parameter_declaration .

    $default  reduce using rule 252 (formal_parameter_list_iterable_list)


state 264

  247 function_heading: "function" IDENTIFIER ':' type .

    $default  reduce using rule 247 (function_heading)


state 265

  248 function_heading: "function" IDENTIFIER formal_parameter_list ':' . type

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 96
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "real"         shift, and go to state 97
    "integer"      shift, and go to state 98
    "longint"      shift, and go to state 99
    "word"         shift, and go to state 100
    "char"         shift, and go to state 101
    "boolean"      shift, and go to state 102
    "string"       shift, and go to state 103
    "packed"       shift, and go to state 104
    "array"        shift, and go to state 105
    "record"       shift, and go to state 106
    "of"           shift, and go to state 107
    "set"          shift, and go to state 108
    "function"     shift, and go to state 109
    "file"         shift, and go to state 110
    "nil"          shift, and go to state 111
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 112
    '^'            shift, and go to state 113

    constant                 go to state 114
    constant_identifier      go to state 72
    sign                     go to state 73
    type                     go to state 332
    simple_type              go to state 116
    ordinal_type             go to state 117
    ordinal_type_identifier  go to state 118
    enumerated_type          go to state 119
    subrange_type            go to state 120
    real_type                go to state 121
    real_type_identifier     go to state 122
    string_type              go to state 123
    structured_type          go to state 124
    type_list                go to state 125
    array_type               go to state 126
    record_type              go to state 127
    set_type                 go to state 128
    file_type                go to state 129
    pointer_type             go to state 130
    pointer_type_identifier  go to state 131
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 132
    function_identifier      go to state 133


state 266

  203 procedure_statement: IDENTIFIER actual_parameter_list .

    $default  reduce using rule 203 (procedure_statement)


state 267

  216 case_statement: "case" expression . "of" case_list "end"
  217               | "case" expression . "of" case_list otherwise_clause "end"
  218               | "case" expression . "of" case_list otherwise_clause ';' "end"
  219               | "case" expression . "of" case_list ';' "end"

    "of"  shift, and go to state 333


state 268

  204 goto_statement: "goto" label .

    $default  reduce using rule 204 (goto_statement)


state 269

  214 if_statement: "if" expression . "then" statement
  215             | "if" expression . "then" statement "else" statement

    "then"  shift, and go to state 334


state 270

  210 statement_list: statement_list . ';' statement
  227 repeat_statement: "repeat" statement_list . "until" expression

    "until"  shift, and go to state 335
    ';'      shift, and go to state 289


state 271

  228 while_statement: "while" expression . "do" statement

    "do"  shift, and go to state 336


state 272

  231 control_variable: IDENTIFIER .

    $default  reduce using rule 231 (control_variable)


state 273

  229 for_statement: "for" control_variable . ":=" initial_value "to" final_value "do" statement
  230              | "for" control_variable . ":=" initial_value "downto" final_value "do" statement

    ":="  shift, and go to state 337


state 274

  120 variable_identifier: IDENTIFIER .

    $default  reduce using rule 120 (variable_identifier)


state 275

  236 record_variable_reference_list: variable_reference .

    $default  reduce using rule 236 (record_variable_reference_list)


state 276

  234 with_statement: "with" record_variable_reference_list . "do" statement
  235 record_variable_reference_list: record_variable_reference_list . ',' variable_reference

    "do"  shift, and go to state 338
    ','   shift, and go to state 339


state 277

  190 statement: label ':' .
  191          | label ':' . simple_statement
  192          | label ':' . structured_statement

    IDENTIFIER  shift, and go to state 340
    "begin"     shift, and go to state 138
    "case"      shift, and go to state 178
    "function"  shift, and go to state 109
    "goto"      shift, and go to state 179
    "if"        shift, and go to state 180
    "repeat"    shift, and go to state 181
    "while"     shift, and go to state 182
    "for"       shift, and go to state 183
    "with"      shift, and go to state 184
    "read"      shift, and go to state 185
    "readln"    shift, and go to state 186
    "write"     shift, and go to state 187
    "writeln"   shift, and go to state 188

    $default  reduce using rule 190 (statement)

    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    simple_statement       go to state 341
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 342
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 278

  199 assignment_statement: variable_reference ":=" . expression

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 343
    function_call                             go to state 251
    function_identifier                       go to state 133
    set_constructor                           go to state 255


state 279

  126 index: '[' . expression_list ']'

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    expression_list                           go to state 344
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 345
    function_call                             go to state 251
    function_identifier                       go to state 133
    set_constructor                           go to state 255


state 280

  125 qualifier: '^' .

    $default  reduce using rule 125 (qualifier)


state 281

  129 field_designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 346


state 282

  119 variable_reference: variable_identifier qualifier_list .
  121 qualifier_list: qualifier_list . qualifier

    '['  shift, and go to state 279
    '^'  shift, and go to state 280
    '.'  shift, and go to state 281

    $default  reduce using rule 119 (variable_reference)

    qualifier         go to state 347
    index             go to state 284
    field_designator  go to state 285


state 283

  122 qualifier_list: qualifier .

    $default  reduce using rule 122 (qualifier_list)


state 284

  123 qualifier: index .

    $default  reduce using rule 123 (qualifier)


state 285

  124 qualifier: field_designator .

    $default  reduce using rule 124 (qualifier)


state 286

  200 assignment_statement: function_identifier ":=" . expression

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 348
    function_call                             go to state 251
    function_identifier                       go to state 133
    set_constructor                           go to state 255


state 287

  202 procedure_statement: procedure_identifier actual_parameter_list .

    $default  reduce using rule 202 (procedure_statement)


state 288

  209 compound_statement: "begin" statement_list "end" .

    $default  reduce using rule 209 (compound_statement)


state 289

  210 statement_list: statement_list ';' . statement

    DECIMAL_INT  shift, and go to state 33
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 138
    "case"       shift, and go to state 178
    "function"   shift, and go to state 109
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 189 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 349
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 290

  237 procedure_declaration: procedure_heading ';' procedure_body ';' .

    $default  reduce using rule 237 (procedure_declaration)


state 291

  243 function_declaration: function_heading ';' function_body ';' .

    $default  reduce using rule 243 (function_declaration)


state 292

   73 string_type: "string" '[' DECIMAL_INT ']' .

    $default  reduce using rule 73 (string_type)


state 293

   81 index_type_list: index_type_list ',' . ordinal_type

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 219
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "integer"      shift, and go to state 98
    "longint"      shift, and go to state 99
    "word"         shift, and go to state 100
    "char"         shift, and go to state 101
    "boolean"      shift, and go to state 102
    "function"     shift, and go to state 109
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 112

    constant                 go to state 114
    constant_identifier      go to state 72
    sign                     go to state 73
    ordinal_type             go to state 350
    ordinal_type_identifier  go to state 118
    enumerated_type          go to state 119
    subrange_type            go to state 120
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 132
    function_identifier      go to state 133


state 294

   80 array_type: "array" '[' index_type_list ']' . "of" type

    "of"  shift, and go to state 351


state 295

   95 variant_part: "case" IDENTIFIER ':' . tag_field_type "of" variant_list

    IDENTIFIER  shift, and go to state 352

    tag_field_type  go to state 353


state 296

   94 variant_part: "case" tag_field_type "of" . variant_list

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 66
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70

    constant             go to state 354
    constant_identifier  go to state 72
    sign                 go to state 73
    variant_list         go to state 355
    variant              go to state 356
    constant_list        go to state 357
    unsigned_number      go to state 74
    signed_number        go to state 75


state 297

   93 field_declaration: identifier_list ':' type .

    $default  reduce using rule 93 (field_declaration)


state 298

   91 fixed_part: fixed_part ';' field_declaration .

    $default  reduce using rule 91 (fixed_part)


state 299

   87 field_list: fixed_part ';' variant_part .
   88           | fixed_part ';' variant_part . ';'

    ';'  shift, and go to state 358

    $default  reduce using rule 87 (field_list)


state 300

  145 factor: "not" factor .

    $default  reduce using rule 145 (factor)


state 301

  140 factor: '@' variable_reference .

    $default  reduce using rule 140 (factor)


state 302

  144 factor: '(' expression . ')'

    ')'  shift, and go to state 359


state 303

  183 set_constructor: '[' ']' .

    $default  reduce using rule 183 (set_constructor)


state 304

  187 member_group: expression .
  188             | expression . ".." expression

    ".."  shift, and go to state 360

    $default  reduce using rule 187 (member_group)


state 305

  184 set_constructor: '[' member_group_list . ']'
  185 member_group_list: member_group_list . ',' member_group

    ','  shift, and go to state 361
    ']'  shift, and go to state 362


state 306

  186 member_group_list: member_group .

    $default  reduce using rule 186 (member_group_list)


state 307

  155 simple_expression: sign simple_expression_term_operator_iterable .
  157 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable . simple_expression_term_operator_list term

    "or"  shift, and go to state 322
    '+'   shift, and go to state 323
    '-'   shift, and go to state 324

    $default  reduce using rule 155 (simple_expression)

    simple_expression_term_operator_list  go to state 325


state 308

  152 term_operator_list: "div" .

    $default  reduce using rule 152 (term_operator_list)


state 309

  153 term_operator_list: "mod" .

    $default  reduce using rule 153 (term_operator_list)


state 310

  154 term_operator_list: "and" .

    $default  reduce using rule 154 (term_operator_list)


state 311

  150 term_operator_list: '*' .

    $default  reduce using rule 150 (term_operator_list)


state 312

  151 term_operator_list: '/' .

    $default  reduce using rule 151 (term_operator_list)


state 313

  148 term: term term_operator_list . factor

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    type_boolean         go to state 242
    variable_reference   go to state 243
    variable_identifier  go to state 191
    unsigned_constant    go to state 244
    unsigned_number      go to state 245
    factor               go to state 363
    function_call        go to state 251
    function_identifier  go to state 133
    set_constructor      go to state 255


state 314

  170 relational_operator: "in" .

    $default  reduce using rule 170 (relational_operator)


state 315

  164 relational_operator: '=' .

    $default  reduce using rule 164 (relational_operator)


state 316

  165 relational_operator: '<' .

    $default  reduce using rule 165 (relational_operator)


state 317

  166 relational_operator: '>' .

    $default  reduce using rule 166 (relational_operator)


state 318

  168 relational_operator: RE .

    $default  reduce using rule 168 (relational_operator)


state 319

  167 relational_operator: LE .

    $default  reduce using rule 167 (relational_operator)


state 320

  169 relational_operator: NOTEQUAL .

    $default  reduce using rule 169 (relational_operator)


state 321

  163 expression: simple_expression relational_operator . simple_expression

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 364
    simple_expression_term_operator_iterable  go to state 249
    function_call                             go to state 251
    function_identifier                       go to state 133
    set_constructor                           go to state 255


state 322

  161 simple_expression_term_operator_list: "or" .

    $default  reduce using rule 161 (simple_expression_term_operator_list)


state 323

  159 simple_expression_term_operator_list: '+' .

    $default  reduce using rule 159 (simple_expression_term_operator_list)


state 324

  160 simple_expression_term_operator_list: '-' .

    $default  reduce using rule 160 (simple_expression_term_operator_list)


state 325

  157 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list . term

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    type_boolean         go to state 242
    variable_reference   go to state 243
    variable_identifier  go to state 191
    unsigned_constant    go to state 244
    unsigned_number      go to state 245
    factor               go to state 246
    term                 go to state 365
    function_call        go to state 251
    function_identifier  go to state 133
    set_constructor      go to state 255


state 326

  174 actual_parameter_list: '(' actual_parameter_iterable ')' .

    $default  reduce using rule 174 (actual_parameter_list)


state 327

  175 actual_parameter_iterable: actual_parameter_iterable ',' . actual_parameter

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "read"         shift, and go to state 185
    "readln"       shift, and go to state 186
    "write"        shift, and go to state 187
    "writeln"      shift, and go to state 188
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 250
    function_call                             go to state 251
    function_identifier                       go to state 133
    actual_parameter                          go to state 366
    procedure_identifier                      go to state 254
    set_constructor                           go to state 255


state 328

   49 identifier_list: identifier_list . ',' IDENTIFIER
  255 parameter_declaration: "var" identifier_list . ':' type_identifier

    ','  shift, and go to state 31
    ':'  shift, and go to state 367


state 329

  256 parameter_declaration: identifier_list ':' . type_identifier

    IDENTIFIER  shift, and go to state 368

    type_identifier  go to state 369


state 330

  250 formal_parameter_list_iterable: formal_parameter_list_iterable ';' . formal_parameter_list_iterable_list

    IDENTIFIER   shift, and go to state 19
    "var"        shift, and go to state 257
    "function"   shift, and go to state 81
    "procedure"  shift, and go to state 82

    identifier_list                      go to state 258
    procedure_heading                    go to state 259
    function_heading                     go to state 260
    formal_parameter_list_iterable_list  go to state 370
    parameter_declaration                go to state 263


state 331

  249 formal_parameter_list: '(' formal_parameter_list_iterable ')' .

    $default  reduce using rule 249 (formal_parameter_list)


state 332

  248 function_heading: "function" IDENTIFIER formal_parameter_list ':' type .

    $default  reduce using rule 248 (function_heading)


state 333

  216 case_statement: "case" expression "of" . case_list "end"
  217               | "case" expression "of" . case_list otherwise_clause "end"
  218               | "case" expression "of" . case_list otherwise_clause ';' "end"
  219               | "case" expression "of" . case_list ';' "end"

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 66
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70

    constant             go to state 354
    constant_identifier  go to state 72
    sign                 go to state 73
    constant_list        go to state 371
    unsigned_number      go to state 74
    signed_number        go to state 75
    case_list            go to state 372
    case                 go to state 373


state 334

  214 if_statement: "if" expression "then" . statement
  215             | "if" expression "then" . statement "else" statement

    DECIMAL_INT  shift, and go to state 33
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 138
    "case"       shift, and go to state 178
    "function"   shift, and go to state 109
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 189 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 374
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 335

  227 repeat_statement: "repeat" statement_list "until" . expression

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 375
    function_call                             go to state 251
    function_identifier                       go to state 133
    set_constructor                           go to state 255


state 336

  228 while_statement: "while" expression "do" . statement

    DECIMAL_INT  shift, and go to state 33
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 138
    "case"       shift, and go to state 178
    "function"   shift, and go to state 109
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 189 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 376
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 337

  229 for_statement: "for" control_variable ":=" . initial_value "to" final_value "do" statement
  230              | "for" control_variable ":=" . initial_value "downto" final_value "do" statement

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 377
    function_call                             go to state 251
    function_identifier                       go to state 133
    set_constructor                           go to state 255
    initial_value                             go to state 378


state 338

  234 with_statement: "with" record_variable_reference_list "do" . statement

    DECIMAL_INT  shift, and go to state 33
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 138
    "case"       shift, and go to state 178
    "function"   shift, and go to state 109
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 189 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 379
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 339

  235 record_variable_reference_list: record_variable_reference_list ',' . variable_reference

    IDENTIFIER  shift, and go to state 274

    variable_reference   go to state 380
    variable_identifier  go to state 191


state 340

  120 variable_identifier: IDENTIFIER .
  173 function_identifier: IDENTIFIER .
  203 procedure_statement: IDENTIFIER . actual_parameter_list

    '('  shift, and go to state 170

    ":="      reduce using rule 173 (function_identifier)
    $default  reduce using rule 120 (variable_identifier)

    actual_parameter_list  go to state 266


state 341

  191 statement: label ':' simple_statement .

    $default  reduce using rule 191 (statement)


state 342

  192 statement: label ':' structured_statement .

    $default  reduce using rule 192 (statement)


state 343

  199 assignment_statement: variable_reference ":=" expression .

    $default  reduce using rule 199 (assignment_statement)


state 344

  126 index: '[' expression_list . ']'
  127 expression_list: expression_list . ',' expression

    ','  shift, and go to state 381
    ']'  shift, and go to state 382


state 345

  128 expression_list: expression .

    $default  reduce using rule 128 (expression_list)


state 346

  129 field_designator: '.' IDENTIFIER .

    $default  reduce using rule 129 (field_designator)


state 347

  121 qualifier_list: qualifier_list qualifier .

    $default  reduce using rule 121 (qualifier_list)


state 348

  200 assignment_statement: function_identifier ":=" expression .

    $default  reduce using rule 200 (assignment_statement)


state 349

  210 statement_list: statement_list ';' statement .

    $default  reduce using rule 210 (statement_list)


state 350

   81 index_type_list: index_type_list ',' ordinal_type .

    $default  reduce using rule 81 (index_type_list)


state 351

   80 array_type: "array" '[' index_type_list ']' "of" . type

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 96
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "real"         shift, and go to state 97
    "integer"      shift, and go to state 98
    "longint"      shift, and go to state 99
    "word"         shift, and go to state 100
    "char"         shift, and go to state 101
    "boolean"      shift, and go to state 102
    "string"       shift, and go to state 103
    "packed"       shift, and go to state 104
    "array"        shift, and go to state 105
    "record"       shift, and go to state 106
    "of"           shift, and go to state 107
    "set"          shift, and go to state 108
    "function"     shift, and go to state 109
    "file"         shift, and go to state 110
    "nil"          shift, and go to state 111
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '('            shift, and go to state 112
    '^'            shift, and go to state 113

    constant                 go to state 114
    constant_identifier      go to state 72
    sign                     go to state 73
    type                     go to state 383
    simple_type              go to state 116
    ordinal_type             go to state 117
    ordinal_type_identifier  go to state 118
    enumerated_type          go to state 119
    subrange_type            go to state 120
    real_type                go to state 121
    real_type_identifier     go to state 122
    string_type              go to state 123
    structured_type          go to state 124
    type_list                go to state 125
    array_type               go to state 126
    record_type              go to state 127
    set_type                 go to state 128
    file_type                go to state 129
    pointer_type             go to state 130
    pointer_type_identifier  go to state 131
    unsigned_number          go to state 74
    signed_number            go to state 75
    function_call            go to state 132
    function_identifier      go to state 133


state 352

  102 tag_field_type: IDENTIFIER .

    $default  reduce using rule 102 (tag_field_type)


state 353

   95 variant_part: "case" IDENTIFIER ':' tag_field_type . "of" variant_list

    "of"  shift, and go to state 384


state 354

  101 constant_list: constant .

    $default  reduce using rule 101 (constant_list)


state 355

   94 variant_part: "case" tag_field_type "of" variant_list .
   96 variant_list: variant_list . ';' variant

    ';'  shift, and go to state 385

    ';'       [reduce using rule 94 (variant_part)]
    $default  reduce using rule 94 (variant_part)


state 356

   97 variant_list: variant .

    $default  reduce using rule 97 (variant_list)


state 357

   98 variant: constant_list . ':' '(' ')'
   99        | constant_list . ':' '(' field_list ')'
  100 constant_list: constant_list . ',' constant

    ','  shift, and go to state 386
    ':'  shift, and go to state 387


state 358

   88 field_list: fixed_part ';' variant_part ';' .

    $default  reduce using rule 88 (field_list)


state 359

  144 factor: '(' expression ')' .

    $default  reduce using rule 144 (factor)


state 360

  188 member_group: expression ".." . expression

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 388
    function_call                             go to state 251
    function_identifier                       go to state 133
    set_constructor                           go to state 255


state 361

  185 member_group_list: member_group_list ',' . member_group

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 304
    function_call                             go to state 251
    function_identifier                       go to state 133
    set_constructor                           go to state 255
    member_group                              go to state 389


state 362

  184 set_constructor: '[' member_group_list ']' .

    $default  reduce using rule 184 (set_constructor)


state 363

  148 term: term term_operator_list factor .

    $default  reduce using rule 148 (term)


state 364

  163 expression: simple_expression relational_operator simple_expression .

    $default  reduce using rule 163 (expression)


state 365

  148 term: term . term_operator_list factor
  157 simple_expression_term_operator_iterable: simple_expression_term_operator_iterable simple_expression_term_operator_list term .

    "div"  shift, and go to state 308
    "mod"  shift, and go to state 309
    "and"  shift, and go to state 310
    '*'    shift, and go to state 311
    '/'    shift, and go to state 312

    $default  reduce using rule 157 (simple_expression_term_operator_iterable)

    term_operator_list  go to state 313


state 366

  175 actual_parameter_iterable: actual_parameter_iterable ',' actual_parameter .

    $default  reduce using rule 175 (actual_parameter_iterable)


state 367

  255 parameter_declaration: "var" identifier_list ':' . type_identifier

    IDENTIFIER  shift, and go to state 368

    type_identifier  go to state 390


state 368

  257 type_identifier: IDENTIFIER .

    $default  reduce using rule 257 (type_identifier)


state 369

  256 parameter_declaration: identifier_list ':' type_identifier .

    $default  reduce using rule 256 (parameter_declaration)


state 370

  250 formal_parameter_list_iterable: formal_parameter_list_iterable ';' formal_parameter_list_iterable_list .

    $default  reduce using rule 250 (formal_parameter_list_iterable)


state 371

  100 constant_list: constant_list . ',' constant
  222 case: constant_list . ':' statement

    ','  shift, and go to state 386
    ':'  shift, and go to state 391


state 372

  216 case_statement: "case" expression "of" case_list . "end"
  217               | "case" expression "of" case_list . otherwise_clause "end"
  218               | "case" expression "of" case_list . otherwise_clause ';' "end"
  219               | "case" expression "of" case_list . ';' "end"
  220 case_list: case_list . ';' case

    "end"  shift, and go to state 392
    ';'    shift, and go to state 393

    otherwise_clause  go to state 394


state 373

  221 case_list: case .

    $default  reduce using rule 221 (case_list)


state 374

  214 if_statement: "if" expression "then" statement .
  215             | "if" expression "then" statement . "else" statement

    "else"  shift, and go to state 395

    "else"    [reduce using rule 214 (if_statement)]
    $default  reduce using rule 214 (if_statement)


state 375

  227 repeat_statement: "repeat" statement_list "until" expression .

    $default  reduce using rule 227 (repeat_statement)


state 376

  228 while_statement: "while" expression "do" statement .

    $default  reduce using rule 228 (while_statement)


state 377

  232 initial_value: expression .

    $default  reduce using rule 232 (initial_value)


state 378

  229 for_statement: "for" control_variable ":=" initial_value . "to" final_value "do" statement
  230              | "for" control_variable ":=" initial_value . "downto" final_value "do" statement

    "to"      shift, and go to state 396
    "downto"  shift, and go to state 397


state 379

  234 with_statement: "with" record_variable_reference_list "do" statement .

    $default  reduce using rule 234 (with_statement)


state 380

  235 record_variable_reference_list: record_variable_reference_list ',' variable_reference .

    $default  reduce using rule 235 (record_variable_reference_list)


state 381

  127 expression_list: expression_list ',' . expression

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 398
    function_call                             go to state 251
    function_identifier                       go to state 133
    set_constructor                           go to state 255


state 382

  126 index: '[' expression_list ']' .

    $default  reduce using rule 126 (index)


state 383

   80 array_type: "array" '[' index_type_list ']' "of" type .

    $default  reduce using rule 80 (array_type)


state 384

   95 variant_part: "case" IDENTIFIER ':' tag_field_type "of" . variant_list

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 66
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70

    constant             go to state 354
    constant_identifier  go to state 72
    sign                 go to state 73
    variant_list         go to state 399
    variant              go to state 356
    constant_list        go to state 357
    unsigned_number      go to state 74
    signed_number        go to state 75


state 385

   96 variant_list: variant_list ';' . variant

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 66
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70

    constant             go to state 354
    constant_identifier  go to state 72
    sign                 go to state 73
    variant              go to state 400
    constant_list        go to state 357
    unsigned_number      go to state 74
    signed_number        go to state 75


state 386

  100 constant_list: constant_list ',' . constant

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 66
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70

    constant             go to state 401
    constant_identifier  go to state 72
    sign                 go to state 73
    unsigned_number      go to state 74
    signed_number        go to state 75


state 387

   98 variant: constant_list ':' . '(' ')'
   99        | constant_list ':' . '(' field_list ')'

    '('  shift, and go to state 402


state 388

  188 member_group: expression ".." expression .

    $default  reduce using rule 188 (member_group)


state 389

  185 member_group_list: member_group_list ',' member_group .

    $default  reduce using rule 185 (member_group_list)


state 390

  255 parameter_declaration: "var" identifier_list ':' type_identifier .

    $default  reduce using rule 255 (parameter_declaration)


state 391

  222 case: constant_list ':' . statement

    DECIMAL_INT  shift, and go to state 33
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 138
    "case"       shift, and go to state 178
    "function"   shift, and go to state 109
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 189 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 403
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 392

  216 case_statement: "case" expression "of" case_list "end" .

    $default  reduce using rule 216 (case_statement)


state 393

  219 case_statement: "case" expression "of" case_list ';' . "end"
  220 case_list: case_list ';' . case
  223 otherwise_clause: ';' . "otherwise" statement

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 66
    QUOTED_STRING  shift, and go to state 67
    QUOTED_CHAR    shift, and go to state 68
    "end"          shift, and go to state 404
    "otherwise"    shift, and go to state 405
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70

    constant             go to state 354
    constant_identifier  go to state 72
    sign                 go to state 73
    constant_list        go to state 371
    unsigned_number      go to state 74
    signed_number        go to state 75
    case                 go to state 406


state 394

  217 case_statement: "case" expression "of" case_list otherwise_clause . "end"
  218               | "case" expression "of" case_list otherwise_clause . ';' "end"

    "end"  shift, and go to state 407
    ';'    shift, and go to state 408


state 395

  215 if_statement: "if" expression "then" statement "else" . statement

    DECIMAL_INT  shift, and go to state 33
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 138
    "case"       shift, and go to state 178
    "function"   shift, and go to state 109
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 189 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 409
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 396

  229 for_statement: "for" control_variable ":=" initial_value "to" . final_value "do" statement

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 410
    function_call                             go to state 251
    function_identifier                       go to state 133
    set_constructor                           go to state 255
    final_value                               go to state 411


state 397

  230 for_statement: "for" control_variable ":=" initial_value "downto" . final_value "do" statement

    DECIMAL_INT    shift, and go to state 63
    HEXADECIMAL    shift, and go to state 64
    REAL_DECIMAL   shift, and go to state 65
    IDENTIFIER     shift, and go to state 231
    QUOTED_STRING  shift, and go to state 232
    QUOTED_CHAR    shift, and go to state 233
    "true"         shift, and go to state 234
    "false"        shift, and go to state 235
    "function"     shift, and go to state 109
    "nil"          shift, and go to state 236
    "not"          shift, and go to state 237
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '@'            shift, and go to state 238
    '('            shift, and go to state 239
    '['            shift, and go to state 240

    sign                                      go to state 241
    type_boolean                              go to state 242
    variable_reference                        go to state 243
    variable_identifier                       go to state 191
    unsigned_constant                         go to state 244
    unsigned_number                           go to state 245
    factor                                    go to state 246
    term                                      go to state 247
    simple_expression                         go to state 248
    simple_expression_term_operator_iterable  go to state 249
    expression                                go to state 410
    function_call                             go to state 251
    function_identifier                       go to state 133
    set_constructor                           go to state 255
    final_value                               go to state 412


state 398

  127 expression_list: expression_list ',' expression .

    $default  reduce using rule 127 (expression_list)


state 399

   95 variant_part: "case" IDENTIFIER ':' tag_field_type "of" variant_list .
   96 variant_list: variant_list . ';' variant

    ';'  shift, and go to state 385

    ';'       [reduce using rule 95 (variant_part)]
    $default  reduce using rule 95 (variant_part)


state 400

   96 variant_list: variant_list ';' variant .

    $default  reduce using rule 96 (variant_list)


state 401

  100 constant_list: constant_list ',' constant .

    $default  reduce using rule 100 (constant_list)


state 402

   98 variant: constant_list ':' '(' . ')'
   99        | constant_list ':' '(' . field_list ')'

    IDENTIFIER  shift, and go to state 19
    "case"      shift, and go to state 148
    ')'         shift, and go to state 413

    identifier_list    go to state 149
    field_list         go to state 414
    fixed_part         go to state 151
    field_declaration  go to state 152
    variant_part       go to state 153


state 403

  222 case: constant_list ':' statement .

    $default  reduce using rule 222 (case)


state 404

  219 case_statement: "case" expression "of" case_list ';' "end" .

    $default  reduce using rule 219 (case_statement)


state 405

  223 otherwise_clause: ';' "otherwise" . statement

    DECIMAL_INT  shift, and go to state 33
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 138
    "case"       shift, and go to state 178
    "function"   shift, and go to state 109
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 189 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 415
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 406

  220 case_list: case_list ';' case .

    $default  reduce using rule 220 (case_list)


state 407

  217 case_statement: "case" expression "of" case_list otherwise_clause "end" .

    $default  reduce using rule 217 (case_statement)


state 408

  218 case_statement: "case" expression "of" case_list otherwise_clause ';' . "end"

    "end"  shift, and go to state 416


state 409

  215 if_statement: "if" expression "then" statement "else" statement .

    $default  reduce using rule 215 (if_statement)


state 410

  233 final_value: expression .

    $default  reduce using rule 233 (final_value)


state 411

  229 for_statement: "for" control_variable ":=" initial_value "to" final_value . "do" statement

    "do"  shift, and go to state 417


state 412

  230 for_statement: "for" control_variable ":=" initial_value "downto" final_value . "do" statement

    "do"  shift, and go to state 418


state 413

   98 variant: constant_list ':' '(' ')' .

    $default  reduce using rule 98 (variant)


state 414

   99 variant: constant_list ':' '(' field_list . ')'

    ')'  shift, and go to state 419


state 415

  223 otherwise_clause: ';' "otherwise" statement .

    $default  reduce using rule 223 (otherwise_clause)


state 416

  218 case_statement: "case" expression "of" case_list otherwise_clause ';' "end" .

    $default  reduce using rule 218 (case_statement)


state 417

  229 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" . statement

    DECIMAL_INT  shift, and go to state 33
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 138
    "case"       shift, and go to state 178
    "function"   shift, and go to state 109
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 189 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 420
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 418

  230 for_statement: "for" control_variable ":=" initial_value "downto" final_value "do" . statement

    DECIMAL_INT  shift, and go to state 33
    IDENTIFIER   shift, and go to state 177
    "begin"      shift, and go to state 138
    "case"       shift, and go to state 178
    "function"   shift, and go to state 109
    "goto"       shift, and go to state 179
    "if"         shift, and go to state 180
    "repeat"     shift, and go to state 181
    "while"      shift, and go to state 182
    "for"        shift, and go to state 183
    "with"       shift, and go to state 184
    "read"       shift, and go to state 185
    "readln"     shift, and go to state 186
    "write"      shift, and go to state 187
    "writeln"    shift, and go to state 188

    $default  reduce using rule 189 (statement)

    label                  go to state 189
    variable_reference     go to state 190
    variable_identifier    go to state 191
    function_identifier    go to state 192
    procedure_identifier   go to state 193
    statement              go to state 421
    simple_statement       go to state 195
    assignment_statement   go to state 196
    procedure_statement    go to state 197
    goto_statement         go to state 198
    structured_statement   go to state 199
    compound_statement     go to state 200
    conditional_statement  go to state 202
    if_statement           go to state 203
    case_statement         go to state 204
    repetitive_statement   go to state 205
    repeat_statement       go to state 206
    while_statement        go to state 207
    for_statement          go to state 208
    with_statement         go to state 209


state 419

   99 variant: constant_list ':' '(' field_list ')' .

    $default  reduce using rule 99 (variant)


state 420

  229 for_statement: "for" control_variable ":=" initial_value "to" final_value "do" statement .

    $default  reduce using rule 229 (for_statement)


state 421

  230 for_statement: "for" control_variable ":=" initial_value "downto" final_value "do" statement .

    $default  reduce using rule 230 (for_statement)
